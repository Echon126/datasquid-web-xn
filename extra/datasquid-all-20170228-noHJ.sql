-- --------------------------------------------------------
-- Host:                         10.100.130.156
-- Server version:               5.7.17-0ubuntu0.16.04.1 - (Ubuntu)
-- Server OS:                    Linux
-- HeidiSQL version:             7.0.0.4053
-- Date/time:                    2017-02-28 10:41:53
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET FOREIGN_KEY_CHECKS=0 */;

-- Dumping structure for table datasquid.ds_customs
DROP TABLE IF EXISTS `ds_customs`;
CREATE TABLE IF NOT EXISTS `ds_customs` (
  `gqid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '关区ID',
  `name` varchar(50) NOT NULL COMMENT '关区名称',
  `code` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '关区代码',
  `serial_no` int(10) NOT NULL DEFAULT '0' COMMENT '排序号',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`gqid`),
  KEY `create_time` (`create_time`),
  KEY `code` (`code`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 COMMENT='关区代码维护表';

-- Dumping data for table datasquid.ds_customs: ~4 rows (approximately)
DELETE FROM `ds_customs`;
/*!40000 ALTER TABLE `ds_customs` DISABLE KEYS */;
INSERT INTO `ds_customs` (`gqid`, `name`, `code`, `serial_no`, `create_time`) VALUES
	(12, '新郑综保区', 4612, 0, '2017-02-15 15:23:32'),
	(13, '郑州机场', 4604, 0, '2017-02-15 15:23:47'),
	(14, '郑州国际陆港', 4606, 0, '2017-02-15 15:24:01'),
	(15, '河南保税物流中心', 4605, 0, '2017-02-15 15:31:34');
/*!40000 ALTER TABLE `ds_customs` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_exrate
DROP TABLE IF EXISTS `ds_exrate`;
CREATE TABLE IF NOT EXISTS `ds_exrate` (
  `erid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '汇率折算ID',
  `rid` int(10) unsigned NOT NULL COMMENT '汇率基础信息表ID',
  `year` year(4) NOT NULL COMMENT '汇率年度',
  `month` varchar(10) NOT NULL COMMENT '汇率月份',
  `rate` varchar(50) NOT NULL DEFAULT '0.0000' COMMENT '汇率折算值',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`erid`),
  KEY `create_time` (`create_time`),
  KEY `rid` (`rid`),
  KEY `month` (`month`),
  KEY `year` (`year`)
) ENGINE=InnoDB AUTO_INCREMENT=362 DEFAULT CHARSET=utf8 COMMENT='汇率折算表';

-- Dumping data for table datasquid.ds_exrate: ~204 rows (approximately)
DELETE FROM `ds_exrate`;
/*!40000 ALTER TABLE `ds_exrate` DISABLE KEYS */;
INSERT INTO `ds_exrate` (`erid`, `rid`, `year`, `month`, `rate`, `create_time`) VALUES
	(152, 26, '2017', '01', '0.145798098792792', '2017-02-17 16:47:40'),
	(153, 25, '2017', '01', '1', '2017-02-17 16:48:05'),
	(154, 12, '2017', '01', '1.26488598588674', '2017-02-17 16:49:01'),
	(155, 21, '2017', '01', '0.75848544934974', '2017-02-17 16:50:15'),
	(156, 22, '2017', '01', '0.128907389047647', '2017-02-17 16:50:42'),
	(157, 11, '2017', '01', '0.000861843700377086', '2017-02-17 16:51:02'),
	(158, 15, '2017', '01', '1.07629614509827', '2017-02-17 16:51:36'),
	(159, 17, '2017', '01', '0.00883478159444801', '2017-02-17 16:51:46'),
	(160, 16, '2017', '01', '0.0168591696106373', '2017-02-17 16:53:49'),
	(161, 24, '2017', '01', '0.0319728869918309', '2017-02-17 16:54:02'),
	(162, 23, '2017', '01', '0.766081530296845', '2017-02-17 16:54:56'),
	(163, 14, '2017', '01', '0.5625', '2017-02-17 16:59:25'),
	(164, 23, '2016', '01', '0.741040795733026', '2017-02-17 17:03:15'),
	(165, 21, '2016', '01', '0.723035894478881', '2017-02-17 17:03:34'),
	(166, 17, '2016', '01', '0.00859031281533804', '2017-02-17 17:03:46'),
	(167, 11, '2016', '01', '0.00082985742709161', '2017-02-17 17:03:56'),
	(168, 12, '2016', '01', '1.22666858872712', '2017-02-17 17:04:03'),
	(169, 25, '2016', '01', '1', '2017-02-17 17:04:08'),
	(170, 22, '2016', '01', '0.723035894478881', '2017-02-17 17:04:28'),
	(171, 26, '2016', '01', '0.144154533660084', '2017-02-17 17:04:51'),
	(172, 15, '2016', '01', '1.0533083465475', '2017-02-17 17:05:04'),
	(173, 18, '2016', '01', '0.691869684301571', '2017-02-17 17:05:50'),
	(174, 24, '2016', '01', '0.0310583119807438', '2017-02-17 17:06:00'),
	(175, 16, '2016', '01', '0.0165874086553384', '2017-02-17 17:06:09'),
	(176, 11, '2016', '12', '0.00082985742709161', '2017-02-17 17:06:23'),
	(177, 12, '2016', '12', '1.22666858872712', '2017-02-17 17:06:27'),
	(178, 25, '2016', '12', '1', '2017-02-17 17:06:32'),
	(179, 21, '2016', '12', '0.723035894478881', '2017-02-17 17:06:47'),
	(180, 22, '2016', '12', '0.723035894478881', '2017-02-17 17:06:53'),
	(181, 15, '2016', '12', '1.0533083465475', '2017-02-17 17:06:57'),
	(182, 17, '2016', '12', '0.00859031281533804', '2017-02-17 17:07:02'),
	(183, 18, '2016', '12', '0.691869684301571', '2017-02-17 17:07:06'),
	(184, 24, '2016', '12', '0.0310583119807438', '2017-02-17 17:07:14'),
	(185, 16, '2016', '12', '0.0165874086553384', '2017-02-17 17:07:21'),
	(186, 23, '2016', '12', '0.741040795733026', '2017-02-17 17:07:27'),
	(187, 26, '2016', '12', '0.144154533660084', '2017-02-17 17:07:33'),
	(188, 21, '2016', '09', '0.762586480577436', '2017-02-17 17:10:44'),
	(189, 25, '2016', '09', '1', '2017-02-17 17:10:47'),
	(190, 12, '2016', '09', '1.2960256371859', '2017-02-17 17:10:58'),
	(191, 11, '2016', '09', '0.000906696038008872', '2017-02-17 17:11:06'),
	(192, 22, '2016', '09', '0.128930186588397', '2017-02-17 17:11:19'),
	(193, 15, '2016', '09', '1.12132738326994', '2017-02-17 17:11:28'),
	(194, 17, '2016', '09', '0.00988529156308964', '2017-02-17 17:11:36'),
	(195, 18, '2016', '09', '0.732187247297014', '2017-02-17 17:11:59'),
	(196, 26, '2016', '09', '0.149749917637545', '2017-02-17 17:12:15'),
	(197, 23, '2016', '09', '0.759786157117614', '2017-02-17 17:12:29'),
	(198, 16, '2016', '09', '0.0158321440421992', '2017-02-17 17:12:49'),
	(199, 14, '2016', '09', '0', '2017-02-17 17:12:59'),
	(200, 24, '2016', '09', '0.0317712470214456', '2017-02-17 17:13:11'),
	(201, 25, '2016', '11', '1', '2017-02-17 17:14:53'),
	(202, 11, '2016', '11', '0.000857161005690379', '2017-02-17 17:15:02'),
	(203, 12, '2016', '11', '1.25005445436724', '2017-02-17 17:15:18'),
	(204, 21, '2016', '11', '0.749306614390474', '2017-02-17 17:15:32'),
	(205, 22, '2016', '11', '0.12893922892616', '2017-02-17 17:15:44'),
	(206, 15, '2016', '11', '1.06565018514485', '2017-02-17 17:15:54'),
	(207, 17, '2016', '11', '0.00890379728454222', '2017-02-17 17:16:02'),
	(208, 18, '2016', '11', '0.702795324185', '2017-02-17 17:16:32'),
	(209, 24, '2016', '11', '0.0313961885027158', '2017-02-17 17:16:56'),
	(210, 16, '2016', '11', '0.0153536388984761', '2017-02-17 17:17:14'),
	(211, 23, '2016', '11', '0.745400421113773', '2017-02-17 17:17:26'),
	(212, 26, '2016', '11', '0.145211645974007', '2017-02-17 17:17:34'),
	(213, 21, '2016', '10', '0.759494980854807', '2017-02-17 17:18:13'),
	(214, 25, '2016', '10', '1', '2017-02-17 17:18:17'),
	(215, 12, '2016', '10', '1.21968924173209', '2017-02-17 17:18:28'),
	(216, 11, '2016', '10', '0.000872826356229145', '2017-02-17 17:18:49'),
	(217, 22, '2016', '10', '0.128952854038231', '2017-02-17 17:19:14'),
	(218, 15, '2016', '10', '1.0983575050635', '2017-02-17 17:19:25'),
	(219, 17, '2016', '10', '0.00955500362206354', '2017-02-17 17:19:32'),
	(220, 24, '2016', '10', '0.0316005688102386', '2017-02-17 17:19:46'),
	(221, 18, '2016', '10', '0.71898700492305', '2017-02-17 17:19:56'),
	(222, 16, '2016', '10', '0.0158712737891005', '2017-02-17 17:20:17'),
	(223, 23, '2016', '10', '0.745435460741266', '2017-02-17 17:20:25'),
	(224, 26, '2016', '10', '0.147839328218093', '2017-02-17 17:20:33'),
	(225, 21, '2016', '08', '0.752211992586836', '2017-02-17 17:21:49'),
	(226, 23, '2016', '08', '0.763062712979016', '2017-02-17 17:22:01'),
	(227, 26, '2016', '08', '0.149458958569977', '2017-02-17 17:22:09'),
	(228, 16, '2016', '08', '0.0153338420611446', '2017-02-17 17:22:25'),
	(229, 24, '2016', '08', '0.031501023783273', '2017-02-17 17:22:37'),
	(230, 11, '2016', '08', '0.000893198820115799', '2017-02-17 17:22:49'),
	(231, 12, '2016', '08', '1.30893166736414', '2017-02-17 17:22:59'),
	(232, 25, '2016', '08', '1', '2017-02-17 17:23:00'),
	(233, 22, '2016', '08', '0.128908351766605', '2017-02-17 17:23:08'),
	(234, 15, '2016', '08', '1.11499372272374', '2017-02-17 17:23:15'),
	(235, 13, '2016', '08', '0', '2017-02-17 17:23:21'),
	(236, 17, '2016', '08', '0.00972006337059843', '2017-02-17 17:23:27'),
	(237, 18, '2016', '08', '0.733260596640163', '2017-02-17 17:23:56'),
	(238, 21, '2016', '07', '0.751379471064937', '2017-02-17 17:24:38'),
	(239, 25, '2016', '07', '1', '2017-02-17 17:24:40'),
	(240, 11, '2016', '07', '0.000889230362833341', '2017-02-17 17:24:52'),
	(241, 12, '2016', '07', '1.31576731668446', '2017-02-17 17:25:02'),
	(242, 22, '2016', '07', '0.128927545819489', '2017-02-17 17:25:08'),
	(243, 15, '2016', '07', '1.10844822660913', '2017-02-17 17:25:18'),
	(244, 17, '2016', '07', '0.00955541188675557', '2017-02-17 17:25:24'),
	(245, 18, '2016', '07', '0.739787403587376', '2017-02-17 17:25:43'),
	(246, 26, '2016', '07', '0.150351069747861', '2017-02-17 17:25:50'),
	(247, 24, '2016', '07', '0.0313528766264305', '2017-02-17 17:26:03'),
	(248, 16, '2016', '07', '0.0150000069585032', '2017-02-17 17:26:16'),
	(249, 23, '2016', '07', '0.760460675677707', '2017-02-17 17:26:23'),
	(250, 21, '2016', '06', '0.745747376040536', '2017-02-17 17:26:47'),
	(251, 23, '2016', '06', '0.772439377488237', '2017-02-17 17:26:57'),
	(252, 11, '2016', '06', '0.000866679701529378', '2017-02-17 17:27:16'),
	(253, 17, '2016', '06', '0.00972538906985161', '2017-02-17 17:27:25'),
	(254, 12, '2016', '06', '1.3453371938714', '2017-02-17 17:27:35'),
	(255, 25, '2016', '06', '1', '2017-02-17 17:27:36'),
	(256, 22, '2016', '06', '0.00481834827021297', '2017-02-17 17:27:44'),
	(257, 15, '2016', '06', '1.11216672698757', '2017-02-17 17:27:49'),
	(258, 26, '2016', '06', '0.150802268066112', '2017-02-17 17:28:03'),
	(259, 16, '2016', '06', '0.015696306850493', '2017-02-17 17:28:13'),
	(260, 24, '2016', '06', '0.0309962184613477', '2017-02-17 17:28:24'),
	(261, 21, '2016', '02', '0.712751329218358', '2017-02-17 17:29:17'),
	(262, 23, '2016', '02', '0.737731467334841', '2017-02-17 17:29:31'),
	(263, 11, '2016', '02', '0.00080459261464439', '2017-02-17 17:29:39'),
	(264, 12, '2016', '02', '1.38692476929658', '2017-02-17 17:29:47'),
	(265, 25, '2016', '02', '1', '2017-02-17 17:29:49'),
	(266, 22, '2016', '02', '0.128622501986188', '2017-02-17 17:30:04'),
	(267, 15, '2016', '02', '1.09290777974699', '2017-02-17 17:30:11'),
	(268, 17, '2016', '02', '0.00880492574711239', '2017-02-17 17:30:21'),
	(269, 18, '2016', '02', '0.709772046690705', '2017-02-17 17:30:31'),
	(270, 16, '2016', '02', '0.0131249597847951', '2017-02-17 17:30:41'),
	(271, 26, '2016', '02', '0.152783719366864', '2017-02-17 17:30:50'),
	(272, 24, '2016', '02', '0.0299805126667666', '2017-02-17 17:31:04'),
	(273, 23, '2016', '03', '0.770832043583235', '2017-02-17 17:31:30'),
	(274, 26, '2016', '03', '0.154770011762521', '2017-02-17 17:31:39'),
	(275, 15, '2016', '03', '1.13464991023339', '2017-02-17 17:31:48'),
	(276, 12, '2016', '03', '1.43835510431499', '2017-02-17 17:32:03'),
	(277, 11, '2016', '03', '0.000872935507524704', '2017-02-17 17:32:11'),
	(278, 25, '2016', '03', '1', '2017-02-17 17:32:13'),
	(279, 21, '2016', '03', '0.766885408283291', '2017-02-17 17:32:22'),
	(280, 22, '2016', '03', '0.128962112301121', '2017-02-17 17:32:32'),
	(281, 17, '2016', '03', '0.00890391877669783', '2017-02-17 17:32:40'),
	(282, 18, '2016', '03', '0.741100724323655', '2017-02-17 17:32:48'),
	(283, 24, '2016', '03', '0.0310356599733093', '2017-02-17 17:32:59'),
	(284, 16, '2016', '03', '0.0146957738389723', '2017-02-17 17:33:12'),
	(285, 11, '2016', '04', '0.000881251376955276', '2017-02-17 17:33:46'),
	(286, 12, '2016', '04', '1.46159562773847', '2017-02-17 17:33:58'),
	(287, 25, '2016', '04', '1', '2017-02-17 17:34:00'),
	(288, 21, '2016', '04', '0.763117558717429', '2017-02-17 17:34:08'),
	(289, 22, '2016', '04', '0.128902754338974', '2017-02-17 17:34:21'),
	(290, 15, '2016', '04', '1.13702023564384', '2017-02-17 17:34:28'),
	(291, 17, '2016', '04', '0.00926163897877347', '2017-02-17 17:34:34'),
	(292, 18, '2016', '04', '0.74480174642741', '2017-02-17 17:34:50'),
	(293, 24, '2016', '04', '0.031041440322831', '2017-02-17 17:35:08'),
	(294, 16, '2016', '04', '0.0154928927402648', '2017-02-17 17:35:24'),
	(295, 23, '2016', '04', '0.797318428834631', '2017-02-17 17:35:32'),
	(296, 26, '2016', '04', '0.154825125021288', '2017-02-17 17:35:39'),
	(297, 11, '2016', '05', '0.000840194925222652', '2017-02-17 17:36:09'),
	(298, 12, '2016', '05', '1.46414348685211', '2017-02-17 17:36:15'),
	(299, 25, '2016', '05', '1', '2017-02-17 17:36:17'),
	(300, 21, '2016', '05', '0.719182246542028', '2017-02-17 17:36:26'),
	(301, 22, '2016', '05', '0.128720170238638', '2017-02-17 17:36:38'),
	(302, 15, '2016', '05', '1.11442468460252', '2017-02-17 17:36:49'),
	(303, 17, '2016', '05', '0.00901656786745706', '2017-02-17 17:36:56'),
	(304, 18, '2016', '05', '0.72468460252318', '2017-02-17 17:37:08'),
	(305, 24, '2016', '05', '0.030638193572107', '2017-02-17 17:37:21'),
	(306, 16, '2016', '05', '0.0152381260974775', '2017-02-17 17:37:30'),
	(307, 23, '2016', '05', '0.766697066423469', '2017-02-17 17:37:38'),
	(308, 26, '2016', '05', '0.151998784009728', '2017-02-17 17:37:46'),
	(309, 14, '2015', '01', '1', '2017-02-20 09:42:37'),
	(310, 11, '2015', '01', '231', '2017-02-22 18:02:32'),
	(311, 25, '2015', '01', '1', '2017-02-22 18:02:34'),
	(312, 21, '2015', '01', '0', '2017-02-22 18:02:36'),
	(313, 12, '2015', '01', '123', '2017-02-22 18:02:37'),
	(314, 26, '2015', '01', '0.424', '2017-02-22 18:02:57'),
	(315, 22, '2015', '01', '70979', '2017-02-22 18:11:05'),
	(316, 11, '2017', '09', '1', '2017-02-27 14:04:03'),
	(317, 12, '2017', '09', '1', '2017-02-27 14:04:04'),
	(318, 13, '2017', '09', '1', '2017-02-27 14:04:06'),
	(319, 14, '2017', '09', '1', '2017-02-27 14:04:07'),
	(320, 15, '2017', '09', '1', '2017-02-27 14:04:09'),
	(321, 16, '2017', '09', '1', '2017-02-27 14:04:10'),
	(322, 17, '2017', '09', '1', '2017-02-27 14:04:11'),
	(323, 18, '2017', '09', '1', '2017-02-27 14:04:12'),
	(324, 21, '2017', '09', '1', '2017-02-27 14:04:16'),
	(325, 22, '2017', '09', '1', '2017-02-27 14:04:17'),
	(326, 23, '2017', '09', '1', '2017-02-27 14:04:20'),
	(327, 24, '2017', '09', '1', '2017-02-27 14:04:24'),
	(328, 25, '2017', '09', '1', '2017-02-27 14:04:27'),
	(329, 26, '2017', '09', '1', '2017-02-27 14:04:30'),
	(330, 11, '2017', '12', '1', '2017-02-27 14:08:02'),
	(331, 12, '2017', '12', '1', '2017-02-27 14:08:03'),
	(332, 13, '2017', '12', '1', '2017-02-27 14:08:04'),
	(333, 14, '2017', '12', '1', '2017-02-27 14:08:05'),
	(334, 15, '2017', '12', '1', '2017-02-27 14:08:06'),
	(335, 16, '2017', '12', '1', '2017-02-27 14:08:07'),
	(336, 17, '2017', '12', '1', '2017-02-27 14:08:08'),
	(337, 18, '2017', '12', '1', '2017-02-27 14:08:09'),
	(339, 11, '2015', '12', '1', '2017-02-27 14:18:36'),
	(340, 12, '2015', '12', '2', '2017-02-27 14:18:39'),
	(341, 13, '2015', '12', '3', '2017-02-27 14:18:46'),
	(342, 14, '2015', '12', '4', '2017-02-27 14:18:47'),
	(343, 15, '2015', '12', '4', '2017-02-27 14:18:49'),
	(344, 16, '2015', '12', '4', '2017-02-27 14:18:51'),
	(345, 17, '2015', '12', '4', '2017-02-27 14:18:53'),
	(346, 21, '2017', '12', '1', '2017-02-27 14:20:26'),
	(347, 22, '2017', '12', '1', '2017-02-27 14:20:27'),
	(348, 23, '2017', '12', '1', '2017-02-27 14:20:30'),
	(349, 24, '2017', '12', '1', '2017-02-27 14:20:33'),
	(350, 25, '2017', '12', '1', '2017-02-27 14:20:36'),
	(351, 26, '2017', '12', '1', '2017-02-27 14:20:39'),
	(352, 21, '2017', '02', '0', '2017-02-27 17:55:41'),
	(353, 21, '2017', '03', '3', '2017-02-27 17:55:54'),
	(354, 21, '2017', '04', '4', '2017-02-27 17:55:57'),
	(355, 21, '2017', '05', '5', '2017-02-27 17:55:59'),
	(356, 21, '2017', '06', '6', '2017-02-27 17:56:01'),
	(357, 21, '2017', '07', '7', '2017-02-27 17:56:03'),
	(358, 21, '2017', '08', '8', '2017-02-27 17:56:05'),
	(359, 21, '2017', '10', '10', '2017-02-27 17:56:07'),
	(360, 21, '2017', '11', '11', '2017-02-27 17:56:09'),
	(361, 21, '2009', '01', '1', '2017-02-28 10:38:32');
/*!40000 ALTER TABLE `ds_exrate` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_exrate_info
DROP TABLE IF EXISTS `ds_exrate_info`;
CREATE TABLE IF NOT EXISTS `ds_exrate_info` (
  `rid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '汇率基础信息ID',
  `country` varchar(50) NOT NULL COMMENT '国家名称',
  `currency` varchar(50) NOT NULL COMMENT '币种名称',
  `code` varchar(20) NOT NULL COMMENT '币种代码',
  `rateid` varchar(20) NOT NULL COMMENT '货币数字代码',
  `serial_no` int(10) NOT NULL DEFAULT '0' COMMENT '排序号',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`rid`),
  KEY `create_time` (`create_time`),
  KEY `code` (`code`),
  KEY `currency` (`currency`),
  KEY `serial_no` (`serial_no`),
  KEY `rateid` (`rateid`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 COMMENT='汇率基础信息表';

-- Dumping data for table datasquid.ds_exrate_info: ~14 rows (approximately)
DELETE FROM `ds_exrate_info`;
/*!40000 ALTER TABLE `ds_exrate_info` DISABLE KEYS */;
INSERT INTO `ds_exrate_info` (`rid`, `country`, `currency`, `code`, `rateid`, `serial_no`, `create_time`) VALUES
	(11, '韩国', '韩元', 'KRW ', '133', 9, '2017-02-10 17:02:03'),
	(12, '英国', '英镑', 'GBP', '303', 6, '2017-02-10 17:02:03'),
	(13, '法国', '法郎', 'FRF', '305', 5, '2017-02-10 17:02:03'),
	(14, '德国', '马克', 'DEM ', '304', 3, '2017-02-10 17:02:03'),
	(15, '欧盟', '欧元', 'EUR', '300', 4, '2017-02-10 17:02:03'),
	(16, '俄罗斯', '卢布', 'RUB ', '332', 11, '2017-02-10 17:02:03'),
	(17, '日本', '日元', 'JPY ', '116', 8, '2017-02-10 17:02:03'),
	(18, '新加坡', '新元', 'SGD', '132', 12, '2017-02-10 17:02:03'),
	(21, '澳大利亚', '澳元', 'AUD', '601', 1, '2017-02-10 17:02:03'),
	(22, '香港', '港币', 'HKD', '110  ', 7, '2017-02-13 11:36:04'),
	(23, '加拿大', '加拿大元', 'CAD', '501', 2, '2017-02-13 11:37:42'),
	(24, '台湾', '台币', 'TWD', '143', 13, '2017-02-13 11:39:29'),
	(25, '美国', '美元', 'USD', '502', 14, '2017-02-16 16:34:42'),
	(26, '中国', '人民币', 'RMB', '142', 10, '2017-02-16 16:35:22');
/*!40000 ALTER TABLE `ds_exrate_info` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_goods
DROP TABLE IF EXISTS `ds_goods`;
CREATE TABLE IF NOT EXISTS `ds_goods` (
  `spid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '商品ID',
  `code` varchar(50) NOT NULL DEFAULT '0' COMMENT '商品代码',
  `name` varchar(50) NOT NULL COMMENT '商品名称',
  `species` varchar(50) NOT NULL COMMENT '商品品类',
  `type` varchar(50) NOT NULL COMMENT '业务类型',
  `serial_no` int(10) NOT NULL DEFAULT '0' COMMENT '排序号',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`spid`),
  KEY `create_time` (`create_time`),
  KEY `code` (`code`),
  KEY `name` (`name`),
  KEY `type` (`type`),
  KEY `species` (`species`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='商品归类表';

-- Dumping data for table datasquid.ds_goods: ~3 rows (approximately)
DELETE FROM `ds_goods`;
/*!40000 ALTER TABLE `ds_goods` DISABLE KEYS */;
INSERT INTO `ds_goods` (`spid`, `code`, `name`, `species`, `type`, `serial_no`, `create_time`) VALUES
	(4, 'D112goods002', 'iphone7s', '电子产品', 'IE', 0, '2017-02-08 20:32:59'),
	(5, 'D112goods001', '笔记本电脑', '电子产品', 'IE', 0, '2017-02-08 20:33:21'),
	(6, 'SDwerq252', 'sfs', 'zvcz', 'IE', 0, '2017-02-09 09:27:27');
/*!40000 ALTER TABLE `ds_goods` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_link_name
DROP TABLE IF EXISTS `ds_link_name`;
CREATE TABLE IF NOT EXISTS `ds_link_name` (
  `lnid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '环节ID',
  `ln_code` varchar(50) NOT NULL COMMENT '环节代码',
  `ln_name` varchar(20) NOT NULL COMMENT '环节名称',
  `serial_no` varchar(50) NOT NULL COMMENT '排序号',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`lnid`),
  KEY `serial_no` (`serial_no`),
  KEY `create_time` (`create_time`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='环节表';

-- Dumping data for table datasquid.ds_link_name: ~12 rows (approximately)
DELETE FROM `ds_link_name`;
/*!40000 ALTER TABLE `ds_link_name` DISABLE KEYS */;
INSERT INTO `ds_link_name` (`lnid`, `ln_code`, `ln_name`, `serial_no`, `create_time`) VALUES
	(1, 'QHJ', '全环节用时', '1', '2017-01-28 20:29:06'),
	(2, 'GJWL', '国际物流用时', '2', '2017-01-28 20:29:06'),
	(3, 'QYSB', '企业申报用时', '3', '2017-01-28 20:29:06'),
	(4, 'HGFX', '海关放行用时', '4', '2017-01-28 20:29:06'),
	(5, 'GJFX', '国检放行用时', '5', '2017-01-28 20:29:07'),
	(6, 'CYFJ', '查验分拣用时', '6', '2017-01-28 20:29:07'),
	(7, 'HFCQ', '核放出区用时', '7', '2017-01-28 20:29:07'),
	(8, 'GNWL', '国内物流用时', '8', '2017-01-28 20:29:07'),
	(9, 'DSSB', '电商申报用时', '9', '2017-02-12 22:28:29'),
	(10, 'ZJCG', '装机出港用时', '10', '2017-02-12 22:28:29'),
	(11, 'GJTG', '国检通关用时', '5', '2017-01-28 20:29:07'),
	(12, 'HGTG', '海关通关用时', '4', '2017-01-28 20:29:06');
/*!40000 ALTER TABLE `ds_link_name` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_menu
DROP TABLE IF EXISTS `ds_menu`;
CREATE TABLE IF NOT EXISTS `ds_menu` (
  `mid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '菜单ID',
  `name` varchar(20) NOT NULL COMMENT '菜单显示名称',
  `sno` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '菜单序列',
  `url` varchar(50) DEFAULT NULL COMMENT '菜单请求URL地址',
  `pid` int(10) unsigned DEFAULT '0' COMMENT '父节点ID',
  `icon` varchar(50) NOT NULL DEFAULT '' COMMENT '菜单图标',
  `is_enabled` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否禁用',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `sign` varchar(20) NOT NULL DEFAULT '',
  `ie` varchar(2) NOT NULL DEFAULT '',
  PRIMARY KEY (`mid`),
  KEY `sno` (`sno`),
  KEY `pid` (`pid`),
  KEY `create_time` (`create_time`),
  KEY `is_disabled` (`is_enabled`),
  KEY `sign` (`sign`),
  KEY `ie` (`ie`)
) ENGINE=InnoDB AUTO_INCREMENT=103 DEFAULT CHARSET=utf8 COMMENT='菜单';

-- Dumping data for table datasquid.ds_menu: ~95 rows (approximately)
DELETE FROM `ds_menu`;
/*!40000 ALTER TABLE `ds_menu` DISABLE KEYS */;
INSERT INTO `ds_menu` (`mid`, `name`, `sno`, `url`, `pid`, `icon`, `is_enabled`, `create_time`, `sign`, `ie`) VALUES
	(1, '跨境实时展示', 1, NULL, 0, 'fa fa-table', 1, '2017-01-26 01:19:11', 'DPZS', 'IE'),
	(2, '跨境贸易动态实时展示', 10, 'graph/screen1', 1, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'DPZS', 'IE'),
	(3, '跨境通关效率展示', 20, 'graph/screen2', 1, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'DPZS', 'IE'),
	(4, '空港直邮进口效能分析', 2, 'null', 0, 'fa fa-sign-in', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(5, '全环节用时追踪', 10, 'chart/1', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(6, '全环节时效分析', 20, 'chart/2', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(7, '最长最短环节时效', 30, 'chart/3', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(8, '海关通关环节时效', 40, 'chart/4', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(9, '国检通关环节时效', 50, 'chart/5', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(10, '企业通关时效分析', 60, 'chart/6', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(11, '作业区通关时效分析', 70, 'chart/7', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(12, '异常数据监测', 80, 'chart/8', 4, 'fa fa-circle-o', 1, '2017-01-26 01:19:11', 'KGZY-XN', 'I'),
	(13, '空港直邮进口综合统计', 3, 'null', 0, 'fa fa-sign-in', 1, '2017-01-26 01:19:12', 'KGZY-TJ', 'I'),
	(14, '进口交易量统计', 10, 'chart/17', 13, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'KGZY-TJ', 'I'),
	(15, '贸易国别统计', 20, 'chart/18', 13, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'KGZY-TJ', 'I'),
	(16, '商品品类交易统计', 30, 'chart/19', 13, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'KGZY-TJ', 'I'),
	(17, '消费者交易统计', 40, 'chart/20', 13, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'KGZY-TJ', 'I'),
	(18, '陆港直邮进口效能分析', 4, 'null', 0, 'fa fa-sign-in', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(19, '全环节用时追踪', 10, 'chart/1', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(20, '全环节时效分析', 20, 'chart/2', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(21, '最长最短环节时效', 30, 'chart/3', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(22, '海关通关环节时效', 40, 'chart/4', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(23, '国检通关环节时效', 50, 'chart/5', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(24, '企业通关时效分析', 60, 'chart/6', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(25, '作业区通关时效分析', 70, 'chart/7', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(26, '异常数据监测', 80, 'chart/8', 18, 'fa fa-circle-o', 1, '2017-01-26 01:19:12', 'LGZY-XN', 'I'),
	(27, '陆港直邮进口综合统计', 5, 'null', 0, 'fa fa-sign-in', 1, '2017-01-26 01:19:12', 'LGZY-TJ', 'I'),
	(28, '进口交易量统计', 10, 'chart/17', 27, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'LGZY-TJ', 'I'),
	(29, '贸易国别统计', 20, 'chart/18', 27, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'LGZY-TJ', 'I'),
	(30, '商品品类交易统计', 30, 'chart/19', 27, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'LGZY-TJ', 'I'),
	(31, '消费者交易统计', 40, 'chart/20', 27, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'LGZY-TJ', 'I'),
	(32, '空港一般出口效能分析', 6, 'null', 0, 'fa fa-share-square-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(33, '全环节用时追踪', 10, 'chart/e1', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(34, '全环节时效分析', 20, 'chart/e2', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(35, '最长最短环节时效', 30, 'chart/e3', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(36, '海关通关环节时效', 40, 'chart/e4', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(37, '国检通关环节时效', 50, 'chart/e5', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(38, '企业通关时效分析', 60, 'chart/e6', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(39, '作业区通关时效分析', 70, 'chart/e7', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(40, '异常数据监测', 80, 'chart/e8', 32, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-XN', 'E'),
	(41, '空港一般出口综合统计', 7, 'null', 0, 'fa fa-share-square-o', 1, '2017-01-26 01:19:13', 'KGCK-TJ', 'E'),
	(42, '出口交易量统计', 10, 'chart/e17', 41, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-TJ', 'E'),
	(43, '贸易国别统计', 20, 'chart/e18', 41, 'fa fa-circle-o', 1, '2017-01-26 01:19:13', 'KGCK-TJ', 'E'),
	(44, '商品品类交易统计', 30, 'chart/e19', 41, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGCK-TJ', 'E'),
	(45, '消费者交易统计', 40, 'chart/e20', 41, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGCK-TJ', 'E'),
	(46, '空港保税进口效能分析', 8, 'null', 0, 'fa fa-legal ', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(47, '全环节用时追踪', 10, 'chart/1', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(48, '全环节时效分析', 20, 'chart/2', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(49, '最长最短环节时效', 30, 'chart/3', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(50, '海关通关环节时效', 40, 'chart/4', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(51, '国检通关环节时效', 50, 'chart/5', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(52, '企业通关时效分析', 60, 'chart/6', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(53, '作业区通关时效分析', 70, 'chart/7', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(54, '异常数据监测', 80, 'chart/8', 46, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-XN', 'I'),
	(55, '空港保税进口综合统计', 9, 'null', 0, 'fa fa-legal ', 1, '2017-01-26 01:19:14', 'KGBS-TJ', 'I'),
	(56, '进口交易量统计', 10, 'chart/17', 55, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-TJ', 'I'),
	(57, '贸易国别统计', 20, 'chart/18', 55, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-TJ', 'I'),
	(58, '商品品类交易统计', 30, 'chart/19', 55, 'fa fa-circle-o', 1, '2017-01-26 01:19:14', 'KGBS-TJ', 'I'),
	(59, '消费者交易统计', 40, 'chart/20', 55, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'KGBS-TJ', 'I'),
	(60, '陆港转关进口效能分析', 10, 'null', 0, 'fa fa-legal ', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(61, '全环节用时追踪', 10, 'chart/1', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(62, '全环节时效分析', 20, 'chart/2', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(63, '最长最短环节时效', 30, 'chart/3', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(64, '海关通关环节时效', 40, 'chart/4', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(65, '国检通关环节时效', 50, 'chart/5', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(66, '企业通关时效分析', 60, 'chart/6', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(67, '作业区通关时效分析', 70, 'chart/7', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(68, '异常数据监测', 80, 'chart/8', 60, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-XN', 'I'),
	(69, '陆港转关进口综合统计', 11, 'null', 0, 'fa fa-legal ', 1, '2017-01-26 01:19:15', 'LGZG-TJ', 'I'),
	(70, '进口交易量统计', 10, 'chart/17', 69, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-TJ', 'I'),
	(71, '贸易国别统计', 20, 'chart/18', 70, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-TJ', 'I'),
	(72, '商品品类交易统计', 30, 'chart/19', 71, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-TJ', 'I'),
	(73, '消费者交易统计', 40, 'chart/20', 72, 'fa fa-circle-o', 1, '2017-01-26 01:19:15', 'LGZG-TJ', 'I'),
	(74, '物流追踪查询', 12, NULL, 0, 'fa fa-truck', 1, '2017-01-26 01:19:15', 'WLZZ', 'IE'),
	(75, '进口查询', 10, 'logistics/1', 74, 'fa fa-circle-o', 1, '2017-01-26 01:19:16', 'WLZZ', 'I'),
	(76, '出口查询', 20, 'logistics/2', 74, 'fa fa-circle-o', 1, '2017-01-26 01:19:16', 'WLZZ', 'E'),
	(77, '参数设置', 13, NULL, 0, 'fa fa-gears', 1, '2017-01-26 01:19:16', 'CSSZ', 'IE'),
	(78, '异常时效设定', 10, 'setting/abnormal', 77, 'fa fa-circle-o', 1, '2017-01-26 01:19:16', 'CSSZ', 'IE'),
	(80, '商品品类归类', 30, 'setting/goods', 77, 'fa fa-circle-o', 0, '2017-01-26 01:19:16', 'CSSZ', 'IE'),
	(81, '用户权限', 15, NULL, 0, 'fa fa-user-secret', 1, '2017-01-26 01:19:16', 'YHQX', 'IE'),
	(82, '用户管理', 10, 'auth/user', 81, 'fa fa-circle-o', 1, '2017-01-26 01:19:16', 'YHQX', 'IE'),
	(83, '菜单管理', 20, 'auth/menu', 81, 'fa fa-circle-o', 1, '2017-01-26 01:19:16', 'YHQX', 'IE'),
	(84, '权限设置', 30, 'auth/rule', 81, 'fa fa-circle-o', 1, '2017-01-26 01:19:16', 'YHQX', 'IE'),
	(85, '数据设计', 16, NULL, 0, 'fa fa-cubes', 1, '2017-01-26 01:19:16', 'SJSJ', 'IE'),
	(86, '任务设计', 10, 'task', 85, 'fa fa-tasks', 1, '2017-01-26 01:19:16', 'SJSJ', 'IE'),
	(87, '数据源管理', 20, 'source', 85, 'fa fa-database', 1, '2017-01-26 01:19:16', 'SJSJ', 'IE'),
	(94, '汇率设定', 40, 'setting/rate', 77, 'fa fa-circle-o', 1, '2017-02-09 14:37:36', 'CSSZ', 'IE'),
	(95, '贸易国别统计', 20, 'chart/18', 69, 'fa fa-circle-o', 1, '2017-02-09 17:00:44', 'KGZY-TJ', 'I'),
	(96, '商品品类交易统计', 30, 'chart/19', 69, 'fa fa-circle-o', 1, '2017-02-09 17:00:44', 'KGZY-TJ', 'I'),
	(97, '消费者交易统计', 40, 'chart/20', 69, 'fa fa-circle-o', 1, '2017-02-09 17:00:44', 'KGZY-TJ', 'I'),
	(98, '统计报表', 14, NULL, 0, 'fa fa-share-square-o', 1, '2017-02-15 09:10:12', 'SXDC', 'IE'),
	(99, '口岸办业务月报', 90, 'report/statistics', 98, 'fa fa-circle-o', 1, '2017-02-15 09:20:56', 'CBBST', 'IE'),
	(100, '商务厅跨境企业月报', 100, 'report/transaction01', 98, 'fa fa-circle-o', 1, '2017-02-15 09:20:56', 'CBETT01', 'IE'),
	(101, '商务厅跨境交易月报', 110, 'report/summary', 98, 'fa fa-circle-o', 1, '2017-02-15 09:20:56', 'CBETST', 'IE'),
	(102, '商务厅跨境汇总月报', 120, 'report/transaction02', 98, 'fa fa-circle-o', 1, '2017-02-15 09:20:56', 'CBETT02', 'IE');
/*!40000 ALTER TABLE `ds_menu` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_permission
DROP TABLE IF EXISTS `ds_permission`;
CREATE TABLE IF NOT EXISTS `ds_permission` (
  `pmid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '权限菜单表主键id',
  `rlid` int(10) unsigned NOT NULL COMMENT '权限组表id',
  `mid` int(10) unsigned NOT NULL COMMENT '菜单表id',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`pmid`),
  KEY `rule_id` (`rlid`),
  KEY `menu_id` (`mid`),
  KEY `create_time` (`create_time`)
) ENGINE=InnoDB AUTO_INCREMENT=1148 DEFAULT CHARSET=utf8 COMMENT='权限菜单表';

-- Dumping data for table datasquid.ds_permission: ~201 rows (approximately)
DELETE FROM `ds_permission`;
/*!40000 ALTER TABLE `ds_permission` DISABLE KEYS */;
INSERT INTO `ds_permission` (`pmid`, `rlid`, `mid`, `create_time`, `update_time`) VALUES
	(864, 3, 1, '2017-02-19 17:28:23', NULL),
	(865, 3, 4, '2017-02-19 17:28:23', NULL),
	(866, 3, 13, '2017-02-19 17:28:23', NULL),
	(867, 3, 32, '2017-02-19 17:28:23', NULL),
	(868, 3, 41, '2017-02-19 17:28:23', NULL),
	(869, 3, 46, '2017-02-19 17:28:23', NULL),
	(870, 3, 55, '2017-02-19 17:28:23', NULL),
	(871, 3, 74, '2017-02-19 17:28:23', NULL),
	(872, 3, 77, '2017-02-19 17:28:23', NULL),
	(873, 3, 98, '2017-02-19 17:28:23', NULL),
	(874, 3, 2, '2017-02-19 17:28:23', NULL),
	(875, 3, 3, '2017-02-19 17:28:23', NULL),
	(876, 3, 5, '2017-02-19 17:28:23', NULL),
	(877, 3, 6, '2017-02-19 17:28:23', NULL),
	(878, 3, 7, '2017-02-19 17:28:23', NULL),
	(879, 3, 8, '2017-02-19 17:28:23', NULL),
	(880, 3, 9, '2017-02-19 17:28:23', NULL),
	(881, 3, 10, '2017-02-19 17:28:23', NULL),
	(882, 3, 11, '2017-02-19 17:28:23', NULL),
	(883, 3, 12, '2017-02-19 17:28:23', NULL),
	(884, 3, 14, '2017-02-19 17:28:23', NULL),
	(885, 3, 15, '2017-02-19 17:28:23', NULL),
	(886, 3, 16, '2017-02-19 17:28:23', NULL),
	(887, 3, 17, '2017-02-19 17:28:23', NULL),
	(888, 3, 33, '2017-02-19 17:28:23', NULL),
	(889, 3, 34, '2017-02-19 17:28:23', NULL),
	(890, 3, 35, '2017-02-19 17:28:23', NULL),
	(891, 3, 36, '2017-02-19 17:28:23', NULL),
	(892, 3, 37, '2017-02-19 17:28:23', NULL),
	(893, 3, 38, '2017-02-19 17:28:23', NULL),
	(894, 3, 39, '2017-02-19 17:28:23', NULL),
	(895, 3, 40, '2017-02-19 17:28:23', NULL),
	(896, 3, 42, '2017-02-19 17:28:23', NULL),
	(897, 3, 43, '2017-02-19 17:28:23', NULL),
	(898, 3, 44, '2017-02-19 17:28:23', NULL),
	(899, 3, 45, '2017-02-19 17:28:23', NULL),
	(900, 3, 47, '2017-02-19 17:28:23', NULL),
	(901, 3, 48, '2017-02-19 17:28:23', NULL),
	(902, 3, 49, '2017-02-19 17:28:23', NULL),
	(903, 3, 50, '2017-02-19 17:28:23', NULL),
	(904, 3, 51, '2017-02-19 17:28:23', NULL),
	(905, 3, 52, '2017-02-19 17:28:23', NULL),
	(906, 3, 53, '2017-02-19 17:28:23', NULL),
	(907, 3, 54, '2017-02-19 17:28:23', NULL),
	(908, 3, 56, '2017-02-19 17:28:23', NULL),
	(909, 3, 57, '2017-02-19 17:28:23', NULL),
	(910, 3, 58, '2017-02-19 17:28:23', NULL),
	(911, 3, 59, '2017-02-19 17:28:23', NULL),
	(912, 3, 75, '2017-02-19 17:28:23', NULL),
	(913, 3, 78, '2017-02-19 17:28:23', NULL),
	(914, 3, 94, '2017-02-19 17:28:23', NULL),
	(915, 3, 99, '2017-02-19 17:28:23', NULL),
	(916, 3, 100, '2017-02-19 17:28:23', NULL),
	(917, 3, 101, '2017-02-19 17:28:23', NULL),
	(918, 3, 102, '2017-02-19 17:28:23', NULL),
	(919, 4, 1, '2017-02-19 17:28:39', NULL),
	(920, 4, 18, '2017-02-19 17:28:39', NULL),
	(921, 4, 27, '2017-02-19 17:28:39', NULL),
	(922, 4, 60, '2017-02-19 17:28:39', NULL),
	(923, 4, 69, '2017-02-19 17:28:39', NULL),
	(924, 4, 74, '2017-02-19 17:28:39', NULL),
	(925, 4, 77, '2017-02-19 17:28:39', NULL),
	(926, 4, 98, '2017-02-19 17:28:39', NULL),
	(927, 4, 2, '2017-02-19 17:28:39', NULL),
	(928, 4, 3, '2017-02-19 17:28:39', NULL),
	(929, 4, 19, '2017-02-19 17:28:39', NULL),
	(930, 4, 20, '2017-02-19 17:28:39', NULL),
	(931, 4, 21, '2017-02-19 17:28:39', NULL),
	(932, 4, 22, '2017-02-19 17:28:39', NULL),
	(933, 4, 23, '2017-02-19 17:28:39', NULL),
	(934, 4, 24, '2017-02-19 17:28:39', NULL),
	(935, 4, 25, '2017-02-19 17:28:39', NULL),
	(936, 4, 26, '2017-02-19 17:28:39', NULL),
	(937, 4, 28, '2017-02-19 17:28:39', NULL),
	(938, 4, 29, '2017-02-19 17:28:39', NULL),
	(939, 4, 30, '2017-02-19 17:28:39', NULL),
	(940, 4, 31, '2017-02-19 17:28:39', NULL),
	(941, 4, 61, '2017-02-19 17:28:39', NULL),
	(942, 4, 62, '2017-02-19 17:28:39', NULL),
	(943, 4, 63, '2017-02-19 17:28:39', NULL),
	(944, 4, 64, '2017-02-19 17:28:39', NULL),
	(945, 4, 65, '2017-02-19 17:28:39', NULL),
	(946, 4, 66, '2017-02-19 17:28:39', NULL),
	(947, 4, 67, '2017-02-19 17:28:39', NULL),
	(948, 4, 68, '2017-02-19 17:28:39', NULL),
	(949, 4, 70, '2017-02-19 17:28:39', NULL),
	(950, 4, 95, '2017-02-19 17:28:39', NULL),
	(951, 4, 96, '2017-02-19 17:28:39', NULL),
	(952, 4, 97, '2017-02-19 17:28:39', NULL),
	(953, 4, 76, '2017-02-19 17:28:39', NULL),
	(954, 4, 78, '2017-02-19 17:28:39', NULL),
	(955, 4, 94, '2017-02-19 17:28:39', NULL),
	(956, 4, 99, '2017-02-19 17:28:39', NULL),
	(957, 4, 100, '2017-02-19 17:28:39', NULL),
	(958, 4, 101, '2017-02-19 17:28:39', NULL),
	(959, 4, 102, '2017-02-19 17:28:39', NULL),
	(960, 1, 1, '2017-02-19 17:28:47', NULL),
	(961, 1, 4, '2017-02-19 17:28:47', NULL),
	(962, 1, 13, '2017-02-19 17:28:47', NULL),
	(963, 1, 18, '2017-02-19 17:28:47', NULL),
	(964, 1, 27, '2017-02-19 17:28:47', NULL),
	(965, 1, 32, '2017-02-19 17:28:47', NULL),
	(966, 1, 41, '2017-02-19 17:28:47', NULL),
	(967, 1, 46, '2017-02-19 17:28:47', NULL),
	(968, 1, 55, '2017-02-19 17:28:47', NULL),
	(969, 1, 60, '2017-02-19 17:28:47', NULL),
	(970, 1, 69, '2017-02-19 17:28:47', NULL),
	(971, 1, 74, '2017-02-19 17:28:47', NULL),
	(972, 1, 77, '2017-02-19 17:28:47', NULL),
	(973, 1, 98, '2017-02-19 17:28:47', NULL),
	(974, 1, 81, '2017-02-19 17:28:47', NULL),
	(975, 1, 85, '2017-02-19 17:28:47', NULL),
	(976, 1, 2, '2017-02-19 17:28:47', NULL),
	(977, 1, 3, '2017-02-19 17:28:47', NULL),
	(978, 1, 5, '2017-02-19 17:28:47', NULL),
	(979, 1, 6, '2017-02-19 17:28:47', NULL),
	(980, 1, 7, '2017-02-19 17:28:47', NULL),
	(981, 1, 8, '2017-02-19 17:28:47', NULL),
	(982, 1, 9, '2017-02-19 17:28:47', NULL),
	(983, 1, 10, '2017-02-19 17:28:47', NULL),
	(984, 1, 11, '2017-02-19 17:28:47', NULL),
	(985, 1, 12, '2017-02-19 17:28:47', NULL),
	(986, 1, 14, '2017-02-19 17:28:47', NULL),
	(987, 1, 15, '2017-02-19 17:28:47', NULL),
	(988, 1, 16, '2017-02-19 17:28:47', NULL),
	(989, 1, 17, '2017-02-19 17:28:47', NULL),
	(990, 1, 19, '2017-02-19 17:28:47', NULL),
	(991, 1, 20, '2017-02-19 17:28:47', NULL),
	(992, 1, 21, '2017-02-19 17:28:47', NULL),
	(993, 1, 22, '2017-02-19 17:28:47', NULL),
	(994, 1, 23, '2017-02-19 17:28:47', NULL),
	(995, 1, 24, '2017-02-19 17:28:47', NULL),
	(996, 1, 25, '2017-02-19 17:28:47', NULL),
	(997, 1, 26, '2017-02-19 17:28:47', NULL),
	(998, 1, 28, '2017-02-19 17:28:47', NULL),
	(999, 1, 29, '2017-02-19 17:28:47', NULL),
	(1000, 1, 30, '2017-02-19 17:28:47', NULL),
	(1001, 1, 31, '2017-02-19 17:28:47', NULL),
	(1002, 1, 33, '2017-02-19 17:28:47', NULL),
	(1003, 1, 34, '2017-02-19 17:28:47', NULL),
	(1004, 1, 35, '2017-02-19 17:28:47', NULL),
	(1005, 1, 36, '2017-02-19 17:28:47', NULL),
	(1006, 1, 37, '2017-02-19 17:28:47', NULL),
	(1007, 1, 38, '2017-02-19 17:28:47', NULL),
	(1008, 1, 39, '2017-02-19 17:28:47', NULL),
	(1009, 1, 40, '2017-02-19 17:28:47', NULL),
	(1010, 1, 42, '2017-02-19 17:28:47', NULL),
	(1011, 1, 43, '2017-02-19 17:28:47', NULL),
	(1012, 1, 44, '2017-02-19 17:28:47', NULL),
	(1013, 1, 45, '2017-02-19 17:28:47', NULL),
	(1014, 1, 47, '2017-02-19 17:28:47', NULL),
	(1015, 1, 48, '2017-02-19 17:28:47', NULL),
	(1016, 1, 49, '2017-02-19 17:28:47', NULL),
	(1017, 1, 50, '2017-02-19 17:28:47', NULL),
	(1018, 1, 51, '2017-02-19 17:28:48', NULL),
	(1019, 1, 52, '2017-02-19 17:28:48', NULL),
	(1020, 1, 53, '2017-02-19 17:28:48', NULL),
	(1021, 1, 54, '2017-02-19 17:28:48', NULL),
	(1022, 1, 56, '2017-02-19 17:28:48', NULL),
	(1023, 1, 57, '2017-02-19 17:28:48', NULL),
	(1024, 1, 58, '2017-02-19 17:28:48', NULL),
	(1025, 1, 59, '2017-02-19 17:28:48', NULL),
	(1026, 1, 61, '2017-02-19 17:28:48', NULL),
	(1027, 1, 62, '2017-02-19 17:28:48', NULL),
	(1028, 1, 63, '2017-02-19 17:28:48', NULL),
	(1029, 1, 64, '2017-02-19 17:28:48', NULL),
	(1030, 1, 65, '2017-02-19 17:28:48', NULL),
	(1031, 1, 66, '2017-02-19 17:28:48', NULL),
	(1032, 1, 67, '2017-02-19 17:28:48', NULL),
	(1033, 1, 68, '2017-02-19 17:28:48', NULL),
	(1034, 1, 70, '2017-02-19 17:28:48', NULL),
	(1035, 1, 95, '2017-02-19 17:28:48', NULL),
	(1036, 1, 96, '2017-02-19 17:28:48', NULL),
	(1037, 1, 97, '2017-02-19 17:28:48', NULL),
	(1038, 1, 75, '2017-02-19 17:28:48', NULL),
	(1039, 1, 76, '2017-02-19 17:28:48', NULL),
	(1040, 1, 78, '2017-02-19 17:28:48', NULL),
	(1041, 1, 94, '2017-02-19 17:28:48', NULL),
	(1042, 1, 99, '2017-02-19 17:28:48', NULL),
	(1043, 1, 100, '2017-02-19 17:28:48', NULL),
	(1044, 1, 101, '2017-02-19 17:28:48', NULL),
	(1045, 1, 102, '2017-02-19 17:28:48', NULL),
	(1046, 1, 82, '2017-02-19 17:28:48', NULL),
	(1047, 1, 83, '2017-02-19 17:28:48', NULL),
	(1048, 1, 84, '2017-02-19 17:28:48', NULL),
	(1049, 1, 86, '2017-02-19 17:28:48', NULL),
	(1050, 1, 87, '2017-02-19 17:28:48', NULL),
	(1134, 6, 77, '2017-02-28 09:56:06', NULL),
	(1135, 6, 98, '2017-02-28 09:56:06', NULL),
	(1136, 6, 81, '2017-02-28 09:56:06', NULL),
	(1137, 6, 85, '2017-02-28 09:56:06', NULL),
	(1138, 6, 78, '2017-02-28 09:56:06', NULL),
	(1139, 6, 99, '2017-02-28 09:56:06', NULL),
	(1140, 6, 100, '2017-02-28 09:56:06', NULL),
	(1141, 6, 101, '2017-02-28 09:56:06', NULL),
	(1142, 6, 102, '2017-02-28 09:56:06', NULL),
	(1143, 6, 82, '2017-02-28 09:56:06', NULL),
	(1144, 6, 83, '2017-02-28 09:56:06', NULL),
	(1145, 6, 84, '2017-02-28 09:56:06', NULL),
	(1146, 6, 86, '2017-02-28 09:56:06', NULL),
	(1147, 6, 87, '2017-02-28 09:56:06', NULL);
/*!40000 ALTER TABLE `ds_permission` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_result
DROP TABLE IF EXISTS `ds_result`;
CREATE TABLE IF NOT EXISTS `ds_result` (
  `rid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '结果表ID',
  `sid` int(10) unsigned NOT NULL COMMENT '脚本ID',
  `table_name` varchar(20) NOT NULL COMMENT '物理表名',
  `name` varchar(50) NOT NULL COMMENT '逻辑表名',
  `description` varchar(200) NOT NULL DEFAULT '' COMMENT '描述',
  `code` text NOT NULL COMMENT '定义代码',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`rid`),
  KEY `create_time` (`create_time`),
  KEY `table_name` (`table_name`),
  KEY `name` (`name`),
  KEY `sid` (`sid`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 COMMENT='结果表';

-- Dumping data for table datasquid.ds_result: ~8 rows (approximately)
DELETE FROM `ds_result`;
/*!40000 ALTER TABLE `ds_result` DISABLE KEYS */;
INSERT INTO `ds_result` (`rid`, `sid`, `table_name`, `name`, `description`, `code`, `create_time`) VALUES
	(8, 19, '13r110cba', 'qiye_order_report', '', '    `qiye_id` VARCHAR(20) NULL DEFAULT NULL,\n    `qiye_name` VARCHAR(200) NULL DEFAULT NULL,\n    `qiye_type` CHAR(4) NOT NULL DEFAULT \'\'\'\',\n    `customs_code` CHAR(4) NULL DEFAULT NULL,\n    `ieport` VARCHAR(20) NULL DEFAULT NULL,\n    `sys_type` CHAR(2) NOT NULL DEFAULT \'\'\'\',\n    INDEX `IDX_QIYE_INF_ID` (`qiye_id`, `qiye_type`),\n    INDEX `qiye_name` (`qiye_name`),\n    INDEX `sys_type` (`sys_type`),\n    INDEX `ieport` (`ieport`),\n    INDEX `customs_code` (`customs_code`)', '2017-02-19 12:21:10'),
	(14, 1, '1r11129', 'users', '', 'name varchar(20)', '2017-02-22 15:16:41'),
	(15, 2, '2r18d61', 'userBirthday', '', 'birthday datetime not null', '2017-02-22 15:17:26'),
	(16, 20, '14r14f9b', 'country_order_report', '', '`order_no` VARCHAR(50) NULL DEFAULT NULL,\n`country` VARCHAR(10) NULL DEFAULT NULL,\n`total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`calc_total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`currency` VARCHAR(10) NOT NULL DEFAULT \'\'\'\',\n`customs_code` CHAR(4) NULL DEFAULT NULL,\n`ie_port` VARCHAR(20) NULL DEFAULT NULL,\n`ie_type` CHAR(2) NULL DEFAULT NULL,\n`sys_type` CHAR(4) NOT NULL DEFAULT \'\'\'\',\n`order_time` DATETIME NULL DEFAULT NULL,\nINDEX `country` (`country`),\nINDEX `sys_type` (`sys_type`),\nINDEX `ie_port` (`ie_port`),\nINDEX `customs_code` (`customs_code`)', '2017-02-22 15:37:11'),
	(17, 21, '15r11426e', 'province_order_report', '', '`order_no` VARCHAR(50) NULL DEFAULT NULL,\n`province` VARCHAR(20) NULL DEFAULT NULL,\n`total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`calc_total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`currency` VARCHAR(10) NOT NULL DEFAULT \'\'\'\',\n`customs_code` CHAR(4) NULL DEFAULT NULL,\n`ie_port` VARCHAR(20) NULL DEFAULT NULL,\n`ie_type` CHAR(2) NULL DEFAULT NULL,\n`sys_type` CHAR(4) NOT NULL DEFAULT \'\'\'\',\n`order_time` DATETIME NULL DEFAULT NULL,\nINDEX `province` (`province`),\nINDEX `sys_type` (`sys_type`),\nINDEX `ie_port` (`ie_port`),\nINDEX `customs_code` (`customs_code`)', '2017-02-22 15:55:35'),
	(18, 23, '17r17f35', 'country_order_report', '', '`order_no` VARCHAR(50) NULL DEFAULT NULL,\n`country` VARCHAR(10) NULL DEFAULT NULL,\n`total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`calc_total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`currency` VARCHAR(10) NOT NULL DEFAULT \'\'\'\',\n`customs_code` CHAR(4) NULL DEFAULT NULL,\n`ie_port` VARCHAR(20) NULL DEFAULT NULL,\n`ie_type` CHAR(2) NULL DEFAULT NULL,\n`sys_type` CHAR(4) NOT NULL DEFAULT \'\'\'\',\n`order_time` DATETIME NULL DEFAULT NULL,\nINDEX `country` (`country`),\nINDEX `sys_type` (`sys_type`),\nINDEX `ie_port` (`ie_port`),\nINDEX `customs_code` (`customs_code`)', '2017-02-22 16:16:48'),
	(19, 24, '18r1160ea', 'product_order_report', '', '`order_no` VARCHAR(50) NULL DEFAULT NULL,\n`type_level_1` VARCHAR(100) NULL DEFAULT NULL,\n`type_level_2` VARCHAR(100) NULL DEFAULT NULL,\n`qty` DECIMAL(20,6) NULL DEFAULT NULL,\n`goods_type` DECIMAL(20,6) NULL DEFAULT NULL,\n`total_price` VARCHAR(100) NULL DEFAULT NULL,\n`calc_total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`currency` VARCHAR(10) NOT NULL DEFAULT \'\'\'\',\n`customs_code` CHAR(4) NULL DEFAULT NULL,\n`ie_port` VARCHAR(20) NULL DEFAULT NULL,\n`ie_type` CHAR(2) NULL DEFAULT NULL,\n`sys_type` CHAR(4) NOT NULL DEFAULT \'\'\'\',\n`order_time` DATETIME NULL DEFAULT NULL,\nINDEX `type_level_1` (`type_level_1`),\nINDEX `type_level_2` (`type_level_2`),\nINDEX `sys_type` (`sys_type`),\nINDEX `ie_port` (`ie_port`),\nINDEX `customs_code` (`customs_code`)', '2017-02-22 16:31:41'),
	(21, 25, '19r1f6c1', 'product_order_report', '', '`order_no` VARCHAR(50) NULL DEFAULT NULL,\n`type_level_1` VARCHAR(100) NULL DEFAULT NULL,\n`type_level_2` VARCHAR(100) NULL DEFAULT NULL,\n`qty` DECIMAL(20,6) NULL DEFAULT NULL,\n`goods_type` VARCHAR(100) NULL DEFAULT NULL,\n`total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`calc_total_price` DECIMAL(20,6) NULL DEFAULT NULL,\n`currency` VARCHAR(10) NOT NULL DEFAULT \'\'\'\',\n`customs_code` CHAR(4) NULL DEFAULT NULL,\n`ie_port` VARCHAR(20) NULL DEFAULT NULL,\n`ie_type` CHAR(2) NULL DEFAULT NULL,\n`sys_type` CHAR(4) NOT NULL DEFAULT \'\'\'\',\n`order_time` DATETIME NULL DEFAULT NULL,\nINDEX `type_level_1` (`type_level_1`),\nINDEX `type_level_2` (`type_level_2`),\nINDEX `sys_type` (`sys_type`),\nINDEX `ie_port` (`ie_port`),\nINDEX `customs_code` (`customs_code`)', '2017-02-24 11:05:39');
/*!40000 ALTER TABLE `ds_result` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_rule
DROP TABLE IF EXISTS `ds_rule`;
CREATE TABLE IF NOT EXISTS `ds_rule` (
  `rlid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '权限组 ID',
  `name` varchar(20) NOT NULL DEFAULT '' COMMENT '权限组名称',
  `description` varchar(200) DEFAULT '' COMMENT '权限组描述',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '最后一次更新时间',
  PRIMARY KEY (`rlid`),
  UNIQUE KEY `name` (`name`),
  KEY `create_time` (`create_time`),
  KEY `update_time` (`update_time`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='权限组';

-- Dumping data for table datasquid.ds_rule: ~4 rows (approximately)
DELETE FROM `ds_rule`;
/*!40000 ALTER TABLE `ds_rule` DISABLE KEYS */;
INSERT INTO `ds_rule` (`rlid`, `name`, `description`, `create_time`, `update_time`) VALUES
	(1, '超级管理员', 'Super Administrator', '2016-12-01 12:00:26', NULL),
	(3, '空港管理员', 'Air Commander', '2016-12-01 12:02:32', NULL),
	(4, '陆港管理员', 'Land Commander', '2016-12-01 12:03:18', NULL),
	(6, '调试', '', '2017-01-28 21:43:19', NULL);
/*!40000 ALTER TABLE `ds_rule` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_script
DROP TABLE IF EXISTS `ds_script`;
CREATE TABLE IF NOT EXISTS `ds_script` (
  `sid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '脚本ID',
  `tid` int(10) unsigned NOT NULL COMMENT '任务ID',
  `name` varchar(50) NOT NULL COMMENT '名称',
  `description` varchar(200) NOT NULL DEFAULT '' COMMENT '描述',
  `type` varchar(20) NOT NULL COMMENT '类型',
  `code` text NOT NULL COMMENT '代码',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `last_edit` datetime DEFAULT NULL COMMENT '最后更新',
  `last_execute` datetime DEFAULT NULL COMMENT '最后执行',
  PRIMARY KEY (`sid`),
  KEY `create_time` (`create_time`),
  KEY `last_edit` (`last_edit`),
  KEY `name` (`name`),
  KEY `type` (`type`),
  KEY `tid` (`tid`)
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8 COMMENT='脚本表';

-- Dumping data for table datasquid.ds_script: ~33 rows (approximately)
DELETE FROM `ds_script`;
/*!40000 ALTER TABLE `ds_script` DISABLE KEYS */;
INSERT INTO `ds_script` (`sid`, `tid`, `name`, `description`, `type`, `code`, `create_time`, `last_edit`, `last_execute`) VALUES
	(1, 1, '统计用户名', '', 'JS', 'function main(src, rst){\n    var data = src.r("hms_user");\n    var item = {\n        name: data["username"],\n        birthday: data["birthdy"]\n    };\n    \n    rst.t("users").hit(\n        {name:item["name"]},\n        item["birthday"], \n        1\n    );\n    \n    rst.q("userBirthdayQ", item);\n    return item;\n}', '2017-01-30 20:49:19', NULL, NULL),
	(2, 1, '统计生日', '', 'JS', 'function main(src, rst) {\n    var message = src.q("userBirthdayQ");\n    rst.t("userBirthday").hit(\n        {\n            birthday: parseDate(message["birthday"])\n        }, \n        message["birthday"], \n        1\n    );\n}', '2017-02-06 02:02:03', NULL, NULL),
	(3, 2, '物通放行数据提取', '', 'JS', 'function main(src, rst){\n    var orderQ = src.q("END_DATA_Q");\n\n    var srcHJORA = src.s("HJ_ORA");\n    var row= srcHJORA.row("CEB2_INVT_HEAD_RID"); \n    var item = {\n        head_guid: row.head_guid,\n        order_no: row.order_no,\n        customs_code: row.customs_code,\n        port_code: row.port_code,\n        traf_mode: row.traf_mode,\n        ie_flag: row.ie_flag,\n        ebc_code: row.ebc_code,\n        ebc_name: row.ebc_name,\n        ebp_code: row.ebp_code,\n        ebp_name: row.ebp_name,\n        logistics_no: row.logistics_no,\n        dist_time: row.dist_time,\n        logistics_code: row.logistics_code,\n        logistics_name: row.logistics_name,\n        country: row.country,\n        currency: row.currency,\n        consignee_address: row.consignee_address\n    };\n    \n    var mainTable = = src.s("WT");\n    var srcGJ = src.s("GJ");\n\n    item.xdzf_min = srcGJ.scalar("select min(pay.pay_time) from imp_pay_head pay where pay.order_no = ? and pay.ebp_code = ?", row.order_no,row.ebp_code);\n    item.xdzf_max = item.xdzf_min;\n    item.ydrc_min = mainTable.scalar("select min(hed.app_time) from ceb2_delivery_head hed where hed.app_status = \'120\' and hed.head_guid in (select lst.head_guid from ceb2_delivery_list lst where lst.logistics_no = ?)", row.logistics_no);\n    item.ydrc_max = item.ydrc_min;\n    item.hgsb_min = mainTable.scalar("select min(pub.rtn_time) from ceb2_pub_rtn pub where pub.biz_guid = ? and pub.rtn_status = \'120\'", row.head_guid);\n    item.hgsb_max = item.hgsb_min;\n    item.hgfx_min = mainTable.scalar("select max(pub.rtn_time) from ceb2_pub_rtn pub where pub.biz_guid = ? and pub.rtn_status = \'800\'", row.head_guid);\n    item.hgfx_max = item.hgfx_min;\n    item.gjsb_min = srcGJ.scalar("select min(imp.app_time) from imp_invt_head imp where imp.audit_state = \'1\' and imp.order_no = ?", row.order_no);\n    item.gjsb_max = item.gjsb_min;\n    item.gjfx_min = srcGJ.scalar("select min(imp.apply_date) from imp_invt_head imp where imp.audit_state = \'1\' and imp.order_no = ?", row.order_no);\n    item.gjfx_max = item.gjfx_min;\n    item.fjfx_min = mainTable.scalar("select chk.check_date from check_mail_good_head chk where chk.op_type = \'01\' and chk.op_type_insp = \'01\' and chk.logistics_no = ?", row.logistics_no);\n    item.fjfx_max = item.fjfx_min;\n    var seq_no = mainTable.scalar("select (select seq_no from pre_dist_bill_list lst where lst.bill_no = t.entry_id) as seq_no from check_mail_good_head t where t.logistics_no = ? ", row.logistics_no);\n    item.hfsb_min = mainTable.scalar("select dhed.decl_date from pre_dist_head dhed where dhed.seq_no = ?", seq_no);\n    item.hfsb_max = item.hfsb_min;\n    item.hfcq_min = row.dist_time;\n    item.hfcq_max = row.dist_time;\n    item.tuotou_min = mainTable.scalar("select lgs.app_time from ecssent.ceb2_lgs_stat lgs where lgs.logistics_no = ?", row.order_no);\n    item.tuotou_max = item.tuotou_min;\n    item.consignee_address = getProvince(row.consignee_address);\n\n    item.hgcy = mainTable.scalar("select (case when count(1) > 0 then \'1\' else \'0\' end) as hgcy from ceb2_pub_rtn pub where pub.biz_guid = ? and pub.rtn_status = \'500\'", row.head_guid);\n    item.gjcy = srcGJ.scalar("select (case when count(1) > 0 then \'1\' else \'0\' end) as gjcy from imp_invt_head imp where imp.is_chy= \'1\' and imp.order_no = ?", row.order_no);\n\n    var time_arry = [item.xdzf_min,item.xdzf_max,item.ydrc_min,item.ydrc_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max,item.hfsb_min,item.hfsb_max,item.hfcq_min,item.hfcq_max,item.tuotou_min,item.tuotou_max];\n    for(var i=0,len=time_arry.length;i<len;i++){ \n        if(isEmpty(time_arry[i])){ \n            time_arry.splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    var start_time = time_arry.sort(function(a,b){return a - b})[0];\n    var end_time = time_arry.sort(function(a,b){return b - a})[0];\n    item.all_time_start = start_time;\n    item.all_time_end = end_time ;\n\n     var zyq_time_arry = [item.ydrc_min,item.ydrc_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max,item.hfsb_min,item.hfsb_max,item.hfcq_min,item.hfcq_max];\n    for(var i=0,len=zyq_time_arry .length;i<len;i++){ \n        if(isEmpty(zyq_time_arry [i])){ \n            zyq_time_arry .splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    var zyq_start_time = zyq_time_arry .sort(function(a,b){return a - b})[0];\n    var zyq_end_time = zyq_time_arry .sort(function(a,b){return b - a})[0];\n    item.zyq_time_start = zyq_start_time ;\n    item.zyq_time_end = zyq_end_time ;\n\n\n    item.cyfj_start = (function(a,b){\n        if(a > b){\n            return a;\n        }\n        return b;\n    })(item.hgfx_max,item.gjfx_max);\n\n\n    var minusTime = function(timeA,timeB){\n        if(isEmpty(timeA) || isEmpty(timeB)){\n            return 0;\n        }\n    \n        return rst.parseLong((Math.abs(timeA - timeB)/1000).toString());\n    };\n\n    item.gjwl_time = minusTime(item.ydrc_max,item.xdzf_min);\n    item.qysb_time = minusTime(item.hgsb_max,item.xdzf_min);\n    item.hgtg_time = minusTime(item.hgfx_max,item.hgsb_min);\n    item.gjtg_time = minusTime(item.gjfx_max,item.gjsb_min);\n    item.cyfj_time = minusTime(item.fjfx_max,item.cyfj_start);\n    item.shcq_time = minusTime(item.hfcq_max,item.hfsb_max);\n    if(isEmpty(item.tuotou_max)){\n        item.gnwl_time = (Math.random()*11 + 5)*60;\n    }else{\n        item.gnwl_time = minusTime(item.tuotou_max,item.hfcq_min);\n    }\n    item.all_time = minusTime(item.all_time_end,item.all_time_start);\n    item.zyq_time= minusTime(item.zyq_time_end,item.zyq_time_start);\n\n    rst.q("INVT_HEAD_Q", item);\n    return item;\n}\n\nfunction isEmpty(str){\n    return !str||str==\'\'||str === undefined;\n}\n\n\nvar getProvinceMap = function () {\n    return {\n        \'台湾\': [121.509062, 25.044332]\n        , \'河北\': [114.502461, 38.045474]\n        , \'山西\': [112.549248, 37.857014]\n        , \'内蒙古\': [111.670801, 40.818311]\n        , \'辽宁\': [123.429096, 41.796767]\n        , \'吉林\': [125.3245, 43.886841]\n        , \'黑龙江\': [126.642464, 45.756967]\n        , \'江苏\': [118.767413, 32.041544]\n        , \'浙江\': [120.153576, 30.287459]\n        , \'安徽\': [117.283042, 31.86119]\n        , \'福建\': [119.306239, 26.075302]\n        , \'江西\': [115.892151, 28.676493]\n        , \'山东\': [117.000923, 36.675807]\n        , \'河南\': [113.665412, 34.757975]\n        , \'湖北\': [114.298572, 30.584355]\n        , \'湖南\': [112.982279, 28.19409]\n        , \'广东\': [113.280637, 23.125178]\n        , \'广西\': [108.320004, 22.82402]\n        , \'海南\': [110.33119, 20.031971]\n        , \'四川\': [104.065735, 30.659462]\n        , \'贵州\': [106.713478, 26.578343]\n        , \'云南\': [102.712251, 25.040609]\n        , \'西藏\': [91.132212, 29.660361]\n        , \'陕西\': [108.948024, 34.263161]\n        , \'甘肃\': [103.823557, 36.058039]\n        , \'青海\': [101.778916, 36.623178]\n        , \'宁夏\': [106.278179, 38.46637]\n        , \'新疆\': [87.617733, 43.792818]\n        , \'北京\': [116.405285, 39.904989]\n        , \'天津\': [117.190182, 39.125596]\n        , \'上海\': [121.472644, 31.231706]\n        , \'重庆\': [106.504962, 29.533155]\n        , \'香港\': [114.173355, 22.320048]\n        , \'澳门\': [113.54909, 22.198951]\n    }\n};\n\nvar getProvince = function (address) {\n    var map = getProvinceMap();\n    var provinces = [];\n    for (var province in map) {\n        provinces.push(province);\n    }\n    provinces.sort(function (a, b) {\n        return a.length > b.length\n    });\n\n    var prov;\n    for (var idx in provinces) {\n        prov = provinces[idx];\n        if (address.indexOf(prov) > -1)\n            return prov;\n    }\n    return "其他";\n};', '2017-02-09 00:25:20', NULL, NULL),
	(5, 3, '美华放行数据提取', '', 'JS', 'function main(src, rst){\n    var row= src.r("TB_BONDED_IMPORT_BILL"); \n    var item = {\n        bill_id: row.bill_id,\n        orderno: row.orderno,\n        customs_code: row.customs_code,\n        ieport: row.ieport,\n        billmode: row.billmode,\n        ie_type: row.ie_type,\n        cbe_code: row.cbe_code,\n        cbe_name: row.cbe_name,\n        declaredate: row.declaredate,\n        main_code: row.main_code,\n        billno:row.billno,\n        logisticscode:row.logisticscode,\n        logisticsname:row.logisticsname,\n        currency: row.currency\n    };\n    \n    var mainTable = src.t("TB_BONDED_IMPORT_BILL");\n    item.xdzf_min = mainTable.scalar("select min(pay.paytime) from tb_bonded_import_pay pay where pay.orderno = ?", row.orderno);\n    item.xdzf_max = mainTable.scalar("select max(pay.paytime) from tb_bonded_import_pay pay where pay.orderno = ?", row.orderno);\n    item.qysb_min = mainTable.scalar("select min(odr.stime) from tb_bonded_import_order odr where odr.orderno = ?", row.orderno);\n    item.qysb_max = mainTable.scalar("select max(odr.stime) from tb_bonded_import_order odr where odr.orderno = ?", row.orderno);\n    item.hgsb_min = row.declaredate;\n    item.hgsb_max = row.declaredate;\n    item.hgfx_min = mainTable.scalar("select max(lg.operate_time) from tb_operate_log lg where lg.bill_id = ? and (lg.remark = \' 自动审单放行\' or lg.remark = \'查验放行\')", row.bill_id);\n    item.hgfx_max = item.hgfx_min;\n    item.gjsb_min = mainTable.scalar("select  (select min(lg.operate_time) from tb_operate_log lg where lg.bill_id = ins.details_code  and lg.remark = \'检验检疫清单提交申报\') from  tb_bonded_imp_inspect_bill ins where ins.orderno = ?", row.orderno);\n    item.gjsb_max = item.gjsb_min;\n    item.gjfx_min = mainTable.scalar("select  (select max(lg.operate_time) from tb_operate_log lg where lg.bill_id = ins.details_code  and lg.remark like \'检验检疫回执%放行%\') from  tb_bonded_imp_inspect_bill ins where ins.orderno = ?", row.orderno);\n    item.gjfx_max = item.gjfx_min;\n    item.fjfx_min = mainTable.scalar("select max(lg.operate_time) from tb_operate_log lg where lg.bill_id = ? and lg.remark = \'清单机检放行\'", row.bill_id);\n    item.fjfx_max = item.fjfx_min;\n    item.qdhx_min = mainTable.scalar("select (select max(inf.insertdate)  from totalsinglearrivalinfo inf where inf.id = bdy.headid) from totalsinglearrivalbody bdy where bdy.totaltransferno = ? and bdy.transferno = ? and rownum = 1",row.main_code, row.billno);\n    item.qdhx_max = item.qdhx_min;\n\n    item.hgcy = mainTable.scalar("select (case when count(1) > 0 then \'1\' else \'0\' end) as hgcy from mhckdb.tb_operate_log lg where lg.remark = \'查验放行\' and lg.bill_id = ?", row.bill_id);\n    item.gjcy = mainTable.scalar("select (select (case when count(1) > 0 then \'1\' else \'0\' end) as gjcy from mhckdb.tb_operate_log lg where lg.remark like \'检验检疫回执:检验放行%\' and lg.bill_id = ins.details_code) from  tb_bonded_imp_inspect_bill ins where ins.orderno = ? and rownum = 1", row.orderno);\n\n    var time_arry = [item.xdzf_min,item.xdzf_max,item.qysb_min,item.qysb_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max,item.qdhx_min,item.qdhx_max];\n    \n    for(var i=0,len=time_arry.length;i<len;i++){ \n        if(isEmpty(time_arry[i])){ \n            time_arry.splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    \n    var start_time = time_arry.sort(function(a,b){return a - b})[0];\n    var end_time = time_arry.sort(function(a,b){return b - a})[0];\n    item.all_time_start = start_time;\n    item.all_time_end = end_time;\n    \n    \n    var zyq_time_arry = [item.qysb_min,item.qysb_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max];\n    \n    for(var i=0,len=zyq_time_arry.length;i<len;i++){ \n        if(isEmpty(zyq_time_arry[i])){ \n            zyq_time_arry.splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    \n    var zyq_start_time = zyq_time_arry.sort(function(a,b){return a - b})[0];\n    var zyq_end_time = zyq_time_arry.sort(function(a,b){return b - a})[0];\n    item.zyq_time_start = zyq_start_time ;\n    item.zyq_time_end = zyq_end_time ;\n\n    item.cyfj_start = (function(a,b){\n        if(a > b){\n            return a;\n        }\n        return b;\n    })(item.hgfx_max,item.gjfx_max);\n    \n    \n    var minusTime = function(timeA,timeB){\n        if(isEmpty(timeA) || isEmpty(timeB)){\n            return 0;\n        }\n    \n        return rst.parseLong((Math.abs(timeA - timeB)/1000).toString());\n    };\n\n    item.dssb_time = minusTime(item.qysb_max,item.xdzf_min);\n    item.qysb_time = minusTime(item.hgsb_max,item.qysb_min);\n    item.hgtg_time = minusTime(item.hgfx_max,item.hgsb_min);\n    item.gjtg_time = minusTime(item.gjfx_max,item.gjsb_min);\n    item.cyfj_time = minusTime(item.fjfx_max,item.cyfj_start);\n    item.zjcg_time = minusTime(item.qdhx_max,item.cyfj_start);\n    item.all_time = minusTime(item.all_time_end,item.all_time_start);\n    item.zyq_time = minusTime(item.zyq_time_end,item.zyq_time_start);\n    \n    rst.q("importBillQ", item);\n    return item;\n}\n\nfunction isEmpty(str){\n    return !str||str==\'\'||str === undefined;\n}', '2017-02-13 20:46:53', NULL, NULL),
	(7, 3, '美华时效数据存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("importBillQ"); \n    var item = {\n        orderno:row.orderno,\n        bill_id:row.bill_id,\n        customs_code:row.customs_code,\n        ieport:row.ieport,\n        ie_type:row.ie_type,\n        billmode:row.billmode,\n        cbe_code:row.cbe_code,\n        cbe_name:row.cbe_name,\n        hgcy: row.hgcy,\n        gjcy: row.gjcy,\n        xdzf_min:parseTime(row.xdzf_min),\n        xdzf_max:parseTime(row.xdzf_max),\n        qysb_min:parseTime(row.qysb_min),\n        qysb_max:parseTime(row.qysb_max),\n        hgsb_min:parseTime(row.hgsb_min),\n        hgsb_max:parseTime(row.hgsb_max),\n        hgfx_min:parseTime(row.hgfx_min),\n        hgfx_max:parseTime(row.hgfx_max),\n        gjsb_min:parseTime(row.gjsb_min),\n        gjsb_max:parseTime(row.gjsb_max),\n        gjfx_min:parseTime(row.gjfx_min),\n        gjfx_max:parseTime(row.gjfx_max),\n        fjfx_min:parseTime(row.fjfx_min),\n        fjfx_max:parseTime(row.fjfx_max),\n        qdhx_min:parseTime(row.qdhx_min),\n        qdhx_max:parseTime(row.qdhx_max),\n        dssb_time:row.dssb_time,\n        qysb_time:row.qysb_time,\n        hgtg_time:row.hgtg_time,\n        gjtg_time:row.gjtg_time,\n        cyfj_time:row.cyfj_time,\n        zjcg_time:row.zjcg_time,\n        all_time:row.all_time,\n        zyq_time:row.zyq_time,\n        zyq_time_start:parseTime(row.zyq_time_start),\n        zyq_time_end:parseTime(row.zyq_time_end),\n        cyfj_start:parseTime(row.cyfj_start),\n        all_time_start:parseTime(row.all_time_start),\n        all_time_end:parseTime(row.all_time_end)\n    };\n    var hjObj = rst.t("all_node_calc_time_mh","HJ");\n    hjObj.insert(item);\n    return item;\n}', '2017-02-14 16:25:22', NULL, NULL),
	(8, 2, '物通时效数据存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("INVT_HEAD_Q"); \n    var item = {\n        head_guid:row.head_guid,\n        order_no:row.order_no,\n        customs_code:row.customs_code,\n        port_code:row.port_code,\n        traf_mode:row.traf_mode,\n        ie_flag:row.ie_flag,\n        ebc_code:row.ebc_code,\n        ebc_name:row.ebc_name,\n        hgcy: row.hgcy,\n        gjcy: row.gjcy,\n        xdzf_min:parseTime(row.xdzf_min),\n        xdzf_max:parseTime(row.xdzf_max),\n        ydrc_min:parseTime(row.ydrc_min),\n        ydrc_max:parseTime(row.ydrc_max),\n        hgsb_min:parseTime(row.hgsb_min),\n        hgsb_max:parseTime(row.hgsb_max),\n        hgfx_min:parseTime(row.hgfx_min),\n        hgfx_max:parseTime(row.hgfx_max),\n        gjsb_min:parseTime(row.gjsb_min),\n        gjsb_max:parseTime(row.gjsb_max),\n        gjfx_min:parseTime(row.gjfx_min),\n        gjfx_max:parseTime(row.gjfx_max),\n        fjfx_min:parseTime(row.fjfx_min),\n        fjfx_max:parseTime(row.fjfx_max),\n        hfsb_min:parseTime(row.hfsb_min),\n        hfsb_max:parseTime(row.hfsb_max),\n        hfcq_min:parseTime(row.hfcq_min),\n        hfcq_max:parseTime(row.hfcq_max),\n        tuotou_min:parseTime(row.tuotou_min),\n        tuotou_max:parseTime(row.tuotou_max),\n        gjwl_time:row.gjwl_time,\n        qysb_time:row.qysb_time,\n        hgtg_time:row.hgtg_time,\n        gjtg_time:row.gjtg_time,\n        cyfj_time:row.cyfj_time,\n        shcq_time:row.shcq_time,\n        gnwl_time:row.gnwl_time,\n        all_time:row.all_time,\n        zyq_time:row.zyq_time,\n        zyq_time_start:parseTime(row.zyq_time_start),\n        zyq_time_end:parseTime(row.zyq_time_end),\n        cyfj_start:parseTime(row.cyfj_start),\n        all_time_start:parseTime(row.all_time_start),\n        all_time_end:parseTime(row.all_time_end)\n    };\n    var hjObj = rst.t("all_node_calc_time_wt","HJ");\n    var keys = hjObj.insert(item);\n    return keys;\n}', '2017-02-14 22:35:17', NULL, NULL),
	(9, 3, '美华订单信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("importBillQ"); \n    var item = {\n        orderno:row.orderno,\n        bill_id:row.bill_id,\n        customs_code:row.customs_code,\n        ieport:row.ieport,\n        ie_type:row.ie_type,\n        billmode:row.billmode,\n        cbe_code:row.cbe_code,\n        cbe_name:row.cbe_name,\n        hgcy:row.hgcy,\n        gjcy:row.gjcy,\n        currency: row.currency\n    };\n    \n    var srcMH = src.s("MH");\n    var orderInfo = srcMH.row("select \'MH\' as sys_type, t.ietype as ie_type, t.orderno as order_no, t.cbe_code, t.cbe_code_insp, t.cbe_name, t.ecpcode as ecp_code, t.ecpname as ecp_name, t.coll_ccib_countryno, t.coll_address, t.ordersum as order_sum, t.submit_time, t.stime, t.qdstime, \'\' as head_guid, t.ordersum as total_price, t.id as Relation_no, t.orderno as biz_no, t.coll_ccib_countryno as country from tb_bonded_import_order t where t.orderno = ?",row.orderno);\n    if(isEmpty(orderInfo )){\n        return "orderInfo is empty";\n    }\n    if(!isEmpty(orderInfo.submit_time)){\n        orderInfo.submit_time = parseTime(orderInfo.submit_time);\n    }\n    if(!isEmpty(orderInfo.stime)){\n        orderInfo.stime  = parseTime(orderInfo.stime );\n    }\n    if(!isEmpty(orderInfo.qdstime)){\n        orderInfo.qdstime = parseTime(orderInfo.qdstime);\n    }\n    orderInfo.ie_port = row.ieport;\n    orderInfo.customs_code = row.customs_code;\n    orderInfo.hgcy = row.hgcy;\n    orderInfo.gjcy = row.gjcy;\n    orderInfo.currency = row.currency;\n    if(orderInfo.currency == \'502\'){\n        orderInfo.calc_total_price = orderInfo.total_price;\n    }\n\n    var hjObj = rst.t("order_info","HJ");\n    hjObj.insert(orderInfo);\n\n    var srcMH2 = src.s("MH");\n    var product_list= srcMH2 .select("select \'MH\' as sys_type, t.headid as relation_no,  t.goodname as goods_name,  t.amount as qty, t.ordersum as total_price, t.barcode as goods_type from tb_bonded_import_order_product t where t.headid = ?",orderInfo.relation_no);\n    \n    for(var idx in product_list) {\n        product_list[idx].order_no = orderInfo.order_no;\n        product_list[idx].order_time = orderInfo.stime;\n        product_list[idx].currency = orderInfo.currency;\n    }\n    \n    rst.q("PRD_INFO_Q", product_list);\n    \n    return true;\n}\nfunction isEmpty(str){\n    return !str||str==\'\'||str === undefined;\n}', '2017-02-15 09:10:20', NULL, NULL),
	(10, 3, '美华商品信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("PRD_INFO_Q"); \n    \n    var item = {\n        sys_type:row.sys_type,\n        relation_no:row.relation_no,\n        goods_name:row.goods_name,\n        qty:row.qty,\n        total_price:row.total_price,\n        goods_type:row.goods_type,\n        order_no: row.order_no,\n        order_time: parseTime(row.order_time),\n        currency: row.currency \n    };\n\n    if(item.currency == \'502\'){\n        item.calc_total_price = item.total_price;\n    }\n\n    item.type_level_1 = getGoodsLevel1(row.goods_type); \n    item.type_level_2 = getGoodsLevel2(row.goods_type);\n\n    var hjObj = rst.t("product_info","HJ");\n    hjObj.insert(item);\n    \n    return item;\n}\n\n\n\nfunction getGoodsLevel1(code) {\n    if (code == null)\n        return "其它";\n\n    var topMap = [\n        {name: "美妆个护", value: ["33", "960329", "9615", "9616"]},\n        {\n            name: "食品保健",\n            value: ["24", "02", "03", "04", "05", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21069090", "22", "25", "27", "28", "29"]\n        },\n        {name: "母婴用品", value: ["19011010", "19011090", "9619001"]},\n        {name: "皮包饰品", value: ["41", "42", "43", "71", "91"]},\n        {\n            name: "服饰鞋帽",\n            value: ["50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65"]\n        },\n        {name: "数码家电", value: ["84", "844", "847", "85", "8516", "8510", "88"]},\n        {\n            name: "生活用具",\n            value: ["30", "32", "36", "66", "67", "68", "69", "70", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "86", "87", "89", "900", "90", "9617", "92", "93", "94", "95", "96", "97", "35", "37", "39", "40", "44", "45", "46", "48", "49", "23"]\n        },\n        {name: "卫生清洁", value: ["34", "9619002", "38", "960321"]},\n        {name: "工农业原料", value: ["26", "31"]}\n    ];\n\n    var resultList = [];\n\n    for (var idx in topMap) {\n        var item = topMap[idx];\n        for (var jdx in item.value) {\n            item.value.sort(function (a, b) {\n                return (b + "").length - (a + "").length;\n            });\n            var c1 = item.value[jdx];\n            if (code.indexOf(c1) == 0)\n                resultList.push({name: item.name, value: c1});\n        }\n    }\n    if (resultList.length == 0)\n        return "其它";\n    resultList.sort(function (a, b) {\n        return (b.value + "").length - (a.value + "").length;\n    });\n    return resultList[0].name;\n};\n\nfunction getGoodsLevel2(code) {\n    if(code == null)\n        return "其它";\n        \n    var subMap = {\n        "21069090": "食品",\n        "19011010": "配方奶粉",\n        "19011090": "婴儿食品",\n        "9619001": "尿布",\n        "9619002": "卫生巾",\n        "960329": "化妆刷",\n        "960321": "牙刷",\n        "9615": "化妆工具",\n        "9616": "化妆工具",\n        "9619": "纸尿裤",\n        "9503": "玩具",\n        "9505": "玩具",\n        "8516": "厨卫家电",\n        "8510": "厨卫家电",\n        "9404": "家居坐具",\n        "9405": "灯饰",\n        "9506": "体育用品",\n        "9603": "刷子",\n        "9608": "笔刷",\n        "9609": "笔刷",\n        "9613": "打火机",\n        "9617": "保温瓶",\n        "961": "母婴用品",\n        "844": "办公电子设备",\n        "900": "眼镜",\n        "847": "办公电子设备",\n        "02": "肉食品",\n        "03": "海产品",\n        "04": "动物制食品",\n        "05": "贝壳粉",\n        "07": "干制蔬菜",\n        "08": "水果干果",\n        "09": "调味料",\n        "33": "日用化妆品",\n        "10": "谷物植物",\n        "11": "谷物植物",\n        "12": "谷物植物",\n        "13": "谷物植物",\n        "14": "谷物植物",\n        "15": "食用油",\n        "16": "肉食品",\n        "17": "糖",\n        "18": "可可食品",\n        "19": "面食品",\n        "20": "蔬果食品",\n        "21": "饮料汁调味",\n        "22": "葡萄酒饮料",\n        "25": "盐",\n        "27": "润滑油",\n        "28": "硅胶及非普通食品",\n        "29": "保健品",\n        "42": "皮具箱包",\n        "43": "毛皮制品",\n        "71": "首饰",\n        "91": "钟表",\n        "54": "丝巾",\n        "61": "服装",\n        "62": "服装",\n        "65": "帽",\n        "64": "鞋",\n        "84": "厨卫家电",\n        "85": "数码电气",\n        "30": "医用胶布",\n        "32": "颜料",\n        "56": "纤维品",\n        "57": "地毯",\n        "58": "纺织品",\n        "59": "纺织品",\n        "63": "针织品",\n        "66": "伞",\n        "67": "假发",\n        "68": "石制品",\n        "69": "餐具",\n        "70": "玻璃",\n        "73": "厨房不锈钢制品",\n        "74": "钢制品",\n        "76": "铝制品",\n        "82": "家用刀具",\n        "83": "夹具标牌",\n        "87": "自行车童车",\n        "90": "计量仪器",\n        "92": "乐器",\n        "93": "刀剑",\n        "35": "胶",\n        "37": "感光纸",\n        "39": "塑料制品",\n        "40": "橡胶用品",\n        "44": "木制品",\n        "45": "木制品",\n        "46": "竹制品",\n        "48": "纸品",\n        "49": "印刷品",\n        "23": "宠物粮",\n        "34": "洗涤用品",\n        "38": "消毒剂"\n    };\n\n    for (var c in subMap) {\n        if (code.indexOf(c) == 0)\n            return subMap[c];\n    }\n    return "其它";\n};', '2017-02-15 14:20:58', NULL, NULL),
	(12, 3, '美华企业信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("importBillQ"); \n    var dsItem = {\n        sys_type:"MH",\n        qiye_id:row.cbe_code,\n        qiye_name:row.cbe_name,\n        qiye_type:"DS",\n        customs_code:row.customs_code,\n        ieport: row.ieport,\n        order_no: row.orderno\n    };\n\n    var wlItem = {\n        sys_type:"MH",\n        qiye_id:row.logisticscode,\n        qiye_name:row.logisticsname,\n        qiye_type:"WL",\n        customs_code:row.customs_code,\n        ieport: row.ieport,\n        order_no: row.orderno\n    };\n    var objItem = [dsItem,wlItem];\n    \n    var srcMH = src.s("MH");\n    var orderInfo = srcMH .row("select \'MH\' as sys_type, t.ietype as ie_type, t.orderno as order_no, t.cbe_code, t.cbe_code_insp, t.cbe_name, t.ecpcode as ecp_code, t.ecpname as ecp_name, t.coll_ccib_countryno, t.coll_address, t.ordersum as order_sum, t.submit_time, t.stime, t.qdstime, \'\' as head_guid, t.ordersum as total_price, t.id as Relation_no, t.orderno as biz_no, t.coll_ccib_countryno as country from tb_bonded_import_order t where t.orderno = ?",row.orderno);\n    if(orderInfo.stime){\n        orderInfo.stime = parseTime(orderInfo.stime);\n        dsItem.order_time = orderInfo.stime;\n        wlItem.order_time = orderInfo.stime;\n    }\n\n    var hjObj = rst.t("qiye_info","HJ");\n    hjObj.insert(dsItem);\n    hjObj.insert(wlItem);\n\n    return objItem;\n}', '2017-02-15 15:00:32', NULL, NULL),
	(13, 2, '物通企业信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("INVT_HEAD_Q"); \n    var dsItem = {\n        sys_type:"WT",\n        qiye_id:row.ebc_code,\n        qiye_name:row.ebc_name,\n        qiye_type:"DS",\n        customs_code:row.customs_code,\n        ieport: row.port_code, \n        order_no: row.order_no\n    };\n\n    var wlItem = {\n        sys_type:"WT",\n        qiye_id:row.logistics_code,\n        qiye_name:row.logistics_name,\n        qiye_type:"WL",\n        customs_code:row.customs_code,\n        ieport: row.ieport, \n        order_no: row.order_no\n    };\n    var objItem = [dsItem,wlItem];\n    \n    var srcWT = src.s("WT");\n    var orderInfo = srcWT.row("select \'WT\' as sys_type,t.order_type as ie_type,t.order_no, t.ebp_code as ecp_code,t.ebp_name as ecp_name,t.ebc_code as cbe_code,t.ebc_name as cbe_name, t.consignee, t.consignee_telephone, t.consignee_address as coll_address, t.buyer_id_number, t.sys_date as sys_date, t.app_time as app_time,t.head_guid,t.actural_paid as total_price,t.head_guid as Relation_no, t.head_guid as biz_no from ceb2_ord_head t where t.order_no = ?",row.order_no);\n    if(orderInfo.app_time){\n        orderInfo.app_time = parseTime(orderInfo.app_time);\n    }\n    \n    dsItem.order_time = orderInfo.app_time;\n    wlItem.order_time = orderInfo.app_time;\n    \n    var hjObj = rst.t("qiye_info","HJ");\n    hjObj.insert(dsItem);\n    hjObj.insert(wlItem);\n\n    return objItem;\n}', '2017-02-15 15:17:50', NULL, NULL),
	(14, 2, '物通订单信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("INVT_HEAD_Q"); \n\n    var item = {\n        head_guid: row.head_guid,\n        order_no: row.order_no,\n        customs_code: row.customs_code,\n        port_code: row.port_code,\n        traf_mode: row.traf_mode,\n        ie_flag: row.ie_flag,\n        ebc_code: row.ebc_code,\n        ebc_name: row.ebc_name,\n        country: row.country,\n        currency: row.currency,\n        hgcy: row.hgcy,\n        gjcy: row.gjcy,\n        consignee_address: row.consignee_address\n    };\n    \n    var srcMH = src.s("WT");\n    var orderInfo = srcMH.row("select \'WT\' as sys_type,t.order_type as ie_type,t.order_no, t.ebp_code as ecp_code,t.ebp_name as ecp_name,t.ebc_code as cbe_code,t.ebc_name as cbe_name, t.consignee, t.consignee_telephone, t.consignee_address as coll_address, t.buyer_id_number, t.sys_date as sys_date, t.app_time as app_time,t.head_guid,t.actural_paid as total_price,t.head_guid as Relation_no, t.head_guid as biz_no from ceb2_ord_head t where t.order_no = ?",row.order_no);\n    if(orderInfo.sys_date){\n        orderInfo.sys_date = parseTime(orderInfo.sys_date);\n    }\n    if(orderInfo.app_time){\n        orderInfo.app_time = parseTime(orderInfo.app_time);\n    }\n    \n    orderInfo.ie_port = row.port_code;\n    orderInfo.customs_code = row.customs_code;\n    orderInfo.hgcy = row.hgcy;\n    orderInfo.gjcy = row.gjcy;\n    orderInfo.province = row.consignee_address;\n    orderInfo.country =row.country;\n    orderInfo.currency = row.currency;\n\n    var hjObj = rst.t("order_info","HJ");\n    hjObj.insert(orderInfo);\n\n    var srcMH2 = src.s("WT");\n    var product_list = srcMH2 .select("select \'WT\' as sys_type,t.head_guid as relation_no,t.ITEM_NAME as goods_name, t.G_NUM as qty, t.total_price as total_price, (select distinct g_code from ceb2_invt_list tt where tt.item_no = t.item_no and rownum = 1) as goods_type from ceb2_ord_list t  where t.head_guid = ?",orderInfo.relation_no);\n\n    for(var idx in product_list){\n        product_list[idx].order_no = orderInfo.order_no;\n        product_list[idx].order_time = orderInfo.app_time;\n    }\n    rst.q("PRD_INFO_Q", product_list);\n    \n    return true;\n}', '2017-02-15 15:21:09', NULL, NULL),
	(15, 2, '物通商品信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("PRD_INFO_Q"); \n    \n    var item = {\n        sys_type: row.sys_type,\n        relation_no: row.relation_no,\n        goods_name: row.goods_name,\n        qty: row.qty,\n        total_price: row.total_price,\n        goods_type: row.goods_type,\n        order_no: row.order_no,\n        order_time: parseTime(row.order_time) \n    };\n\n    item.type_level_1 = getGoodsLevel1(row.goods_type); \n    item.type_level_2 = getGoodsLevel2(row.goods_type);\n\n    var hjObj = rst.t("product_info","HJ");\n    hjObj.insert(item);\n    \n    return item;\n}\n\n\n\nfunction getGoodsLevel1(code) {\n    if (code == null)\n        return "其它";\n\n    var topMap = [\n        {name: "美妆个护", value: ["33", "960329", "9615", "9616"]},\n        {\n            name: "食品保健",\n            value: ["24", "02", "03", "04", "05", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21069090", "22", "25", "27", "28", "29"]\n        },\n        {name: "母婴用品", value: ["19011010", "19011090", "9619001"]},\n        {name: "皮包饰品", value: ["41", "42", "43", "71", "91"]},\n        {\n            name: "服饰鞋帽",\n            value: ["50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65"]\n        },\n        {name: "数码家电", value: ["84", "844", "847", "85", "8516", "8510", "88"]},\n        {\n            name: "生活用具",\n            value: ["30", "32", "36", "66", "67", "68", "69", "70", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "86", "87", "89", "900", "90", "9617", "92", "93", "94", "95", "96", "97", "35", "37", "39", "40", "44", "45", "46", "48", "49", "23"]\n        },\n        {name: "卫生清洁", value: ["34", "9619002", "38", "960321"]},\n        {name: "工农业原料", value: ["26", "31"]}\n    ];\n\n    var resultList = [];\n\n    for (var idx in topMap) {\n        var item = topMap[idx];\n        for (var jdx in item.value) {\n            item.value.sort(function (a, b) {\n                return (b + "").length - (a + "").length;\n            });\n            var c1 = item.value[jdx];\n            if (code.indexOf(c1) == 0)\n                resultList.push({name: item.name, value: c1});\n        }\n    }\n    if (resultList.length == 0)\n        return "其它";\n    resultList.sort(function (a, b) {\n        return (b.value + "").length - (a.value + "").length;\n    });\n    return resultList[0].name;\n};\n\nfunction getGoodsLevel2(code) {\n    if(code == null)\n        return "其它";\n        \n    var subMap = {\n        "21069090": "食品",\n        "19011010": "配方奶粉",\n        "19011090": "婴儿食品",\n        "9619001": "尿布",\n        "9619002": "卫生巾",\n        "960329": "化妆刷",\n        "960321": "牙刷",\n        "9615": "化妆工具",\n        "9616": "化妆工具",\n        "9619": "纸尿裤",\n        "9503": "玩具",\n        "9505": "玩具",\n        "8516": "厨卫家电",\n        "8510": "厨卫家电",\n        "9404": "家居坐具",\n        "9405": "灯饰",\n        "9506": "体育用品",\n        "9603": "刷子",\n        "9608": "笔刷",\n        "9609": "笔刷",\n        "9613": "打火机",\n        "9617": "保温瓶",\n        "961": "母婴用品",\n        "844": "办公电子设备",\n        "900": "眼镜",\n        "847": "办公电子设备",\n        "02": "肉食品",\n        "03": "海产品",\n        "04": "动物制食品",\n        "05": "贝壳粉",\n        "07": "干制蔬菜",\n        "08": "水果干果",\n        "09": "调味料",\n        "33": "日用化妆品",\n        "10": "谷物植物",\n        "11": "谷物植物",\n        "12": "谷物植物",\n        "13": "谷物植物",\n        "14": "谷物植物",\n        "15": "食用油",\n        "16": "肉食品",\n        "17": "糖",\n        "18": "可可食品",\n        "19": "面食品",\n        "20": "蔬果食品",\n        "21": "饮料汁调味",\n        "22": "葡萄酒饮料",\n        "25": "盐",\n        "27": "润滑油",\n        "28": "硅胶及非普通食品",\n        "29": "保健品",\n        "42": "皮具箱包",\n        "43": "毛皮制品",\n        "71": "首饰",\n        "91": "钟表",\n        "54": "丝巾",\n        "61": "服装",\n        "62": "服装",\n        "65": "帽",\n        "64": "鞋",\n        "84": "厨卫家电",\n        "85": "数码电气",\n        "30": "医用胶布",\n        "32": "颜料",\n        "56": "纤维品",\n        "57": "地毯",\n        "58": "纺织品",\n        "59": "纺织品",\n        "63": "针织品",\n        "66": "伞",\n        "67": "假发",\n        "68": "石制品",\n        "69": "餐具",\n        "70": "玻璃",\n        "73": "厨房不锈钢制品",\n        "74": "钢制品",\n        "76": "铝制品",\n        "82": "家用刀具",\n        "83": "夹具标牌",\n        "87": "自行车童车",\n        "90": "计量仪器",\n        "92": "乐器",\n        "93": "刀剑",\n        "35": "胶",\n        "37": "感光纸",\n        "39": "塑料制品",\n        "40": "橡胶用品",\n        "44": "木制品",\n        "45": "木制品",\n        "46": "竹制品",\n        "48": "纸品",\n        "49": "印刷品",\n        "23": "宠物粮",\n        "34": "洗涤用品",\n        "38": "消毒剂"\n    };\n\n    for (var c in subMap) {\n        if (code.indexOf(c) == 0)\n            return subMap[c];\n    }\n    return "其它";\n};', '2017-02-15 15:40:54', NULL, NULL),
	(17, 1, '队列持久化1', '', 'JS', 'function main(src, rst) {\n    var row = src.q("userBirthdayQ");\n    var item = {message: row.name};\n    rst.t("ala_testq1").insert(item);\n    return item;\n}\n\n\n\n\n', '2017-02-16 15:01:15', NULL, NULL),
	(18, 1, '队列持久化2', '', 'JS', 'function main(src, rst) {\n    var row = src.q("userBirthdayQ");\n    var item = {message: row.name};\n    \n    rst.t("ala_testq2").insert(item);\n    return item;\n}\n', '2017-02-16 15:02:11', NULL, NULL),
	(19, 5, '企业订单数统计', '', 'JS', 'function main(src, rst){\n    var row = src.r("qiye_info");\n    var item = {\n        qiye_id: row.qiye_id,\n        qiye_name: row.qiye_name,\n        qiye_type: row.qiye_type,\n        customs_code: row.customs_code,\n        ieport: row.ieport,\n        sys_type: row.sys_type\n    };\n    \n    rst.t("qiye_order_report").hit(item, row.order_time, 1);\n    return true;\n}\n', '2017-02-19 11:35:42', NULL, NULL),
	(20, 6, '贸易国别统计', '', 'JS', 'function main(src, rst){\n    var row = src.r("order_info");\n    \n    var item = {\n        order_no: row.order_no,\n        country: row.country,\n        calc_total_price: row.calc_total_price,\n        total_price: row.total_price,\n        currency: row.currency,\n        customs_code: row.customs_code,\n        ie_type: row.ie_type,\n        ie_port: row.ie_port,\n        sys_type: row.sys_type\n    };\n    \n    var ord_tm;\n    if("WT" == row.sys_type){\n        if(row.app_time){\n            ord_tm = row.app_time;\n            item.order_time = parseTime(row.app_time);\n        }\n    }else{\n        if(row.stime){\n            ord_tm = row.stime;\n            item.order_time = parseTime(row.stime);\n        }\n    }\n    rst.t("country_order_report").hit(item, ord_tm , 1);\n    return true;\n}', '2017-02-22 10:34:27', NULL, NULL),
	(21, 6, '消费者交易统计', '', 'JS', 'function main(src, rst){\n    var row = src.r("order_info");\n    \n    var item = {\n        order_no: row.order_no,\n        province: row.province,\n        calc_total_price: row.calc_total_price,\n        total_price: row.total_price,\n        currency: row.currency,\n        customs_code: row.customs_code,\n        ie_type: row.ie_type,\n        ie_port: row.ie_port,\n        sys_type: row.sys_type\n    };\n    \n    var ord_tm;\n    if("WT" == row.sys_type){\n        if(row.app_time){\n            ord_tm = row.app_time;\n            item.order_time = parseTime(row.app_time);\n        }\n    }else{\n        if(row.stime){\n            ord_tm = row.stime;\n            item.order_time = parseTime(row.stime);\n        }\n        \n    }\n    rst.t("province_order_report").hit(item, ord_tm , 1);\n    return true;\n}', '2017-02-22 15:54:18', NULL, NULL),
	(22, 6, '商品信息组装', '', 'JS', 'function main(src, rst){\n    var row = src.r("order_info");\n    \n    var item = {\n        order_no: row.order_no,\n        customs_code: row.customs_code,\n        ie_type: row.ie_type,\n        ie_port: row.ie_port,\n        sys_type: row.sys_type\n    };\n    \n    var srcHJ = src.s("HJ");\n    var product_list= srcHJ.select("select * from product_info where order_no = ?",item.order_no);\n        \n    for(var idx in product_list) {\n        product_list[idx].customs_code = item .customs_code;\n        product_list[idx].ie_type= item .ie_type;\n        product_list[idx].ie_port= item .ie_port;\n    }\n    \n    rst.q("product_type_Q", product_list);\n    return true;\n}', '2017-02-22 16:02:58', NULL, NULL),
	(23, 7, '贸易国别统计', '', 'JS', 'function main(src, rst){\n    var row = src.r("order_info");\n    \n    var item = {\n        order_no: row.order_no,\n        country: row.country,\n        calc_total_price: row.calc_total_price,\n        total_price: row.total_price,\n        currency: row.currency,\n        customs_code: row.customs_code,\n        ie_type: row.ie_type,\n        ie_port: row.ie_port,\n        sys_type: row.sys_type\n    };\n    \n    var ord_tm;\n    if("WT" == row.sys_type){\n        if(row.app_time){\n            ord_tm = row.app_time;\n            item.order_time = parseTime(row.app_time);\n        }\n    }else{\n        if(row.stime){\n            ord_tm = row.stime;\n            item.order_time = parseTime(row.stime);\n        }\n    }\n    rst.t("country_order_report").hit(item, ord_tm , 1);\n    return true;\n}', '2017-02-22 16:16:46', NULL, NULL),
	(25, 6, '商品品类交易统计', '', 'JS', 'function main(src, rst) {\n    var row = src.q("product_type_Q");\n    var item = {\n        order_no: row.order_no,\n        type_level_1: row.type_level_1,\n        type_level_2: row.type_level_2,\n        qty: row.qty,\n        goods_type: row.goods_type,\n        total_price: row.total_price,\n        calc_total_price: row.calc_total_price,\n        currency: row.currency,\n        customs_code: row.customs_code,\n        ie_port: row.ie_port,\n        ie_type: row.ie_type,\n        sys_type: row.sys_type,\n        order_time: parseTime(row.order_time)\n    };\n    \n    var ord_tm = row.order_time;\n    \n    rst.t("product_order_report").hit(item, ord_tm , 1);\n    \n    return item;\n}', '2017-02-22 16:38:30', NULL, NULL),
	(26, 2, '完结订单数据读取', '', 'JS', 'function main(src, rst){\n    var row= src.r("END_DATA_TABLE"); \n    var item = {\n        order_no: row.order_no,\n        row_id: row.row_id,\n        serial_no: row.serial_no,\n        sys_type: row.sys_type,\n        t_crt_tm: row.t_crt_tm,\n        t_upd_tm: row.t_upd_tm,\n        is_end_status: row.is_end_status\n    };\n\n    rst.q("END_DATA_Q", item);\n    return item;\n}', '2017-02-26 03:23:13', NULL, NULL),
	(27, 8, '完结订单数据读取', '', 'JS', 'function main(src, rst){\n    var row= src.r("END_DATA_TABLE"); \n    var item = {\n        order_no: row.order_no,\n        row_id: row.row_id,\n        serial_no: row.serial_no,\n        sys_type: row.sys_type,\n        t_crt_tm: row.t_crt_tm,\n        t_upd_tm: row.t_upd_tm,\n        is_end_status: row.is_end_status\n    };\n\n    rst.q("END_DATA_Q", item);\n    return item;\n}', '2017-02-26 04:05:50', NULL, NULL),
	(28, 8, '物通放行数据提取', '', 'JS', 'function main(src, rst){\n    var orderQ = src.q("END_DATA_Q");\n\n    var srcHJORA = src.s("HJ_ORA");\n    var row= srcHJORA.row("select * from CEB2_INVT_HEAD_RID inv where inv.row_id = ? ",orderQ.row_id);\n\n    if(row == null) return "取得CEB2_INVT_HEAD_RID rowid=" + orderQ.row_id + " 为NULL";\n\n    var item = {\n        head_guid: row.head_guid,\n        order_no: row.order_no,\n        customs_code: row.customs_code,\n        port_code: row.port_code,\n        traf_mode: row.traf_mode,\n        ie_flag: row.ie_flag,\n        ebc_code: row.ebc_code,\n        ebc_name: row.ebc_name,\n        ebp_code: row.ebp_code,\n        ebp_name: row.ebp_name,\n        logistics_no: row.logistics_no,\n        dist_time: row.dist_time,\n        logistics_code: row.logistics_code,\n        logistics_name: row.logistics_name,\n        country: row.country,\n        currency: row.currency,\n        consignee_address: row.consignee_address\n    };\n    \n    var mainTable = src.s("WT");\n    var srcGJ = src.s("GJ");\n\n    item.xdzf_min = srcGJ.scalar("select min(pay.pay_time) from imp_pay_head pay where pay.order_no = ? and pay.ebp_code = ?", row.order_no,row.ebp_code);\n    item.xdzf_max = item.xdzf_min;\n    item.ydrc_min = mainTable.scalar("select min(hed.app_time) from ceb2_delivery_head hed where hed.app_status = \'120\' and hed.head_guid in (select lst.head_guid from ceb2_delivery_list lst where lst.logistics_no = ?)", row.logistics_no);\n    item.ydrc_max = item.ydrc_min;\n    item.hgsb_min = mainTable.scalar("select min(pub.rtn_time) from ceb2_pub_rtn pub where pub.biz_guid = ? and pub.rtn_status = \'120\'", row.head_guid);\n    item.hgsb_max = item.hgsb_min;\n    item.hgfx_min = mainTable.scalar("select max(pub.rtn_time) from ceb2_pub_rtn pub where pub.biz_guid = ? and pub.rtn_status = \'800\'", row.head_guid);\n    item.hgfx_max = item.hgfx_min;\n    item.gjsb_min = srcGJ.scalar("select min(imp.app_time) from imp_invt_head imp where imp.audit_state = \'1\' and imp.order_no = ?", row.order_no);\n    item.gjsb_max = item.gjsb_min;\n    item.gjfx_min = srcGJ.scalar("select min(imp.apply_date) from imp_invt_head imp where imp.audit_state = \'1\' and imp.order_no = ?", row.order_no);\n    item.gjfx_max = item.gjfx_min;\n    item.fjfx_min = mainTable.scalar("select chk.check_date from check_mail_good_head chk where chk.op_type = \'01\' and chk.op_type_insp = \'01\' and chk.logistics_no = ?", row.logistics_no);\n    item.fjfx_max = item.fjfx_min;\n    var seq_no = mainTable.scalar("select (select seq_no from pre_dist_bill_list lst where lst.bill_no = t.entry_id) as seq_no from check_mail_good_head t where t.logistics_no = ? ", row.logistics_no);\n    item.hfsb_min = mainTable.scalar("select dhed.decl_date from pre_dist_head dhed where dhed.seq_no = ?", seq_no);\n    item.hfsb_max = item.hfsb_min;\n    item.hfcq_min = row.dist_time;\n    item.hfcq_max = row.dist_time;\n    item.tuotou_min = mainTable.scalar("select lgs.app_time from ecssent.ceb2_lgs_stat lgs where lgs.logistics_no = ?", row.order_no);\n    item.tuotou_max = item.tuotou_min;\n    item.consignee_address = getProvince(row.consignee_address);\n\n    item.hgcy = mainTable.scalar("select (case when count(1) > 0 then \'1\' else \'0\' end) as hgcy from ceb2_pub_rtn pub where pub.biz_guid = ? and pub.rtn_status = \'500\'", row.head_guid);\n    item.gjcy = srcGJ.scalar("select (case when count(1) > 0 then \'1\' else \'0\' end) as gjcy from imp_invt_head imp where imp.is_chy= \'1\' and imp.order_no = ?", row.order_no);\n\n    var time_arry = [item.xdzf_min,item.xdzf_max,item.ydrc_min,item.ydrc_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max,item.hfsb_min,item.hfsb_max,item.hfcq_min,item.hfcq_max,item.tuotou_min,item.tuotou_max];\n    for(var i=0,len=time_arry.length;i<len;i++){ \n        if(isEmpty(time_arry[i])){ \n            time_arry.splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    var start_time = time_arry.sort(function(a,b){return a - b})[0];\n    var end_time = time_arry.sort(function(a,b){return b - a})[0];\n    item.all_time_start = start_time;\n    item.all_time_end = end_time ;\n\n     var zyq_time_arry = [item.ydrc_min,item.ydrc_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max,item.hfsb_min,item.hfsb_max,item.hfcq_min,item.hfcq_max];\n    for(var i=0,len=zyq_time_arry .length;i<len;i++){ \n        if(isEmpty(zyq_time_arry [i])){ \n            zyq_time_arry .splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    var zyq_start_time = zyq_time_arry .sort(function(a,b){return a - b})[0];\n    var zyq_end_time = zyq_time_arry .sort(function(a,b){return b - a})[0];\n    item.zyq_time_start = zyq_start_time ;\n    item.zyq_time_end = zyq_end_time ;\n\n\n    item.cyfj_start = (function(a,b){\n        if(a > b){\n            return a;\n        }\n        return b;\n    })(item.hgfx_max,item.gjfx_max);\n\n\n    var minusTime = function(timeA,timeB){\n        if(isEmpty(timeA) || isEmpty(timeB)){\n            return 0;\n        }\n    \n        return rst.parseLong((Math.abs(timeA - timeB)/1000).toString());\n    };\n\n    item.gjwl_time = minusTime(item.ydrc_max,item.xdzf_min);\n    item.qysb_time = minusTime(item.hgsb_max,item.xdzf_min);\n    item.hgtg_time = minusTime(item.hgfx_max,item.hgsb_min);\n    item.gjtg_time = minusTime(item.gjfx_max,item.gjsb_min);\n    item.cyfj_time = minusTime(item.fjfx_max,item.cyfj_start);\n    item.shcq_time = minusTime(item.hfcq_max,item.hfsb_max);\n    if(isEmpty(item.tuotou_max)){\n        item.gnwl_time = (Math.random()*11 + 5)*60;\n    }else{\n        item.gnwl_time = minusTime(item.tuotou_max,item.hfcq_min);\n    }\n    item.all_time = minusTime(item.all_time_end,item.all_time_start);\n    item.zyq_time= minusTime(item.zyq_time_end,item.zyq_time_start);\n\n    rst.q("INVT_HEAD_Q", item);\n    return item;\n}\n\nfunction isEmpty(str){\n    return !str||str==\'\'||str === undefined;\n}\n\n\nvar getProvinceMap = function () {\n    return {\n        \'台湾\': [121.509062, 25.044332]\n        , \'河北\': [114.502461, 38.045474]\n        , \'山西\': [112.549248, 37.857014]\n        , \'内蒙古\': [111.670801, 40.818311]\n        , \'辽宁\': [123.429096, 41.796767]\n        , \'吉林\': [125.3245, 43.886841]\n        , \'黑龙江\': [126.642464, 45.756967]\n        , \'江苏\': [118.767413, 32.041544]\n        , \'浙江\': [120.153576, 30.287459]\n        , \'安徽\': [117.283042, 31.86119]\n        , \'福建\': [119.306239, 26.075302]\n        , \'江西\': [115.892151, 28.676493]\n        , \'山东\': [117.000923, 36.675807]\n        , \'河南\': [113.665412, 34.757975]\n        , \'湖北\': [114.298572, 30.584355]\n        , \'湖南\': [112.982279, 28.19409]\n        , \'广东\': [113.280637, 23.125178]\n        , \'广西\': [108.320004, 22.82402]\n        , \'海南\': [110.33119, 20.031971]\n        , \'四川\': [104.065735, 30.659462]\n        , \'贵州\': [106.713478, 26.578343]\n        , \'云南\': [102.712251, 25.040609]\n        , \'西藏\': [91.132212, 29.660361]\n        , \'陕西\': [108.948024, 34.263161]\n        , \'甘肃\': [103.823557, 36.058039]\n        , \'青海\': [101.778916, 36.623178]\n        , \'宁夏\': [106.278179, 38.46637]\n        , \'新疆\': [87.617733, 43.792818]\n        , \'北京\': [116.405285, 39.904989]\n        , \'天津\': [117.190182, 39.125596]\n        , \'上海\': [121.472644, 31.231706]\n        , \'重庆\': [106.504962, 29.533155]\n        , \'香港\': [114.173355, 22.320048]\n        , \'澳门\': [113.54909, 22.198951]\n    }\n};\n\nvar getProvince = function (address) {\n    var map = getProvinceMap();\n    var provinces = [];\n    for (var province in map) {\n        provinces.push(province);\n    }\n    provinces.sort(function (a, b) {\n        return a.length > b.length\n    });\n\n    var prov;\n    for (var idx in provinces) {\n        prov = provinces[idx];\n        if (address.indexOf(prov) > -1)\n            return prov;\n    }\n    return "其他";\n};', '2017-02-26 04:06:06', NULL, NULL),
	(29, 8, '物通企业信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("INVT_HEAD_Q"); \n    var dsItem = {\n        sys_type:"WT",\n        qiye_id:row.ebc_code,\n        qiye_name:row.ebc_name,\n        qiye_type:"DS",\n        customs_code:row.customs_code,\n        ieport: row.port_code, \n        order_no: row.order_no\n    };\n\n    var wlItem = {\n        sys_type:"WT",\n        qiye_id:row.logistics_code,\n        qiye_name:row.logistics_name,\n        qiye_type:"WL",\n        customs_code:row.customs_code,\n        ieport: row.ieport, \n        order_no: row.order_no\n    };\n    var objItem = [dsItem,wlItem];\n    \n    var srcWT = src.s("WT");\n    var orderInfo = srcWT.row("select \'WT\' as sys_type,t.order_type as ie_type,t.order_no, t.ebp_code as ecp_code,t.ebp_name as ecp_name,t.ebc_code as cbe_code,t.ebc_name as cbe_name, t.consignee, t.consignee_telephone, t.consignee_address as coll_address, t.buyer_id_number, t.sys_date as sys_date, t.app_time as app_time,t.head_guid,t.actural_paid as total_price,t.head_guid as Relation_no, t.head_guid as biz_no from ceb2_ord_head t where t.order_no = ?",row.order_no);\n\n\n    if(orderInfo == null) { return "找不到数据  ceb2_ord_head order_no=" + row.order_no;}\n\n\n    if(orderInfo.app_time){\n        orderInfo.app_time = parseTime(orderInfo.app_time);\n    }\n    \n    dsItem.order_time = orderInfo.app_time;\n    wlItem.order_time = orderInfo.app_time;\n    \n    var hjObj = rst.t("qiye_info","HJ");\n    hjObj.insert(dsItem);\n    hjObj.insert(wlItem);\n\n    return objItem;\n}', '2017-02-26 04:06:26', NULL, NULL),
	(30, 8, '物通时效数据存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("INVT_HEAD_Q"); \n    var item = {\n        head_guid:row.head_guid,\n        order_no:row.order_no,\n        customs_code:row.customs_code,\n        port_code:row.port_code,\n        traf_mode:row.traf_mode,\n        ie_flag:row.ie_flag,\n        ebc_code:row.ebc_code,\n        ebc_name:row.ebc_name,\n        hgcy: row.hgcy,\n        gjcy: row.gjcy,\n        xdzf_min:parseTime(row.xdzf_min),\n        xdzf_max:parseTime(row.xdzf_max),\n        ydrc_min:parseTime(row.ydrc_min),\n        ydrc_max:parseTime(row.ydrc_max),\n        hgsb_min:parseTime(row.hgsb_min),\n        hgsb_max:parseTime(row.hgsb_max),\n        hgfx_min:parseTime(row.hgfx_min),\n        hgfx_max:parseTime(row.hgfx_max),\n        gjsb_min:parseTime(row.gjsb_min),\n        gjsb_max:parseTime(row.gjsb_max),\n        gjfx_min:parseTime(row.gjfx_min),\n        gjfx_max:parseTime(row.gjfx_max),\n        fjfx_min:parseTime(row.fjfx_min),\n        fjfx_max:parseTime(row.fjfx_max),\n        hfsb_min:parseTime(row.hfsb_min),\n        hfsb_max:parseTime(row.hfsb_max),\n        hfcq_min:parseTime(row.hfcq_min),\n        hfcq_max:parseTime(row.hfcq_max),\n        tuotou_min:parseTime(row.tuotou_min),\n        tuotou_max:parseTime(row.tuotou_max),\n        gjwl_time:row.gjwl_time,\n        qysb_time:row.qysb_time,\n        hgtg_time:row.hgtg_time,\n        gjtg_time:row.gjtg_time,\n        cyfj_time:row.cyfj_time,\n        shcq_time:row.shcq_time,\n        gnwl_time:row.gnwl_time,\n        all_time:row.all_time,\n        zyq_time:row.zyq_time,\n        zyq_time_start:parseTime(row.zyq_time_start),\n        zyq_time_end:parseTime(row.zyq_time_end),\n        cyfj_start:parseTime(row.cyfj_start),\n        all_time_start:parseTime(row.all_time_start),\n        all_time_end:parseTime(row.all_time_end)\n    };\n    \n    item.status = src.orderStatus(item);\n    \n    var hjObj = rst.t("all_node_calc_time_wt","HJ");\n    var keys = hjObj.insert(item);\n    return keys;\n}', '2017-02-26 04:06:40', NULL, NULL),
	(31, 8, '物通订单信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("INVT_HEAD_Q"); \n\n    var item = {\n        head_guid: row.head_guid,\n        order_no: row.order_no,\n        customs_code: row.customs_code,\n        port_code: row.port_code,\n        traf_mode: row.traf_mode,\n        ie_flag: row.ie_flag,\n        ebc_code: row.ebc_code,\n        ebc_name: row.ebc_name,\n        country: row.country,\n        currency: row.currency,\n        hgcy: row.hgcy,\n        gjcy: row.gjcy,\n        consignee_address: row.consignee_address\n    };\n    \n    var srcMH = src.s("WT");\n    var orderInfo = srcMH.row("select \'WT\' as sys_type,t.order_type as ie_type,t.order_no, t.ebp_code as ecp_code,t.ebp_name as ecp_name,t.ebc_code as cbe_code,t.ebc_name as cbe_name, t.consignee, t.consignee_telephone, t.consignee_address as coll_address, t.buyer_id_number, t.sys_date as sys_date, t.app_time as app_time,t.head_guid,t.actural_paid as total_price,t.head_guid as Relation_no, t.head_guid as biz_no from ceb2_ord_head t where t.order_no = ?",row.order_no);\n\n    if(orderInfo == null) { return "找不到数据  ceb2_ord_head order_no=" + row.order_no;}\n\n    if(orderInfo.sys_date){\n        orderInfo.sys_date = parseTime(orderInfo.sys_date);\n    }\n    if(orderInfo.app_time){\n        orderInfo.app_time = parseTime(orderInfo.app_time);\n    }\n    \n    orderInfo.ie_port = row.port_code;\n    orderInfo.customs_code = row.customs_code;\n    orderInfo.hgcy = row.hgcy;\n    orderInfo.gjcy = row.gjcy;\n    orderInfo.province = row.consignee_address;\n    orderInfo.country =row.country;\n    orderInfo.currency = row.currency;\n\n    var hjObj = rst.t("order_info","HJ");\n    hjObj.insert(orderInfo);\n\n    var srcMH2 = src.s("WT");\n    var product_list = srcMH2 .select("select \'WT\' as sys_type,t.head_guid as relation_no,t.ITEM_NAME as goods_name, t.G_NUM as qty, t.total_price as total_price, (select distinct g_code from ceb2_invt_list tt where tt.item_no = t.item_no and rownum = 1) as goods_type from ceb2_ord_list t  where t.head_guid = ?",orderInfo.relation_no);\n\n    for(var idx in product_list){\n        product_list[idx].order_no = orderInfo.order_no;\n        product_list[idx].order_time = orderInfo.app_time;\n    }\n    rst.q("PRD_INFO_Q", product_list);\n    \n    return true;\n}', '2017-02-26 04:06:55', NULL, NULL),
	(32, 8, '物通商品信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("PRD_INFO_Q"); \n    \n    var item = {\n        sys_type: row.sys_type,\n        relation_no: row.relation_no,\n        goods_name: row.goods_name,\n        qty: row.qty,\n        total_price: row.total_price,\n        goods_type: row.goods_type,\n        order_no: row.order_no,\n        order_time: parseTime(row.order_time) \n    };\n\n    item.type_level_1 = getGoodsLevel1(row.goods_type); \n    item.type_level_2 = getGoodsLevel2(row.goods_type);\n\n    var hjObj = rst.t("product_info","HJ");\n    hjObj.insert(item);\n    \n    return item;\n}\n\n\n\nfunction getGoodsLevel1(code) {\n    if (code == null)\n        return "其它";\n\n    var topMap = [\n        {name: "美妆个护", value: ["33", "960329", "9615", "9616"]},\n        {\n            name: "食品保健",\n            value: ["24", "02", "03", "04", "05", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21069090", "22", "25", "27", "28", "29"]\n        },\n        {name: "母婴用品", value: ["19011010", "19011090", "9619001"]},\n        {name: "皮包饰品", value: ["41", "42", "43", "71", "91"]},\n        {\n            name: "服饰鞋帽",\n            value: ["50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65"]\n        },\n        {name: "数码家电", value: ["84", "844", "847", "85", "8516", "8510", "88"]},\n        {\n            name: "生活用具",\n            value: ["30", "32", "36", "66", "67", "68", "69", "70", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "86", "87", "89", "900", "90", "9617", "92", "93", "94", "95", "96", "97", "35", "37", "39", "40", "44", "45", "46", "48", "49", "23"]\n        },\n        {name: "卫生清洁", value: ["34", "9619002", "38", "960321"]},\n        {name: "工农业原料", value: ["26", "31"]}\n    ];\n\n    var resultList = [];\n\n    for (var idx in topMap) {\n        var item = topMap[idx];\n        for (var jdx in item.value) {\n            item.value.sort(function (a, b) {\n                return (b + "").length - (a + "").length;\n            });\n            var c1 = item.value[jdx];\n            if (code.indexOf(c1) == 0)\n                resultList.push({name: item.name, value: c1});\n        }\n    }\n    if (resultList.length == 0)\n        return "其它";\n    resultList.sort(function (a, b) {\n        return (b.value + "").length - (a.value + "").length;\n    });\n    return resultList[0].name;\n};\n\nfunction getGoodsLevel2(code) {\n    if(code == null)\n        return "其它";\n        \n    var subMap = {\n        "21069090": "食品",\n        "19011010": "配方奶粉",\n        "19011090": "婴儿食品",\n        "9619001": "尿布",\n        "9619002": "卫生巾",\n        "960329": "化妆刷",\n        "960321": "牙刷",\n        "9615": "化妆工具",\n        "9616": "化妆工具",\n        "9619": "纸尿裤",\n        "9503": "玩具",\n        "9505": "玩具",\n        "8516": "厨卫家电",\n        "8510": "厨卫家电",\n        "9404": "家居坐具",\n        "9405": "灯饰",\n        "9506": "体育用品",\n        "9603": "刷子",\n        "9608": "笔刷",\n        "9609": "笔刷",\n        "9613": "打火机",\n        "9617": "保温瓶",\n        "961": "母婴用品",\n        "844": "办公电子设备",\n        "900": "眼镜",\n        "847": "办公电子设备",\n        "02": "肉食品",\n        "03": "海产品",\n        "04": "动物制食品",\n        "05": "贝壳粉",\n        "07": "干制蔬菜",\n        "08": "水果干果",\n        "09": "调味料",\n        "33": "日用化妆品",\n        "10": "谷物植物",\n        "11": "谷物植物",\n        "12": "谷物植物",\n        "13": "谷物植物",\n        "14": "谷物植物",\n        "15": "食用油",\n        "16": "肉食品",\n        "17": "糖",\n        "18": "可可食品",\n        "19": "面食品",\n        "20": "蔬果食品",\n        "21": "饮料汁调味",\n        "22": "葡萄酒饮料",\n        "25": "盐",\n        "27": "润滑油",\n        "28": "硅胶及非普通食品",\n        "29": "保健品",\n        "42": "皮具箱包",\n        "43": "毛皮制品",\n        "71": "首饰",\n        "91": "钟表",\n        "54": "丝巾",\n        "61": "服装",\n        "62": "服装",\n        "65": "帽",\n        "64": "鞋",\n        "84": "厨卫家电",\n        "85": "数码电气",\n        "30": "医用胶布",\n        "32": "颜料",\n        "56": "纤维品",\n        "57": "地毯",\n        "58": "纺织品",\n        "59": "纺织品",\n        "63": "针织品",\n        "66": "伞",\n        "67": "假发",\n        "68": "石制品",\n        "69": "餐具",\n        "70": "玻璃",\n        "73": "厨房不锈钢制品",\n        "74": "钢制品",\n        "76": "铝制品",\n        "82": "家用刀具",\n        "83": "夹具标牌",\n        "87": "自行车童车",\n        "90": "计量仪器",\n        "92": "乐器",\n        "93": "刀剑",\n        "35": "胶",\n        "37": "感光纸",\n        "39": "塑料制品",\n        "40": "橡胶用品",\n        "44": "木制品",\n        "45": "木制品",\n        "46": "竹制品",\n        "48": "纸品",\n        "49": "印刷品",\n        "23": "宠物粮",\n        "34": "洗涤用品",\n        "38": "消毒剂"\n    };\n\n    for (var c in subMap) {\n        if (code.indexOf(c) == 0)\n            return subMap[c];\n    }\n    return "其它";\n};', '2017-02-26 04:07:10', NULL, NULL),
	(33, 9, '完结订单数据读取', '', 'JS', 'function main(src, rst){\n    var row= src.r("END_DATA_TABLE"); \n    var item = {\n        order_no: row.order_no,\n        row_id: row.row_id,\n        serial_no: row.serial_no,\n        sys_type: row.sys_type,\n        t_crt_tm: row.t_crt_tm,\n        t_upd_tm: row.t_upd_tm,\n        is_end_status: row.is_end_status\n    };\n\n    rst.q("END_DATA_Q", item);\n    return item;\n}', '2017-02-26 04:08:42', NULL, NULL),
	(34, 9, '美华放行数据提取', '', 'JS', 'function main(src, rst){\n    var orderQ = src.q("END_DATA_Q");\n\n    var srcHJORA = src.s("HJ_ORA");\n    var row= srcHJORA.row("select * from TB_BONDED_IMPORT_BILL_RID bill where bill.row_id = ? ",orderQ.row_id); \n\n    if(row == null) return "取得TB_BONDED_IMPORT_BILL_RID rowid=" + orderQ.row_id + " 为NULL";\n\n    var item = {\n        bill_id: row.bill_id,\n        orderno: row.orderno,\n        customs_code: row.customs_code,\n        ieport: row.ieport,\n        billmode: row.billmode,\n        ie_type: row.ie_type,\n        cbe_code: row.cbe_code,\n        cbe_name: row.cbe_name,\n        declaredate: row.declaredate,\n        main_code: row.main_code,\n        billno:row.billno,\n        logisticscode:row.logisticscode,\n        logisticsname:row.logisticsname,\n        currency: row.currency\n    };\n    \n    var mainTable = src.s("MH");\n    item.xdzf_min = mainTable.scalar("select min(pay.paytime) from tb_bonded_import_pay pay where pay.orderno = ?", row.orderno);\n    item.xdzf_max = mainTable.scalar("select max(pay.paytime) from tb_bonded_import_pay pay where pay.orderno = ?", row.orderno);\n    item.qysb_min = mainTable.scalar("select min(odr.stime) from tb_bonded_import_order odr where odr.orderno = ?", row.orderno);\n    item.qysb_max = mainTable.scalar("select max(odr.stime) from tb_bonded_import_order odr where odr.orderno = ?", row.orderno);\n    item.hgsb_min = row.declaredate;\n    item.hgsb_max = row.declaredate;\n    item.hgfx_min = mainTable.scalar("select max(lg.operate_time) from tb_operate_log lg where lg.bill_id = ? and (lg.remark = \' 自动审单放行\' or lg.remark = \'查验放行\')", row.bill_id);\n    item.hgfx_max = item.hgfx_min;\n    item.gjsb_min = mainTable.scalar("select  (select min(lg.operate_time) from tb_operate_log lg where lg.bill_id = ins.details_code  and lg.remark = \'检验检疫清单提交申报\') from  tb_bonded_imp_inspect_bill ins where ins.orderno = ?", row.orderno);\n    item.gjsb_max = item.gjsb_min;\n    item.gjfx_min = mainTable.scalar("select  (select max(lg.operate_time) from tb_operate_log lg where lg.bill_id = ins.details_code  and lg.remark like \'检验检疫回执%放行%\') from  tb_bonded_imp_inspect_bill ins where ins.orderno = ?", row.orderno);\n    item.gjfx_max = item.gjfx_min;\n    item.fjfx_min = mainTable.scalar("select max(lg.operate_time) from tb_operate_log lg where lg.bill_id = ? and lg.remark = \'清单机检放行\'", row.bill_id);\n    item.fjfx_max = item.fjfx_min;\n    item.qdhx_min = mainTable.scalar("select (select max(inf.insertdate)  from totalsinglearrivalinfo inf where inf.id = bdy.headid) from totalsinglearrivalbody bdy where bdy.totaltransferno = ? and bdy.transferno = ? and rownum = 1",row.main_code, row.billno);\n    item.qdhx_max = item.qdhx_min;\n\n    item.hgcy = mainTable.scalar("select (case when count(1) > 0 then \'1\' else \'0\' end) as hgcy from mhckdb.tb_operate_log lg where lg.remark = \'查验放行\' and lg.bill_id = ?", row.bill_id);\n    item.gjcy = mainTable.scalar("select (select (case when count(1) > 0 then \'1\' else \'0\' end) as gjcy from mhckdb.tb_operate_log lg where lg.remark like \'检验检疫回执:检验放行%\' and lg.bill_id = ins.details_code) from  tb_bonded_imp_inspect_bill ins where ins.orderno = ? and rownum = 1", row.orderno);\n\n    var time_arry = [item.xdzf_min,item.xdzf_max,item.qysb_min,item.qysb_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max,item.qdhx_min,item.qdhx_max];\n    \n    for(var i=0,len=time_arry.length;i<len;i++){ \n        if(isEmpty(time_arry[i])){ \n            time_arry.splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    \n    var start_time = time_arry.sort(function(a,b){return a - b})[0];\n    var end_time = time_arry.sort(function(a,b){return b - a})[0];\n    item.all_time_start = start_time;\n    item.all_time_end = end_time;\n    \n    \n    var zyq_time_arry = [item.qysb_min,item.qysb_max,item.hgsb_min,item.hgsb_max,item.hgfx_min,item.hgfx_max,item.gjsb_min,item.gjsb_max,item.gjfx_min,item.gjfx_max,item.fjfx_min,item.fjfx_max];\n    \n    for(var i=0,len=zyq_time_arry.length;i<len;i++){ \n        if(isEmpty(zyq_time_arry[i])){ \n            zyq_time_arry.splice(i,1); \n            len--; \n            i--; \n        }\n    }\n    \n    var zyq_start_time = zyq_time_arry.sort(function(a,b){return a - b})[0];\n    var zyq_end_time = zyq_time_arry.sort(function(a,b){return b - a})[0];\n    item.zyq_time_start = zyq_start_time ;\n    item.zyq_time_end = zyq_end_time ;\n\n    item.cyfj_start = (function(a,b){\n        if(a > b){\n            return a;\n        }\n        return b;\n    })(item.hgfx_max,item.gjfx_max);\n    \n    \n    var minusTime = function(timeA,timeB){\n        if(isEmpty(timeA) || isEmpty(timeB)){\n            return 0;\n        }\n    \n        return rst.parseLong((Math.abs(timeA - timeB)/1000).toString());\n    };\n\n    item.dssb_time = minusTime(item.qysb_max,item.xdzf_min);\n    item.qysb_time = minusTime(item.hgsb_max,item.qysb_min);\n    item.hgtg_time = minusTime(item.hgfx_max,item.hgsb_min);\n    item.gjtg_time = minusTime(item.gjfx_max,item.gjsb_min);\n    item.cyfj_time = minusTime(item.fjfx_max,item.cyfj_start);\n    item.zjcg_time = minusTime(item.qdhx_max,item.cyfj_start);\n    item.all_time = minusTime(item.all_time_end,item.all_time_start);\n    item.zyq_time = minusTime(item.zyq_time_end,item.zyq_time_start);\n    \n    rst.q("importBillQ", item);\n    return item;\n}\n\nfunction isEmpty(str){\n    return !str||str==\'\'||str === undefined;\n}', '2017-02-26 04:11:36', NULL, NULL),
	(35, 9, '美华时效数据存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("importBillQ"); \n    var item = {\n        orderno:row.orderno,\n        bill_id:row.bill_id,\n        customs_code:row.customs_code,\n        ieport:row.ieport,\n        ie_type:row.ie_type,\n        billmode:row.billmode,\n        cbe_code:row.cbe_code,\n        cbe_name:row.cbe_name,\n        hgcy: row.hgcy,\n        gjcy: row.gjcy,\n        xdzf_min:parseTime(row.xdzf_min),\n        xdzf_max:parseTime(row.xdzf_max),\n        qysb_min:parseTime(row.qysb_min),\n        qysb_max:parseTime(row.qysb_max),\n        hgsb_min:parseTime(row.hgsb_min),\n        hgsb_max:parseTime(row.hgsb_max),\n        hgfx_min:parseTime(row.hgfx_min),\n        hgfx_max:parseTime(row.hgfx_max),\n        gjsb_min:parseTime(row.gjsb_min),\n        gjsb_max:parseTime(row.gjsb_max),\n        gjfx_min:parseTime(row.gjfx_min),\n        gjfx_max:parseTime(row.gjfx_max),\n        fjfx_min:parseTime(row.fjfx_min),\n        fjfx_max:parseTime(row.fjfx_max),\n        qdhx_min:parseTime(row.qdhx_min),\n        qdhx_max:parseTime(row.qdhx_max),\n        dssb_time:row.dssb_time,\n        qysb_time:row.qysb_time,\n        hgtg_time:row.hgtg_time,\n        gjtg_time:row.gjtg_time,\n        cyfj_time:row.cyfj_time,\n        zjcg_time:row.zjcg_time,\n        all_time:row.all_time,\n        zyq_time:row.zyq_time,\n        zyq_time_start:parseTime(row.zyq_time_start),\n        zyq_time_end:parseTime(row.zyq_time_end),\n        cyfj_start:parseTime(row.cyfj_start),\n        all_time_start:parseTime(row.all_time_start),\n        all_time_end:parseTime(row.all_time_end)\n    };\n    \n    item.status = src.orderStatus(item);\n    \n    var hjObj = rst.t("all_node_calc_time_mh","HJ");\n    hjObj.insert(item);\n    return item;\n}', '2017-02-26 04:12:02', NULL, NULL),
	(36, 9, '美华企业信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("importBillQ"); \n    var dsItem = {\n        sys_type:"MH",\n        qiye_id:row.cbe_code,\n        qiye_name:row.cbe_name,\n        qiye_type:"DS",\n        customs_code:row.customs_code,\n        ieport: row.ieport,\n        order_no: row.orderno\n    };\n\n    var wlItem = {\n        sys_type:"MH",\n        qiye_id:row.logisticscode,\n        qiye_name:row.logisticsname,\n        qiye_type:"WL",\n        customs_code:row.customs_code,\n        ieport: row.ieport,\n        order_no: row.orderno\n    };\n    var objItem = [dsItem,wlItem];\n    \n    var srcMH = src.s("MH");\n    var orderInfo = srcMH .row("select \'MH\' as sys_type, t.ietype as ie_type, t.orderno as order_no, t.cbe_code, t.cbe_code_insp, t.cbe_name, t.ecpcode as ecp_code, t.ecpname as ecp_name, t.coll_ccib_countryno, t.coll_address, t.ordersum as order_sum, t.submit_time, t.stime, t.qdstime, \'\' as head_guid, t.ordersum as total_price, t.id as Relation_no, t.orderno as biz_no, t.coll_ccib_countryno as country from tb_bonded_import_order t where t.orderno = ?",row.orderno);\n\n\n    if(orderInfo == null) { return "找不到数据  tb_bonded_import_order orderno=" + row.orderno;}\n\n\n    if(orderInfo.stime){\n        orderInfo.stime = parseTime(orderInfo.stime);\n        dsItem.order_time = orderInfo.stime;\n        wlItem.order_time = orderInfo.stime;\n    }\n\n    var hjObj = rst.t("qiye_info","HJ");\n    hjObj.insert(dsItem);\n    hjObj.insert(wlItem);\n\n    return objItem;\n}', '2017-02-26 04:12:18', NULL, NULL),
	(37, 9, '美华订单信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("importBillQ"); \n    var item = {\n        orderno:row.orderno,\n        bill_id:row.bill_id,\n        customs_code:row.customs_code,\n        ieport:row.ieport,\n        ie_type:row.ie_type,\n        billmode:row.billmode,\n        cbe_code:row.cbe_code,\n        cbe_name:row.cbe_name,\n        hgcy:row.hgcy,\n        gjcy:row.gjcy,\n        currency: row.currency\n    };\n    \n    var srcMH = src.s("MH");\n    var orderInfo = srcMH.row("select \'MH\' as sys_type, t.ietype as ie_type, t.orderno as order_no, t.cbe_code, t.cbe_code_insp, t.cbe_name, t.ecpcode as ecp_code, t.ecpname as ecp_name, t.coll_ccib_countryno, t.coll_address, t.ordersum as order_sum, t.submit_time, t.stime, t.qdstime, \'\' as head_guid, t.ordersum as total_price, t.id as Relation_no, t.orderno as biz_no, t.coll_ccib_countryno as country from tb_bonded_import_order t where t.orderno = ?",row.orderno);\n    if(isEmpty(orderInfo )){\n        return "orderInfo is empty" + row.orderno;\n    }\n    if(!isEmpty(orderInfo.submit_time)){\n        orderInfo.submit_time = parseTime(orderInfo.submit_time);\n    }\n    if(!isEmpty(orderInfo.stime)){\n        orderInfo.stime  = parseTime(orderInfo.stime );\n    }\n    if(!isEmpty(orderInfo.qdstime)){\n        orderInfo.qdstime = parseTime(orderInfo.qdstime);\n    }\n    orderInfo.ie_port = row.ieport;\n    orderInfo.customs_code = row.customs_code;\n    orderInfo.hgcy = row.hgcy;\n    orderInfo.gjcy = row.gjcy;\n    orderInfo.currency = row.currency;\n    if(orderInfo.currency == \'502\'){\n        orderInfo.calc_total_price = orderInfo.total_price;\n    }\n\n    var hjObj = rst.t("order_info","HJ");\n    hjObj.insert(orderInfo);\n\n    var srcMH2 = src.s("MH");\n    var product_list= srcMH2 .select("select \'MH\' as sys_type, t.headid as relation_no,  t.goodname as goods_name,  t.amount as qty, t.ordersum as total_price, t.barcode as goods_type from tb_bonded_import_order_product t where t.headid = ?",orderInfo.relation_no);\n    \n    for(var idx in product_list) {\n        product_list[idx].order_no = orderInfo.order_no;\n        product_list[idx].order_time = orderInfo.stime;\n        product_list[idx].currency = orderInfo.currency;\n    }\n    \n    rst.q("PRD_INFO_Q", product_list);\n    \n    return true;\n}\nfunction isEmpty(str){\n    return !str||str==\'\'||str === undefined;\n}', '2017-02-26 04:12:29', NULL, NULL),
	(38, 9, '美华商品信息存储', '', 'JS', 'function main(src, rst) {\n    var row = src.q("PRD_INFO_Q"); \n    \n    var item = {\n        sys_type:row.sys_type,\n        relation_no:row.relation_no,\n        goods_name:row.goods_name,\n        qty:row.qty,\n        total_price:row.total_price,\n        goods_type:row.goods_type,\n        order_no: row.order_no,\n        order_time: parseTime(row.order_time),\n        currency: row.currency \n    };\n\n    if(item.currency == \'502\'){\n        item.calc_total_price = item.total_price;\n    }\n\n    item.type_level_1 = getGoodsLevel1(row.goods_type); \n    item.type_level_2 = getGoodsLevel2(row.goods_type);\n\n    var hjObj = rst.t("product_info","HJ");\n    hjObj.insert(item);\n    \n    return item;\n}\n\n\n\nfunction getGoodsLevel1(code) {\n    if (code == null)\n        return "其它";\n\n    var topMap = [\n        {name: "美妆个护", value: ["33", "960329", "9615", "9616"]},\n        {\n            name: "食品保健",\n            value: ["24", "02", "03", "04", "05", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21069090", "22", "25", "27", "28", "29"]\n        },\n        {name: "母婴用品", value: ["19011010", "19011090", "9619001"]},\n        {name: "皮包饰品", value: ["41", "42", "43", "71", "91"]},\n        {\n            name: "服饰鞋帽",\n            value: ["50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65"]\n        },\n        {name: "数码家电", value: ["84", "844", "847", "85", "8516", "8510", "88"]},\n        {\n            name: "生活用具",\n            value: ["30", "32", "36", "66", "67", "68", "69", "70", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "86", "87", "89", "900", "90", "9617", "92", "93", "94", "95", "96", "97", "35", "37", "39", "40", "44", "45", "46", "48", "49", "23"]\n        },\n        {name: "卫生清洁", value: ["34", "9619002", "38", "960321"]},\n        {name: "工农业原料", value: ["26", "31"]}\n    ];\n\n    var resultList = [];\n\n    for (var idx in topMap) {\n        var item = topMap[idx];\n        for (var jdx in item.value) {\n            item.value.sort(function (a, b) {\n                return (b + "").length - (a + "").length;\n            });\n            var c1 = item.value[jdx];\n            if (code.indexOf(c1) == 0)\n                resultList.push({name: item.name, value: c1});\n        }\n    }\n    if (resultList.length == 0)\n        return "其它";\n    resultList.sort(function (a, b) {\n        return (b.value + "").length - (a.value + "").length;\n    });\n    return resultList[0].name;\n};\n\nfunction getGoodsLevel2(code) {\n    if(code == null)\n        return "其它";\n        \n    var subMap = {\n        "21069090": "食品",\n        "19011010": "配方奶粉",\n        "19011090": "婴儿食品",\n        "9619001": "尿布",\n        "9619002": "卫生巾",\n        "960329": "化妆刷",\n        "960321": "牙刷",\n        "9615": "化妆工具",\n        "9616": "化妆工具",\n        "9619": "纸尿裤",\n        "9503": "玩具",\n        "9505": "玩具",\n        "8516": "厨卫家电",\n        "8510": "厨卫家电",\n        "9404": "家居坐具",\n        "9405": "灯饰",\n        "9506": "体育用品",\n        "9603": "刷子",\n        "9608": "笔刷",\n        "9609": "笔刷",\n        "9613": "打火机",\n        "9617": "保温瓶",\n        "961": "母婴用品",\n        "844": "办公电子设备",\n        "900": "眼镜",\n        "847": "办公电子设备",\n        "02": "肉食品",\n        "03": "海产品",\n        "04": "动物制食品",\n        "05": "贝壳粉",\n        "07": "干制蔬菜",\n        "08": "水果干果",\n        "09": "调味料",\n        "33": "日用化妆品",\n        "10": "谷物植物",\n        "11": "谷物植物",\n        "12": "谷物植物",\n        "13": "谷物植物",\n        "14": "谷物植物",\n        "15": "食用油",\n        "16": "肉食品",\n        "17": "糖",\n        "18": "可可食品",\n        "19": "面食品",\n        "20": "蔬果食品",\n        "21": "饮料汁调味",\n        "22": "葡萄酒饮料",\n        "25": "盐",\n        "27": "润滑油",\n        "28": "硅胶及非普通食品",\n        "29": "保健品",\n        "42": "皮具箱包",\n        "43": "毛皮制品",\n        "71": "首饰",\n        "91": "钟表",\n        "54": "丝巾",\n        "61": "服装",\n        "62": "服装",\n        "65": "帽",\n        "64": "鞋",\n        "84": "厨卫家电",\n        "85": "数码电气",\n        "30": "医用胶布",\n        "32": "颜料",\n        "56": "纤维品",\n        "57": "地毯",\n        "58": "纺织品",\n        "59": "纺织品",\n        "63": "针织品",\n        "66": "伞",\n        "67": "假发",\n        "68": "石制品",\n        "69": "餐具",\n        "70": "玻璃",\n        "73": "厨房不锈钢制品",\n        "74": "钢制品",\n        "76": "铝制品",\n        "82": "家用刀具",\n        "83": "夹具标牌",\n        "87": "自行车童车",\n        "90": "计量仪器",\n        "92": "乐器",\n        "93": "刀剑",\n        "35": "胶",\n        "37": "感光纸",\n        "39": "塑料制品",\n        "40": "橡胶用品",\n        "44": "木制品",\n        "45": "木制品",\n        "46": "竹制品",\n        "48": "纸品",\n        "49": "印刷品",\n        "23": "宠物粮",\n        "34": "洗涤用品",\n        "38": "消毒剂"\n    };\n\n    for (var c in subMap) {\n        if (code.indexOf(c) == 0)\n            return subMap[c];\n    }\n    return "其它";\n};', '2017-02-26 04:12:42', NULL, NULL);
/*!40000 ALTER TABLE `ds_script` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_service_type
DROP TABLE IF EXISTS `ds_service_type`;
CREATE TABLE IF NOT EXISTS `ds_service_type` (
  `stid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '业务类型ID',
  `st_code` varchar(20) NOT NULL COMMENT '业务代码',
  `st_name` varchar(20) NOT NULL COMMENT '业务名称',
  `serial_no` int(10) NOT NULL COMMENT '序号',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`stid`),
  KEY `serial_no` (`serial_no`),
  KEY `create_time` (`create_time`)
) ENGINE=InnoDB AUTO_INCREMENT=6397 DEFAULT CHARSET=utf8 COMMENT='业务类型';

-- Dumping data for table datasquid.ds_service_type: ~5 rows (approximately)
DELETE FROM `ds_service_type`;
/*!40000 ALTER TABLE `ds_service_type` DISABLE KEYS */;
INSERT INTO `ds_service_type` (`stid`, `st_code`, `st_name`, `serial_no`, `create_time`) VALUES
	(6392, 'KGZY', '空港直邮进口业务', 1, '2017-02-07 08:57:30'),
	(6393, 'LGZY', '陆港直邮进口业务', 2, '2017-02-07 09:02:20'),
	(6394, 'KGCK', '空港一般出口业务', 3, '2017-02-07 09:29:34'),
	(6395, 'KGBS', '空港保税进口业务', 4, '2017-02-07 09:29:35'),
	(6396, 'LGZG', '陆港转关进口业务', 5, '2017-02-07 09:29:35');
/*!40000 ALTER TABLE `ds_service_type` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_source_host
DROP TABLE IF EXISTS `ds_source_host`;
CREATE TABLE IF NOT EXISTS `ds_source_host` (
  `shid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '源主机ID',
  `name` varchar(50) NOT NULL COMMENT '名称',
  `description` varchar(200) NOT NULL COMMENT '描述',
  `host` varchar(50) NOT NULL COMMENT '主机地址',
  `type` varchar(20) NOT NULL COMMENT '类型',
  `database_name` varchar(50) NOT NULL COMMENT '数据库名',
  `account` varchar(50) NOT NULL COMMENT '帐号',
  `password` varchar(50) NOT NULL COMMENT '密码',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`shid`),
  KEY `create_time` (`create_time`),
  KEY `name` (`name`),
  KEY `host` (`host`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='源主机表';

-- Dumping data for table datasquid.ds_source_host: ~6 rows (approximately)
DELETE FROM `ds_source_host`;
/*!40000 ALTER TABLE `ds_source_host` DISABLE KEYS */;
INSERT INTO `ds_source_host` (`shid`, `name`, `description`, `host`, `type`, `database_name`, `account`, `password`, `create_time`) VALUES
	(4, 'MH', '美华出口 DataGuard', '10.100.140.192:1521', 'ORACLE', 'XNJKA', 'MHCKDB', 'mhckdb', '2017-01-24 16:51:25'),
	(5, 'GJ', '国检', '10.100.140.192:1521', 'ORACLE', 'XNJKA', 'GGFW_ZHENGZHOU', 'ggfw_zhengzhou', '2017-01-24 17:00:00'),
	(6, 'WT', '物通 DataGuard', '10.100.140.192:1521', 'ORACLE', 'XNJKA', 'ECSSENT', 'ecssent', '2017-01-24 17:00:24'),
	(7, 'test', '', '10.100.130.156', 'MYSQL', 'test', 'datasquid', 'datasquid', '2017-01-28 23:19:18'),
	(8, 'HJ_ORA', '汇聚数据库', '10.100.140.192:1521', 'ORACLE', 'XNJKA', 'converger', 'converger', '2017-02-08 17:01:24'),
	(9, 'HJ', '汇聚 MySQL', '10.100.130.156', 'MYSQL', 'datasquid', 'datasquid', 'datasquid', '2017-02-14 21:59:37');
/*!40000 ALTER TABLE `ds_source_host` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_source_table
DROP TABLE IF EXISTS `ds_source_table`;
CREATE TABLE IF NOT EXISTS `ds_source_table` (
  `stid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '源表ID',
  `shid` int(10) unsigned NOT NULL COMMENT '源主机ID',
  `table_name` varchar(50) NOT NULL COMMENT '物理表名',
  `name` varchar(50) NOT NULL COMMENT '逻辑表名',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`stid`),
  KEY `create_time` (`create_time`),
  KEY `shid` (`shid`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=670 DEFAULT CHARSET=utf8 COMMENT='源表';

-- Dumping data for table datasquid.ds_source_table: ~565 rows (approximately)
DELETE FROM `ds_source_table`;
/*!40000 ALTER TABLE `ds_source_table` DISABLE KEYS */;
INSERT INTO `ds_source_table` (`stid`, `shid`, `table_name`, `name`, `create_time`) VALUES
	(51, 4, 'TB_IMPORT_PAY_BK', 'TB_IMPORT_PAY_BK', '2017-01-24 16:51:29'),
	(52, 4, 'TB_OUT_NUCLEAR_HEAD', 'TB_OUT_NUCLEAR_HEAD', '2017-01-24 16:51:29'),
	(53, 4, 'TB_PRODUCT_MODIFY_MAIN', 'TB_PRODUCT_MODIFY_MAIN', '2017-01-24 16:51:29'),
	(54, 4, 'OLDZH_TB_DEPOSIT', 'OLDZH_TB_DEPOSIT', '2017-01-24 16:51:29'),
	(55, 4, 'OLDZSH_TB_COMPANY_RECORD_BASE', 'OLDZSH_TB_COMPANY_RECORD_BASE', '2017-01-24 16:51:29'),
	(56, 4, 'TB_CAR_RECORD', 'TB_CAR_RECORD', '2017-01-24 16:51:30'),
	(57, 4, 'SPECIES', 'SPECIES', '2017-01-24 16:51:30'),
	(58, 4, 'TB_PRODUCT_HEAD_TEM', 'TB_PRODUCT_HEAD_TEM', '2017-01-24 16:51:30'),
	(59, 4, 'TB_FILE_ATTACH1', 'TB_FILE_ATTACH1', '2017-01-24 16:51:30'),
	(60, 4, 'TB_BONDED_CORR_DESCRIBUTE', 'TB_BONDED_CORR_DESCRIBUTE', '2017-01-24 16:51:30'),
	(61, 4, 'TB_B_INVENTORY_HEAD', 'TB_B_INVENTORY_HEAD', '2017-01-24 16:51:30'),
	(62, 4, 'TB_FILE_ATTACH', 'TB_FILE_ATTACH', '2017-01-24 16:51:30'),
	(63, 4, 'TB_H_NAPPLY_BODY', 'TB_H_NAPPLY_BODY', '2017-01-24 16:51:30'),
	(64, 4, 'TB_ID_NO_INFO', 'TB_ID_NO_INFO', '2017-01-24 16:51:30'),
	(65, 4, 'TB_SHOW_RECORD_FILE', 'TB_SHOW_RECORD_FILE', '2017-01-24 16:51:30'),
	(66, 4, 'TB_YB_BODY', 'TB_YB_BODY', '2017-01-24 16:51:31'),
	(67, 4, 'TB_SUM_DECLARATION_BODY_DATE', 'TB_SUM_DECLARATION_BODY_DATE', '2017-01-24 16:51:31'),
	(68, 4, 'OLDZH_TB_PRODUCT_MODIFY_MAIN', 'OLDZH_TB_PRODUCT_MODIFY_MAIN', '2017-01-24 16:51:31'),
	(69, 4, 'FINAL_ADJUSTMENT_BODY', 'FINAL_ADJUSTMENT_BODY', '2017-01-24 16:51:31'),
	(70, 4, 'TB_H_APPLY_HEAD', 'TB_H_APPLY_HEAD', '2017-01-24 16:51:31'),
	(71, 4, 'T_USER_INFO', 'T_USER_INFO', '2017-01-24 16:51:31'),
	(72, 4, 'FORFEITURE_BODY', 'FORFEITURE_BODY', '2017-01-24 16:51:31'),
	(73, 4, 'TB_SALES_INFO', 'TB_SALES_INFO', '2017-01-24 16:51:31'),
	(74, 4, 'TB_OPERATE_LOG', 'TB_OPERATE_LOG', '2017-01-24 16:51:31'),
	(75, 4, 'OLDSH_TB_ID_NO_RECORD', 'OLDSH_TB_ID_NO_RECORD', '2017-01-24 16:51:31'),
	(76, 4, 'TB_ALI_PAY_BK', 'TB_ALI_PAY_BK', '2017-01-24 16:51:31'),
	(77, 4, 'IN_REPORT_HEAD_BODY_DETAILS_TE', 'IN_REPORT_HEAD_BODY_DETAILS_TE', '2017-01-24 16:51:31'),
	(78, 4, 'ALL_NODE_TRACE', 'ALL_NODE_TRACE', '2017-01-24 16:51:31'),
	(79, 4, 'TB_PRODUCT_IMP_BATCH', 'TB_PRODUCT_IMP_BATCH', '2017-01-24 16:51:31'),
	(80, 4, 'TB_SUM_TAX_BODY', 'TB_SUM_TAX_BODY', '2017-01-24 16:51:31'),
	(81, 4, 'TB_FILE_ATTACH_TEM', 'TB_FILE_ATTACH_TEM', '2017-01-24 16:51:31'),
	(82, 4, 'TB_SUM_DECLARATION_INFO', 'TB_SUM_DECLARATION_INFO', '2017-01-24 16:51:31'),
	(83, 4, 'OLDZH_TB_PRODUCT_MAIN', 'OLDZH_TB_PRODUCT_MAIN', '2017-01-24 16:51:31'),
	(84, 4, 'SYS_TEMP_FBT', 'SYS_TEMP_FBT', '2017-01-24 16:51:31'),
	(85, 4, 'TB_B_INVENTORY_BODY', 'TB_B_INVENTORY_BODY', '2017-01-24 16:51:31'),
	(86, 4, 'TB_OUT_NUCLEAR_BODY', 'TB_OUT_NUCLEAR_BODY', '2017-01-24 16:51:31'),
	(87, 4, 'TB_PRODUCT_RECORD_BKP', 'TB_PRODUCT_RECORD_BKP', '2017-01-24 16:51:31'),
	(88, 4, 'PRODUCT_INFO', 'PRODUCT_INFO', '2017-01-24 16:51:31'),
	(89, 4, 'TB_B_COMPARA_REPERTORY', 'TB_B_COMPARA_REPERTORY', '2017-01-24 16:51:31'),
	(90, 4, 'SINGLE_LIHUO_INFO', 'SINGLE_LIHUO_INFO', '2017-01-24 16:51:32'),
	(91, 4, 'TB_P_GOODS_LICENSE_DETAIL', 'TB_P_GOODS_LICENSE_DETAIL', '2017-01-24 16:51:32'),
	(92, 4, 'TB_LOOK_UP_TYPE', 'TB_LOOK_UP_TYPE', '2017-01-24 16:51:32'),
	(93, 4, 'TB_H_NAPPLY_HEAD', 'TB_H_NAPPLY_HEAD', '2017-01-24 16:51:32'),
	(94, 4, 'TB_SUMMARY_SALES_INFO', 'TB_SUMMARY_SALES_INFO', '2017-01-24 16:51:32'),
	(95, 4, 'IN_NUCLEAR_HEAD', 'IN_NUCLEAR_HEAD', '2017-01-24 16:51:32'),
	(96, 4, 'TB_BONDED_IMPORT_ORDER_PRODUCT', 'TB_BONDED_IMPORT_ORDER_PRODUCT', '2017-01-24 16:51:32'),
	(97, 4, 'TB_LINE_CASUAL_HEAD_TEM', 'TB_LINE_CASUAL_HEAD_TEM', '2017-01-24 16:51:32'),
	(98, 4, 'TB_YB_SUM_DECLARATION_INFO', 'TB_YB_SUM_DECLARATION_INFO', '2017-01-24 16:51:32'),
	(99, 4, 'FORFEITURE_HEAD', 'FORFEITURE_HEAD', '2017-01-24 16:51:32'),
	(100, 4, 'TB_DEPOSIT', 'TB_DEPOSIT', '2017-01-24 16:51:32'),
	(101, 4, 'TB_FIRSTLINE_CHECKPERSON_BODY', 'TB_FIRSTLINE_CHECKPERSON_BODY', '2017-01-24 16:51:32'),
	(102, 4, 'TB_DEPOSIT_LOG', 'TB_DEPOSIT_LOG', '2017-01-24 16:51:32'),
	(103, 4, 'IN_NUCLEAR_BODY_TEM', 'IN_NUCLEAR_BODY_TEM', '2017-01-24 16:51:32'),
	(104, 4, 'SYS_PARAM_JY', 'SYS_PARAM_JY', '2017-01-24 16:51:32'),
	(105, 4, 'TB_BONDED_GOODS_CODE_MANAGE', 'TB_BONDED_GOODS_CODE_MANAGE', '2017-01-24 16:51:32'),
	(106, 4, 'OLDZH_OLDZH_TB_FILE_ATTACH', 'OLDZH_OLDZH_TB_FILE_ATTACH', '2017-01-24 16:51:32'),
	(107, 4, 'TB_COMPANY_RECORD_TEST', 'TB_COMPANY_RECORD_TEST', '2017-01-24 16:51:32'),
	(108, 4, 'TB_ID_NO_RECORD', 'TB_ID_NO_RECORD', '2017-01-24 16:51:32'),
	(109, 4, 'TB_COMPANY_RECORD_BASE_TEM', 'TB_COMPANY_RECORD_BASE_TEM', '2017-01-24 16:51:32'),
	(110, 4, 'TB_SUM_DECLARATION_BODY_TUI', 'TB_SUM_DECLARATION_BODY_TUI', '2017-01-24 16:51:32'),
	(111, 4, 'TUI_IN_NUCLEAR_HEAD', 'TUI_IN_NUCLEAR_HEAD', '2017-01-24 16:51:32'),
	(112, 4, 'DSPBASB_HEAD', 'DSPBASB_HEAD', '2017-01-24 16:51:32'),
	(113, 4, 'TB_P_BASE_VEHICLE', 'TB_P_BASE_VEHICLE', '2017-01-24 16:51:32'),
	(114, 4, 'TB_BASICS_TAX_HEADER', 'TB_BASICS_TAX_HEADER', '2017-01-24 16:51:32'),
	(115, 4, 'TB_C', 'TB_C', '2017-01-24 16:51:33'),
	(116, 4, 'TB_HEAD', 'TB_HEAD', '2017-01-24 16:51:33'),
	(117, 4, 'TB_LOOK_UP', 'TB_LOOK_UP', '2017-01-24 16:51:33'),
	(118, 4, 'IN_REPORT_HEAD_BODY', 'IN_REPORT_HEAD_BODY', '2017-01-24 16:51:33'),
	(119, 4, 'TB_B_COMPARABACK_BODY', 'TB_B_COMPARABACK_BODY', '2017-01-24 16:51:33'),
	(120, 4, 'TB_FIRSTLINE_INSPECT', 'TB_FIRSTLINE_INSPECT', '2017-01-24 16:51:33'),
	(121, 4, 'TB_LIST_RECORD_DETAILS', 'TB_LIST_RECORD_DETAILS', '2017-01-24 16:51:33'),
	(122, 4, 'SYS_PARAM', 'SYS_PARAM', '2017-01-24 16:51:33'),
	(123, 4, 'TB_SUM_DECLARATION_INFO_TUI', 'TB_SUM_DECLARATION_INFO_TUI', '2017-01-24 16:51:33'),
	(124, 4, 'APP_PARAM_TYPE', 'APP_PARAM_TYPE', '2017-01-24 16:51:33'),
	(125, 4, 'IN_NUCLEAR_BODY', 'IN_NUCLEAR_BODY', '2017-01-24 16:51:33'),
	(126, 4, 'ORDER_INFO', 'ORDER_INFO', '2017-01-24 16:51:33'),
	(127, 4, 'TB_PRODUCT_RECORD', 'TB_PRODUCT_RECORD', '2017-01-24 16:51:33'),
	(128, 4, 'TB_BONDED_IMPORT_BILL', 'TB_BONDED_IMPORT_BILL', '2017-01-24 16:51:33'),
	(129, 4, 'TB_YB_SUM_DECLARA_BODY_DATE', 'TB_YB_SUM_DECLARA_BODY_DATE', '2017-01-24 16:51:33'),
	(130, 4, 'SYS_MENU', 'SYS_MENU', '2017-01-24 16:51:33'),
	(131, 4, 'TB_SUM_DECLARATION_INFO_TEMP', 'TB_SUM_DECLARATION_INFO_TEMP', '2017-01-24 16:51:33'),
	(132, 4, 'OLDZH_TB_PRODUCT_RECORD', 'OLDZH_TB_PRODUCT_RECORD', '2017-01-24 16:51:33'),
	(133, 4, 'ALL_NODE_TRACE_TIME', 'ALL_NODE_TRACE_TIME', '2017-01-24 16:51:33'),
	(134, 4, 'TB_COMPANY_RECORD_BASE', 'TB_COMPANY_RECORD_BASE', '2017-01-24 16:51:33'),
	(135, 4, 'SYS_MSGLOG', 'SYS_MSGLOG', '2017-01-24 16:51:33'),
	(136, 4, 'TB_YB_HEAD', 'TB_YB_HEAD', '2017-01-24 16:51:34'),
	(137, 4, 'TB_SUM_OUT_HEAD_TEM', 'TB_SUM_OUT_HEAD_TEM', '2017-01-24 16:51:34'),
	(138, 4, 'TOTALSINGLEARRIVALBODY', 'TOTALSINGLEARRIVALBODY', '2017-01-24 16:51:34'),
	(139, 4, 'TB_FILE_GOODS_TEM', 'TB_FILE_GOODS_TEM', '2017-01-24 16:51:34'),
	(140, 4, 'TB_SUM_TAX_HEADER', 'TB_SUM_TAX_HEADER', '2017-01-24 16:51:34'),
	(141, 4, 'YBMSOPREC', 'YBMSOPREC', '2017-01-24 16:51:34'),
	(142, 4, 'TB_BONDED_IMPORT_TRANSFER', 'TB_BONDED_IMPORT_TRANSFER', '2017-01-24 16:51:34'),
	(143, 4, 'OLDZH_TB_COMPANY_RECORD_SHOP', 'OLDZH_TB_COMPANY_RECORD_SHOP', '2017-01-24 16:51:34'),
	(144, 4, 'TB_BONDED_IMPORT_PAY', 'TB_BONDED_IMPORT_PAY', '2017-01-24 16:51:34'),
	(145, 4, 'FINAL_ADJUSTMENT_HEAD', 'FINAL_ADJUSTMENT_HEAD', '2017-01-24 16:51:34'),
	(146, 4, 'TB_H_APPLY_BODY', 'TB_H_APPLY_BODY', '2017-01-24 16:51:34'),
	(147, 4, 'TB_ICCARD_RECORD', 'TB_ICCARD_RECORD', '2017-01-24 16:51:34'),
	(148, 4, 'QIYE_INFO', 'QIYE_INFO', '2017-01-24 16:51:34'),
	(149, 4, 'TB_LINE_CASUAL_BODY', 'TB_LINE_CASUAL_BODY', '2017-01-24 16:51:34'),
	(150, 4, 'RELATION_MAP', 'RELATION_MAP', '2017-01-24 16:51:34'),
	(151, 4, 'OPERREX', 'OPERREX', '2017-01-24 16:51:34'),
	(152, 4, 'AREA_INFO', 'AREA_INFO', '2017-01-24 16:51:34'),
	(153, 4, 'TB_DEPOSIT_TEST', 'TB_DEPOSIT_TEST', '2017-01-24 16:51:34'),
	(154, 4, 'TB_B_COMPARA_REPERTORY_BODY', 'TB_B_COMPARA_REPERTORY_BODY', '2017-01-24 16:51:34'),
	(155, 4, 'TB_COMPANY_RECORD_SHOP', 'TB_COMPANY_RECORD_SHOP', '2017-01-24 16:51:34'),
	(156, 4, 'TB_P_GOODS_LICENSE', 'TB_P_GOODS_LICENSE', '2017-01-24 16:51:34'),
	(157, 4, 'APP_PARAM', 'APP_PARAM', '2017-01-24 16:51:34'),
	(158, 4, 'PET', 'PET', '2017-01-24 16:51:34'),
	(159, 4, 'SYS_PARAM_TYPE', 'SYS_PARAM_TYPE', '2017-01-24 16:51:34'),
	(160, 4, 'TB_SALES_BODY_DETAILS', 'TB_SALES_BODY_DETAILS', '2017-01-24 16:51:34'),
	(161, 4, 'TB_COMPANY_TEST6', 'TB_COMPANY_TEST6', '2017-01-24 16:51:34'),
	(162, 4, 'TB_PERMIT_RECORD_INSP_BODY', 'TB_PERMIT_RECORD_INSP_BODY', '2017-01-24 16:51:34'),
	(163, 4, 'TB_BONDED_IMPORT_ORDER', 'TB_BONDED_IMPORT_ORDER', '2017-01-24 16:51:34'),
	(164, 4, 'TB_COMPANY_TEST5', 'TB_COMPANY_TEST5', '2017-01-24 16:51:34'),
	(165, 4, 'TB_SUMMARY_SALES_BODY_DETAILS', 'TB_SUMMARY_SALES_BODY_DETAILS', '2017-01-24 16:51:35'),
	(166, 4, 'SYS_USER', 'SYS_USER', '2017-01-24 16:51:35'),
	(167, 4, 'TB_FIRSTLINE_CHECKPERSON', 'TB_FIRSTLINE_CHECKPERSON', '2017-01-24 16:51:35'),
	(168, 4, 'TB_COMPANY_TEST2', 'TB_COMPANY_TEST2', '2017-01-24 16:51:35'),
	(169, 4, 'TB_YB_SUM_DECLARATION_HEAD', 'TB_YB_SUM_DECLARATION_HEAD', '2017-01-24 16:51:35'),
	(170, 4, 'TB_COMPANY_TEST4', 'TB_COMPANY_TEST4', '2017-01-24 16:51:35'),
	(171, 4, 'TB_SUM_DECLARATION_HEAD', 'TB_SUM_DECLARATION_HEAD', '2017-01-24 16:51:35'),
	(172, 4, 'OLDZH_TB_COMPANY_RECORD_TYPE', 'OLDZH_TB_COMPANY_RECORD_TYPE', '2017-01-24 16:51:35'),
	(173, 4, 'TB_COMPANY_TEST3', 'TB_COMPANY_TEST3', '2017-01-24 16:51:35'),
	(174, 4, 'TB_B_REQUISIT_BODY', 'TB_B_REQUISIT_BODY', '2017-01-24 16:51:35'),
	(175, 4, 'TB_H_APPLY_INFO', 'TB_H_APPLY_INFO', '2017-01-24 16:51:35'),
	(176, 4, 'KINDS_OF_DICTIONARY', 'KINDS_OF_DICTIONARY', '2017-01-24 16:51:35'),
	(177, 4, 'SYS_PARK_COMPANY', 'SYS_PARK_COMPANY', '2017-01-24 16:51:35'),
	(178, 4, 'TB_ZSZX_BODY', 'TB_ZSZX_BODY', '2017-01-24 16:51:35'),
	(179, 4, 'TB_BONDED_BILL_MAIN', 'TB_BONDED_BILL_MAIN', '2017-01-24 16:51:35'),
	(180, 4, 'A_FUWU_GOOD', 'A_FUWU_GOOD', '2017-01-24 16:51:35'),
	(181, 4, 'TB_COMPANY_RECORD_SHOP_TEM', 'TB_COMPANY_RECORD_SHOP_TEM', '2017-01-24 16:51:35'),
	(182, 4, 'IN_REPORT_HEAD_BODY_DETAILS', 'IN_REPORT_HEAD_BODY_DETAILS', '2017-01-24 16:51:35'),
	(183, 4, 'TB_LINE_CASUAL_BODY_TEM', 'TB_LINE_CASUAL_BODY_TEM', '2017-01-24 16:51:35'),
	(184, 4, 'TB_LINE_CASUAL_HEAD', 'TB_LINE_CASUAL_HEAD', '2017-01-24 16:51:35'),
	(185, 4, 'OLD_TB_COMPANY_RECORD_TYPE', 'OLD_TB_COMPANY_RECORD_TYPE', '2017-01-24 16:51:35'),
	(186, 4, 'TB_HSCODE_BKP', 'TB_HSCODE_BKP', '2017-01-24 16:51:35'),
	(187, 4, 'TB_BONDED_IMP_INSPECT_BILL', 'TB_BONDED_IMP_INSPECT_BILL', '2017-01-24 16:51:35'),
	(188, 4, 'TB_PRODUCT_BODY_TEM', 'TB_PRODUCT_BODY_TEM', '2017-01-24 16:51:35'),
	(189, 4, 'IN_NUCLEAR_HEAD_TEM', 'IN_NUCLEAR_HEAD_TEM', '2017-01-24 16:51:35'),
	(190, 4, 'IN_REPORT_HEAD_BODY_TEM', 'IN_REPORT_HEAD_BODY_TEM', '2017-01-24 16:51:35'),
	(191, 4, 'TB_BONDED_POSITIVE_LIST', 'TB_BONDED_POSITIVE_LIST', '2017-01-24 16:51:35'),
	(192, 4, 'TB_COMPANY_RECORD_TYPE', 'TB_COMPANY_RECORD_TYPE', '2017-01-24 16:51:36'),
	(193, 4, 'TB_SALES_INFO_DETAILS', 'TB_SALES_INFO_DETAILS', '2017-01-24 16:51:36'),
	(194, 4, 'TB_COMPANY_RECORD_TYPE_TEM', 'TB_COMPANY_RECORD_TYPE_TEM', '2017-01-24 16:51:36'),
	(195, 4, 'TB_FIRSTLINE_INSPECT_GOODS_TEM', 'TB_FIRSTLINE_INSPECT_GOODS_TEM', '2017-01-24 16:51:36'),
	(196, 4, 'SYS_DEPARTMENT', 'SYS_DEPARTMENT', '2017-01-24 16:51:36'),
	(197, 4, 'TB_PERMIT_RECORD_INSP', 'TB_PERMIT_RECORD_INSP', '2017-01-24 16:51:36'),
	(198, 4, 'TB_BASICS_TAX_BODY', 'TB_BASICS_TAX_BODY', '2017-01-24 16:51:36'),
	(199, 4, 'TB_BONDED_NEGATIVE_GOODS', 'TB_BONDED_NEGATIVE_GOODS', '2017-01-24 16:51:36'),
	(200, 4, 'TUI_IN_NUCLEAR_BODY', 'TUI_IN_NUCLEAR_BODY', '2017-01-24 16:51:36'),
	(201, 4, 'DTCMESSAGE', 'DTCMESSAGE', '2017-01-24 16:51:36'),
	(202, 4, 'TB_SUM_DECLARATION_BODY', 'TB_SUM_DECLARATION_BODY', '2017-01-24 16:51:36'),
	(203, 4, 'TB_BODY', 'TB_BODY', '2017-01-24 16:51:36'),
	(204, 4, 'BASE_CAR', 'BASE_CAR', '2017-01-24 16:51:36'),
	(205, 4, 'TB_PRODUCT_BODY', 'TB_PRODUCT_BODY', '2017-01-24 16:51:36'),
	(206, 4, 'TB_FIRSTLINE_INSPECT_TEM', 'TB_FIRSTLINE_INSPECT_TEM', '2017-01-24 16:51:36'),
	(207, 4, 'TB_SUMMARY_SALES_INFO_DETAILS', 'TB_SUMMARY_SALES_INFO_DETAILS', '2017-01-24 16:51:36'),
	(208, 4, 'TB_B_REQUISIT_HEAD', 'TB_B_REQUISIT_HEAD', '2017-01-24 16:51:36'),
	(209, 4, 'TB_FIRSTLINE_INSPECT_GOODS', 'TB_FIRSTLINE_INSPECT_GOODS', '2017-01-24 16:51:36'),
	(210, 4, 'TB_SUM_OUT_BODY_TEM', 'TB_SUM_OUT_BODY_TEM', '2017-01-24 16:51:36'),
	(211, 4, 'TB_YB_SUM_DECLARATION_BODY', 'TB_YB_SUM_DECLARATION_BODY', '2017-01-24 16:51:36'),
	(212, 4, 'TB_COMPANY_RECORD_INSPE_TEM', 'TB_COMPANY_RECORD_INSPE_TEM', '2017-01-24 16:51:36'),
	(213, 4, 'TB_LIST_RECORD', 'TB_LIST_RECORD', '2017-01-24 16:51:36'),
	(214, 4, 'A_FUWU', 'A_FUWU', '2017-01-24 16:51:36'),
	(215, 4, 'TB_SUM_DECLARATION_HEAD_TUI', 'TB_SUM_DECLARATION_HEAD_TUI', '2017-01-24 16:51:36'),
	(216, 4, 'TB_PERMIT_RECORD', 'TB_PERMIT_RECORD', '2017-01-24 16:51:36'),
	(217, 4, 'TB_COMPANY_ATTACH_TYPE', 'TB_COMPANY_ATTACH_TYPE', '2017-01-24 16:51:36'),
	(218, 4, 'TB_PRODUCT_MAIN', 'TB_PRODUCT_MAIN', '2017-01-24 16:51:36'),
	(219, 4, 'IN_REPORT_HEAD', 'IN_REPORT_HEAD', '2017-01-24 16:51:37'),
	(220, 4, 'TB_ZSZCSQ_HEAD', 'TB_ZSZCSQ_HEAD', '2017-01-24 16:51:37'),
	(221, 4, 'TB_B_SHOW_BODY', 'TB_B_SHOW_BODY', '2017-01-24 16:51:37'),
	(222, 4, 'TB_BONDED_IMPORT_BILL_PRODUCT', 'TB_BONDED_IMPORT_BILL_PRODUCT', '2017-01-24 16:51:37'),
	(223, 4, 'TB_COMPANY_TEST', 'TB_COMPANY_TEST', '2017-01-24 16:51:37'),
	(224, 4, 'TB_SHIP_CONTAINER', 'TB_SHIP_CONTAINER', '2017-01-24 16:51:37'),
	(225, 4, 'TB_PRODUCT_HEAD', 'TB_PRODUCT_HEAD', '2017-01-24 16:51:37'),
	(226, 4, 'TB_H_GOODS_NEWCODE_MANAGE', 'TB_H_GOODS_NEWCODE_MANAGE', '2017-01-24 16:51:37'),
	(227, 4, 'TB_SHOW_RECORD', 'TB_SHOW_RECORD', '2017-01-24 16:51:37'),
	(228, 4, 'TB_FILE_ATTACH_TEM2', 'TB_FILE_ATTACH_TEM2', '2017-01-24 16:51:37'),
	(229, 4, 'TB_SUM_OUT_INFO_TEM', 'TB_SUM_OUT_INFO_TEM', '2017-01-24 16:51:37'),
	(230, 4, 'TB_B_SHOW_HEAD', 'TB_B_SHOW_HEAD', '2017-01-24 16:51:37'),
	(231, 4, 'TB_COMPANY_RECORD_BASE_TEST', 'TB_COMPANY_RECORD_BASE_TEST', '2017-01-24 16:51:37'),
	(232, 4, 'SINGLE_OUT', 'SINGLE_OUT', '2017-01-24 16:51:37'),
	(233, 4, 'TOTALSINGLEARRIVALINFO', 'TOTALSINGLEARRIVALINFO', '2017-01-24 16:51:37'),
	(234, 4, 'SYS_ROLE', 'SYS_ROLE', '2017-01-24 16:51:37'),
	(235, 4, 'TB_B_COMPARABACK_REPERTORY', 'TB_B_COMPARABACK_REPERTORY', '2017-01-24 16:51:37'),
	(236, 4, 'TB_DEPOSIT_DETAILS', 'TB_DEPOSIT_DETAILS', '2017-01-24 16:51:37'),
	(237, 4, 'OLDZH_TB_COMPANY_RECORD', 'OLDZH_TB_COMPANY_RECORD', '2017-01-24 16:51:37'),
	(238, 4, 'TB_LINE_CASUAL_ATTACH_TEM', 'TB_LINE_CASUAL_ATTACH_TEM', '2017-01-24 16:51:37'),
	(239, 4, 'SYS_ROLE_DISTRICT', 'SYS_ROLE_DISTRICT', '2017-01-24 16:51:37'),
	(240, 4, 'TB_COMPANY_RECORD_INSPE', 'TB_COMPANY_RECORD_INSPE', '2017-01-24 16:51:37'),
	(241, 4, 'SYS_USER_ROLE', 'SYS_USER_ROLE', '2017-01-24 16:51:37'),
	(242, 4, 'TB_PERMIT_RECORD_BODY', 'TB_PERMIT_RECORD_BODY', '2017-01-24 16:51:37'),
	(243, 4, 'IN_REPORT_HEAD_TEM', 'IN_REPORT_HEAD_TEM', '2017-01-24 16:51:37'),
	(244, 4, 'TB_BONDED_COMPANY_DATE', 'TB_BONDED_COMPANY_DATE', '2017-01-24 16:51:38'),
	(245, 4, 'TB_HSCODE', 'TB_HSCODE', '2017-01-24 16:51:38'),
	(246, 4, 'TB_LINE_CASUAL_ATTACH', 'TB_LINE_CASUAL_ATTACH', '2017-01-24 16:51:38'),
	(247, 4, 'TB_UPLOAD_RECORD', 'TB_UPLOAD_RECORD', '2017-01-24 16:51:38'),
	(248, 4, 'GATE_ICCARD_INFO', 'GATE_ICCARD_INFO', '2017-01-24 16:51:38'),
	(249, 4, 'DEMO', 'DEMO', '2017-01-24 16:51:38'),
	(250, 5, 'IMP_PAY_HEAD', 'IMP_PAY_HEAD', '2017-01-24 17:00:29'),
	(251, 5, 'IMP_ORD_HEAD', 'IMP_ORD_HEAD', '2017-01-24 17:00:29'),
	(252, 6, 'CUR_BILL_FS_LIST', 'CUR_BILL_FS_LIST', '2017-01-24 17:00:34'),
	(253, 6, 'LICENSE_LIST', 'LICENSE_LIST', '2017-01-24 17:00:34'),
	(254, 6, 'RETURN_GOODS_LIST', 'RETURN_GOODS_LIST', '2017-01-24 17:00:34'),
	(255, 6, 'DEC_DRAFT_IMG', 'DEC_DRAFT_IMG', '2017-01-24 17:00:34'),
	(256, 6, 'INVT_CHECKMAIL', 'INVT_CHECKMAIL', '2017-01-24 17:00:34'),
	(257, 6, 'ORDER_TRADE_SNAPSHOT', 'ORDER_TRADE_SNAPSHOT', '2017-01-24 17:00:34'),
	(258, 6, 'REPORT_EXTENDED_PARAM', 'REPORT_EXTENDED_PARAM', '2017-01-24 17:00:34'),
	(259, 6, 'CUR_PERSONAL_DECLARE_HEAD', 'CUR_PERSONAL_DECLARE_HEAD', '2017-01-24 17:00:35'),
	(260, 6, 'LOGISTICS_INFORMATION', 'LOGISTICS_INFORMATION', '2017-01-24 17:00:35'),
	(261, 6, 'CEB2_PUB_TRANSFER', 'CEB2_PUB_TRANSFER', '2017-01-24 17:00:35'),
	(262, 6, 'CUSTOMS_PAY_BOOK', 'CUSTOMS_PAY_BOOK', '2017-01-24 17:00:35'),
	(263, 6, 'IMPORT_DISREGULATORY_DOCU_HIS', 'IMPORT_DISREGULATORY_DOCU_HIS', '2017-01-24 17:00:35'),
	(264, 6, 'CEB2_INVT_CANCEL', 'CEB2_INVT_CANCEL', '2017-01-24 17:00:35'),
	(265, 6, 'CEB2_LGS_STAT', 'CEB2_LGS_STAT', '2017-01-24 17:00:35'),
	(266, 6, 'CEB2_TAX_HEAD', 'CEB2_TAX_HEAD', '2017-01-24 17:00:35'),
	(267, 6, 'PRE_DIST_VE_LIST', 'PRE_DIST_VE_LIST', '2017-01-24 17:00:35'),
	(268, 6, 'GUARANTY_LIST', 'GUARANTY_LIST', '2017-01-24 17:00:35'),
	(269, 6, 'CUR_BILL_GOODS_LIST', 'CUR_BILL_GOODS_LIST', '2017-01-24 17:00:35'),
	(270, 6, 'COMP_WHITE_LIST_PARAM', 'COMP_WHITE_LIST_PARAM', '2017-01-24 17:00:35'),
	(271, 6, 'CEB2_INVT_HEAD', 'CEB2_INVT_HEAD', '2017-01-24 17:00:35'),
	(272, 6, 'COLLECT_BILL_LIST', 'COLLECT_BILL_LIST', '2017-01-24 17:00:35'),
	(273, 6, 'CEB2_INVT_LIST_END', 'CEB2_INVT_LIST_END', '2017-01-24 17:00:35'),
	(274, 6, 'CUR_DIST_VE_LIST', 'CUR_DIST_VE_LIST', '2017-01-24 17:00:35'),
	(275, 6, 'CEB2_INVT_REFUND_HEAD', 'CEB2_INVT_REFUND_HEAD', '2017-01-24 17:00:35'),
	(276, 6, 'CEB2_DELIVERY_HEAD', 'CEB2_DELIVERY_HEAD', '2017-01-24 17:00:35'),
	(277, 6, 'DXP_RECE_MSG', 'DXP_RECE_MSG', '2017-01-24 17:00:35'),
	(278, 6, 'PRE_BILL_FS_LIST', 'PRE_BILL_FS_LIST', '2017-01-24 17:00:35'),
	(279, 6, 'PHONENUMBER_LIMIT_PARAM_HIS', 'PHONENUMBER_LIMIT_PARAM_HIS', '2017-01-24 17:00:35'),
	(280, 6, 'PRE_LMS_HEAD', 'PRE_LMS_HEAD', '2017-01-24 17:00:36'),
	(281, 6, 'GOODS_RANDOM_PARAMTER', 'GOODS_RANDOM_PARAMTER', '2017-01-24 17:00:36'),
	(282, 6, 'IMPORT_DEC_CLEARED', 'IMPORT_DEC_CLEARED', '2017-01-24 17:00:36'),
	(283, 6, 'STORE_TOTAL', 'STORE_TOTAL', '2017-01-24 17:00:36'),
	(284, 6, 'DIRECT_PASS_CONFIG', 'DIRECT_PASS_CONFIG', '2017-01-24 17:00:36'),
	(285, 6, 'GOODS_SUPERVISE_TRANSFER_BILL', 'GOODS_SUPERVISE_TRANSFER_BILL', '2017-01-24 17:00:36'),
	(286, 6, 'TAX_BILL_HEAD', 'TAX_BILL_HEAD', '2017-01-24 17:00:36'),
	(287, 6, 'CUSTOMS_PAY_BOOK_TASK', 'CUSTOMS_PAY_BOOK_TASK', '2017-01-24 17:00:36'),
	(288, 6, 'PERSONAL_IMPORT_LIM_RECORD', 'PERSONAL_IMPORT_LIM_RECORD', '2017-01-24 17:00:36'),
	(289, 6, 'USER_REL_ORG_USER', 'USER_REL_ORG_USER', '2017-01-24 17:00:36'),
	(290, 6, 'GOODS_VALID_DIGIT_EXPORT', 'GOODS_VALID_DIGIT_EXPORT', '2017-01-24 17:00:36'),
	(291, 6, 'PRE_GOODS_LIST', 'PRE_GOODS_LIST', '2017-01-24 17:00:36'),
	(292, 6, 'ATTACHMENT_INFO', 'ATTACHMENT_INFO', '2017-01-24 17:00:36'),
	(293, 6, 'GOODS_LIST_OPERAT_HIS', 'GOODS_LIST_OPERAT_HIS', '2017-01-24 17:00:36'),
	(294, 6, 'OPERATION', 'OPERATION', '2017-01-24 17:00:36'),
	(295, 6, 'CEB2_PUB_RTN', 'CEB2_PUB_RTN', '2017-01-24 17:00:36'),
	(296, 6, 'STORE_COMPARE_GOODS', 'STORE_COMPARE_GOODS', '2017-01-24 17:00:36'),
	(297, 6, 'LMS_AUTHORIZE', 'LMS_AUTHORIZE', '2017-01-24 17:00:36'),
	(298, 6, 'USER_ROLE', 'USER_ROLE', '2017-01-24 17:00:36'),
	(299, 6, 'ID_INFO_SAMPLE_CHECK_PARAM', 'ID_INFO_SAMPLE_CHECK_PARAM', '2017-01-24 17:00:36'),
	(300, 6, 'COLLECT_RELATION_HEAD', 'COLLECT_RELATION_HEAD', '2017-01-24 17:00:37'),
	(301, 6, 'EXCHRATE', 'EXCHRATE', '2017-01-24 17:00:37'),
	(302, 6, 'STORE_BILL_HEAD', 'STORE_BILL_HEAD', '2017-01-24 17:00:37'),
	(303, 6, 'CEB_PRE_COMPANY_INFO', 'CEB_PRE_COMPANY_INFO', '2017-01-24 17:00:37'),
	(304, 6, 'SIMP_GOODS_CHECK_PARAM_HIS', 'SIMP_GOODS_CHECK_PARAM_HIS', '2017-01-24 17:00:37'),
	(305, 6, 'DISTRIBUTE_BILL_RELATION_HIS', 'DISTRIBUTE_BILL_RELATION_HIS', '2017-01-24 17:00:37'),
	(306, 6, 'CEB2_LGS_HEAD', 'CEB2_LGS_HEAD', '2017-01-24 17:00:37'),
	(307, 6, 'USER_ORG', 'USER_ORG', '2017-01-24 17:00:37'),
	(308, 6, 'CEB2_INVT_LIST', 'CEB2_INVT_LIST', '2017-01-24 17:00:37'),
	(309, 6, 'SUN_SHIPPED_PARAM_HIS', 'SUN_SHIPPED_PARAM_HIS', '2017-01-24 17:00:37'),
	(310, 6, 'PRE_QUA_HEAD', 'PRE_QUA_HEAD', '2017-01-24 17:00:37'),
	(311, 6, 'PERSONAL_CHECK_PARAM_LOG_LIST', 'PERSONAL_CHECK_PARAM_LOG_LIST', '2017-01-24 17:00:37'),
	(312, 6, 'PRICE_RISK_PARAM', 'PRICE_RISK_PARAM', '2017-01-24 17:00:37'),
	(313, 6, 'STORE_COMPARE_HEAD', 'STORE_COMPARE_HEAD', '2017-01-24 17:00:37'),
	(314, 6, 'COMPANY_INFO_HIS', 'COMPANY_INFO_HIS', '2017-01-24 17:00:37'),
	(315, 6, 'STORE_BILL_GOODS_LIST', 'STORE_BILL_GOODS_LIST', '2017-01-24 17:00:37'),
	(316, 6, 'KEY_COMP_PARAM_HIS', 'KEY_COMP_PARAM_HIS', '2017-01-24 17:00:37'),
	(317, 6, 'REPORT_EXTENDED_PARAM_HIS', 'REPORT_EXTENDED_PARAM_HIS', '2017-01-24 17:00:37'),
	(318, 6, 'COMPANY_RANDOM_RCONTROL_PARSET', 'COMPANY_RANDOM_RCONTROL_PARSET', '2017-01-24 17:00:37'),
	(319, 6, 'COMPANY_RANDOM_RCONTROL_PA_HIS', 'COMPANY_RANDOM_RCONTROL_PA_HIS', '2017-01-24 17:00:37'),
	(320, 6, 'PRE_BILL_HEAD', 'PRE_BILL_HEAD', '2017-01-24 17:00:37'),
	(321, 6, 'RECEIPT_RECORD', 'RECEIPT_RECORD', '2017-01-24 17:00:37'),
	(322, 6, 'GOODS_RISK_PARAM', 'GOODS_RISK_PARAM', '2017-01-24 17:00:37'),
	(323, 6, 'COLLECT_BILL_GENERATE_RECORD', 'COLLECT_BILL_GENERATE_RECORD', '2017-01-24 17:00:37'),
	(324, 6, 'CUR_BILL_HEAD', 'CUR_BILL_HEAD', '2017-01-24 17:00:37'),
	(325, 6, 'ORDER_LIST', 'ORDER_LIST', '2017-01-24 17:00:38'),
	(326, 6, 'CUR_DEC_HEAD', 'CUR_DEC_HEAD', '2017-01-24 17:00:38'),
	(327, 6, 'CEB_CUR_PGR_STORE_GDS', 'CEB_CUR_PGR_STORE_GDS', '2017-01-24 17:00:38'),
	(328, 6, 'CUR_GOODS_HEAD', 'CUR_GOODS_HEAD', '2017-01-24 17:00:38'),
	(329, 6, 'ADDRESS_LIMIT_PARAM', 'ADDRESS_LIMIT_PARAM', '2017-01-24 17:00:38'),
	(330, 6, 'CUR_COMPANY_INFO', 'CUR_COMPANY_INFO', '2017-01-24 17:00:38'),
	(331, 6, 'LICENSE_HEAD', 'LICENSE_HEAD', '2017-01-24 17:00:38'),
	(332, 6, 'CEB_ORD_HEAD', 'CEB_ORD_HEAD', '2017-01-24 17:00:38'),
	(333, 6, 'CUR_QUA_HEAD', 'CUR_QUA_HEAD', '2017-01-24 17:00:38'),
	(334, 6, 'PRICE_RISK_PARAM_HIS', 'PRICE_RISK_PARAM_HIS', '2017-01-24 17:00:38'),
	(335, 6, 'DIRECT_PASS_CONFIG_HIS', 'DIRECT_PASS_CONFIG_HIS', '2017-01-24 17:00:38'),
	(336, 6, 'POSITIVE_LIST', 'POSITIVE_LIST', '2017-01-24 17:00:38'),
	(337, 6, 'TAX_PARAM', 'TAX_PARAM', '2017-01-24 17:00:38'),
	(338, 6, 'HIS_LMS_GOODS', 'HIS_LMS_GOODS', '2017-01-24 17:00:38'),
	(339, 6, 'CLEARED_DAY_HIS', 'CLEARED_DAY_HIS', '2017-01-24 17:00:38'),
	(340, 6, 'PHONENUMBER_IMPORT_LIMITATION', 'PHONENUMBER_IMPORT_LIMITATION', '2017-01-24 17:00:38'),
	(341, 6, 'CEB_CUR_INVT_LIST', 'CEB_CUR_INVT_LIST', '2017-01-24 17:00:38'),
	(342, 6, 'CUR_LMS_GOODS', 'CUR_LMS_GOODS', '2017-01-24 17:00:38'),
	(343, 6, 'PERCLARE_RISK_COMPARE', 'PERCLARE_RISK_COMPARE', '2017-01-24 17:00:38'),
	(344, 6, 'COLLECT_BILL_HEAD', 'COLLECT_BILL_HEAD', '2017-01-24 17:00:38'),
	(345, 6, 'PERSONAL_DECLARE_HEAD', 'PERSONAL_DECLARE_HEAD', '2017-01-24 17:00:38'),
	(346, 6, 'DOC_RATE_PARAM_HIS', 'DOC_RATE_PARAM_HIS', '2017-01-24 17:00:38'),
	(347, 6, 'CEB_PRE_INVT_HEAD', 'CEB_PRE_INVT_HEAD', '2017-01-24 17:00:38'),
	(348, 6, 'ADDRESS_LIMIT_PARAM_HIS', 'ADDRESS_LIMIT_PARAM_HIS', '2017-01-24 17:00:38'),
	(349, 6, 'CUR_GOODS_DISPLAY_HEAD', 'CUR_GOODS_DISPLAY_HEAD', '2017-01-24 17:00:38'),
	(350, 6, 'CEB2_INVT_REFUND_LIST', 'CEB2_INVT_REFUND_LIST', '2017-01-24 17:00:38'),
	(351, 6, 'DOC_RATE_PARAM', 'DOC_RATE_PARAM', '2017-01-24 17:00:38'),
	(352, 6, 'CUR_DIST_HEAD', 'CUR_DIST_HEAD', '2017-01-24 17:00:38'),
	(353, 6, 'CEB2_PAY_BOOK_HEAD', 'CEB2_PAY_BOOK_HEAD', '2017-01-24 17:00:38'),
	(354, 6, 'RESERVE_CONTROL_PARAMTER', 'RESERVE_CONTROL_PARAMTER', '2017-01-24 17:00:39'),
	(355, 6, 'CEB_PRE_COMPANY_TYPE', 'CEB_PRE_COMPANY_TYPE', '2017-01-24 17:00:39'),
	(356, 6, 'USER_SUPERVISION', 'USER_SUPERVISION', '2017-01-24 17:00:39'),
	(357, 6, 'CUR_BILL_CONTA_LIST', 'CUR_BILL_CONTA_LIST', '2017-01-24 17:00:39'),
	(358, 6, 'LIMITATION_GOODS_CATALOG_HIS2', 'LIMITATION_GOODS_CATALOG_HIS2', '2017-01-24 17:00:39'),
	(359, 6, 'TAX_BILL_PUBLISH', 'TAX_BILL_PUBLISH', '2017-01-24 17:00:39'),
	(360, 6, 'PERSONAL_COMP_WHITE_LIST_PARAM', 'PERSONAL_COMP_WHITE_LIST_PARAM', '2017-01-24 17:00:39'),
	(361, 6, 'CHECK_MAIL_INFO_GOODS_LIST', 'CHECK_MAIL_INFO_GOODS_LIST', '2017-01-24 17:00:39'),
	(362, 6, 'CLASSIFY_CLEARANCE_CONFIG_HIS', 'CLASSIFY_CLEARANCE_CONFIG_HIS', '2017-01-24 17:00:39'),
	(363, 6, 'TAX_BILL_LIST', 'TAX_BILL_LIST', '2017-01-24 17:00:39'),
	(364, 6, 'SYIS_BAYONET_RELEASE_LOG', 'SYIS_BAYONET_RELEASE_LOG', '2017-01-24 17:00:39'),
	(365, 6, 'DXP_SEND_END', 'DXP_SEND_END', '2017-01-24 17:00:39'),
	(366, 6, 'CUR_DEC_LICENSEDOCU', 'CUR_DEC_LICENSEDOCU', '2017-01-24 17:00:39'),
	(367, 6, 'RESERVE_CONTROL_PARAM_HIS', 'RESERVE_CONTROL_PARAM_HIS', '2017-01-24 17:00:39'),
	(368, 6, 'TRADE_SNAPSHOT_ATTACHMENT', 'TRADE_SNAPSHOT_ATTACHMENT', '2017-01-24 17:00:39'),
	(369, 6, 'DXP_RECE', 'DXP_RECE', '2017-01-24 17:00:39'),
	(370, 6, 'USER_AUTHORITY', 'USER_AUTHORITY', '2017-01-24 17:00:39'),
	(371, 6, 'CEB_PGR_STORE_HEAD', 'CEB_PGR_STORE_HEAD', '2017-01-24 17:00:39'),
	(372, 6, 'APPROVE_LEVEL_CONFIG_HIS', 'APPROVE_LEVEL_CONFIG_HIS', '2017-01-24 17:00:39'),
	(373, 6, 'CEB_CUR_INVT_HEAD', 'CEB_CUR_INVT_HEAD', '2017-01-24 17:00:39'),
	(374, 6, 'RETURN_INFO', 'RETURN_INFO', '2017-01-24 17:00:39'),
	(375, 6, 'GOODS_RANDOM_PARAMTER_HIS', 'GOODS_RANDOM_PARAMTER_HIS', '2017-01-24 17:00:39'),
	(376, 6, 'MANAGEMENT_POSITIONS', 'MANAGEMENT_POSITIONS', '2017-01-24 17:00:39'),
	(377, 6, 'CEB2_PAY_HEAD', 'CEB2_PAY_HEAD', '2017-01-24 17:00:39'),
	(378, 6, 'TOTAL_LOGISTICS_PARAM_RECORD', 'TOTAL_LOGISTICS_PARAM_RECORD', '2017-01-24 17:00:40'),
	(379, 6, 'WT_FANGXING', 'WT_FANGXING', '2017-01-24 17:00:40'),
	(380, 6, 'GOODS_VALID_DIGIT', 'GOODS_VALID_DIGIT', '2017-01-24 17:00:40'),
	(381, 6, 'USER_REL_USER_ROLE', 'USER_REL_USER_ROLE', '2017-01-24 17:00:40'),
	(382, 6, 'PERSONAL_IMPORT_RECORD', 'PERSONAL_IMPORT_RECORD', '2017-01-24 17:00:40'),
	(383, 6, 'TAX_LIST', 'TAX_LIST', '2017-01-24 17:00:40'),
	(384, 6, 'TOTAL_LOGISTICS_PARAM', 'TOTAL_LOGISTICS_PARAM', '2017-01-24 17:00:40'),
	(385, 6, 'COMP_WHITE_LIST_PARAM_HIS', 'COMP_WHITE_LIST_PARAM_HIS', '2017-01-24 17:00:40'),
	(386, 6, 'CHECK_MAIL_GOOD_HEAD', 'CHECK_MAIL_GOOD_HEAD', '2017-01-24 17:00:40'),
	(387, 6, 'CHECK_DEP_INFO', 'CHECK_DEP_INFO', '2017-01-24 17:00:40'),
	(388, 6, 'CUR_LMS_HEAD', 'CUR_LMS_HEAD', '2017-01-24 17:00:40'),
	(389, 6, 'COLLECT_RELATION_LIST', 'COLLECT_RELATION_LIST', '2017-01-24 17:00:40'),
	(390, 6, 'CEB2_INVT_HEAD_END', 'CEB2_INVT_HEAD_END', '2017-01-24 17:00:40'),
	(391, 6, 'ID_INFO_SAMPLE_CHECK_PARAM_HIS', 'ID_INFO_SAMPLE_CHECK_PARAM_HIS', '2017-01-24 17:00:40'),
	(392, 6, 'PERSONAL_COMP_WHITE_LIST_HIS', 'PERSONAL_COMP_WHITE_LIST_HIS', '2017-01-24 17:00:40'),
	(393, 6, 'CUR_PERSONAL_DECLARE_LIST', 'CUR_PERSONAL_DECLARE_LIST', '2017-01-24 17:00:40'),
	(394, 6, 'USER_REL_ROLE_AUTH', 'USER_REL_ROLE_AUTH', '2017-01-24 17:00:40'),
	(395, 6, 'DXP_RECE_END', 'DXP_RECE_END', '2017-01-24 17:00:40'),
	(396, 6, 'PERSONAL_LIMIT_PARAM', 'PERSONAL_LIMIT_PARAM', '2017-01-24 17:00:40'),
	(397, 6, 'PAYMENT_INFO', 'PAYMENT_INFO', '2017-01-24 17:00:40'),
	(398, 6, 'CUR_DIST_BILL_LIST', 'CUR_DIST_BILL_LIST', '2017-01-24 17:00:40'),
	(399, 6, 'EXPORT_DEC_CLEARED_HEAD', 'EXPORT_DEC_CLEARED_HEAD', '2017-01-24 17:00:40'),
	(400, 6, 'APPROVE_LEVEL_CONFIG', 'APPROVE_LEVEL_CONFIG', '2017-01-24 17:00:40'),
	(401, 6, 'GUARANTY_HEAD', 'GUARANTY_HEAD', '2017-01-24 17:00:40'),
	(402, 6, 'CEB_CUR_COMPANY_TYPE', 'CEB_CUR_COMPANY_TYPE', '2017-01-24 17:00:40'),
	(403, 6, 'PRE_DIST_HEAD', 'PRE_DIST_HEAD', '2017-01-24 17:00:40'),
	(404, 6, 'CEB2_ORD_LIST', 'CEB2_ORD_LIST', '2017-01-24 17:00:40'),
	(405, 6, 'GOODS_RISK_PARAM_HIS', 'GOODS_RISK_PARAM_HIS', '2017-01-24 17:00:40'),
	(406, 6, 'PERSONAL_INFO', 'PERSONAL_INFO', '2017-01-24 17:00:41'),
	(407, 6, 'DXP_SEND', 'DXP_SEND', '2017-01-24 17:00:41'),
	(408, 6, 'TAX_PARAM_HIS', 'TAX_PARAM_HIS', '2017-01-24 17:00:41'),
	(409, 6, 'CEB2_DELIVERY_LIST', 'CEB2_DELIVERY_LIST', '2017-01-24 17:00:41'),
	(410, 6, 'PRE_GOODS_DISPLAY_HEAD', 'PRE_GOODS_DISPLAY_HEAD', '2017-01-24 17:00:41'),
	(411, 6, 'CUR_VE_HEAD', 'CUR_VE_HEAD', '2017-01-24 17:00:41'),
	(412, 6, 'CUR_COMPANY_ONLINE_STORE', 'CUR_COMPANY_ONLINE_STORE', '2017-01-24 17:00:41'),
	(413, 6, 'DUTIABLE_PRICE_DATA', 'DUTIABLE_PRICE_DATA', '2017-01-24 17:00:41'),
	(414, 6, 'GOODS_VALID_DIGIT_HIS', 'GOODS_VALID_DIGIT_HIS', '2017-01-24 17:00:41'),
	(415, 6, 'PERSONAL_CHECK_PARAM_LOG', 'PERSONAL_CHECK_PARAM_LOG', '2017-01-24 17:00:41'),
	(416, 6, 'INTERNATIONAL_LOGISTICS_INFO', 'INTERNATIONAL_LOGISTICS_INFO', '2017-01-24 17:00:41'),
	(417, 6, 'DEC_DRAFT_HEAD', 'DEC_DRAFT_HEAD', '2017-01-24 17:00:41'),
	(418, 6, 'PRE_COMPANY_CERTIFICATE', 'PRE_COMPANY_CERTIFICATE', '2017-01-24 17:00:41'),
	(419, 6, 'CUR_DEC_CONTA', 'CUR_DEC_CONTA', '2017-01-24 17:00:41'),
	(420, 6, 'STORE_LMS_HEAD', 'STORE_LMS_HEAD', '2017-01-24 17:00:41'),
	(421, 6, 'GOODS_HEAD_HIS', 'GOODS_HEAD_HIS', '2017-01-24 17:00:41'),
	(422, 6, 'CEB_PRE_INVT_LIST', 'CEB_PRE_INVT_LIST', '2017-01-24 17:00:41'),
	(423, 6, 'PRE_DIST_BILL_LIST', 'PRE_DIST_BILL_LIST', '2017-01-24 17:00:41'),
	(424, 6, 'TOTAL_LOGISTICS_PARAM_HIS', 'TOTAL_LOGISTICS_PARAM_HIS', '2017-01-24 17:00:41'),
	(425, 6, 'EXPORT_DEC_CLEARED_LIST', 'EXPORT_DEC_CLEARED_LIST', '2017-01-24 17:00:41'),
	(426, 6, 'CEB2_TAX_LIST', 'CEB2_TAX_LIST', '2017-01-24 17:00:41'),
	(427, 6, 'PRE_GOODS_HEAD', 'PRE_GOODS_HEAD', '2017-01-24 17:00:41'),
	(428, 6, 'USER_USER', 'USER_USER', '2017-01-24 17:00:41'),
	(429, 6, 'PERSONAL_DECLARE_LIST', 'PERSONAL_DECLARE_LIST', '2017-01-24 17:00:41'),
	(430, 6, 'CEB2_ORD_HEAD', 'CEB2_ORD_HEAD', '2017-01-24 17:00:42'),
	(431, 6, 'PERSONAL_DECLARE_STATUS_HIS', 'PERSONAL_DECLARE_STATUS_HIS', '2017-01-24 17:00:42'),
	(432, 6, 'DISTRIBUTE_BILL_RELATION', 'DISTRIBUTE_BILL_RELATION', '2017-01-24 17:00:42'),
	(433, 6, 'SUN_SHIPPED_PARAM', 'SUN_SHIPPED_PARAM', '2017-01-24 17:00:42'),
	(434, 6, 'AGENT_DECL_AUTHORIZE', 'AGENT_DECL_AUTHORIZE', '2017-01-24 17:00:42'),
	(435, 6, 'QUARTZ_TASKS', 'QUARTZ_TASKS', '2017-01-24 17:00:42'),
	(436, 6, 'KEY_COMP_PARAM', 'KEY_COMP_PARAM', '2017-01-24 17:00:42'),
	(437, 6, 'SIMP_GOODS_CHECK_PARAM', 'SIMP_GOODS_CHECK_PARAM', '2017-01-24 17:00:42'),
	(438, 6, 'PRE_COMPANY_ONLINE_STORE', 'PRE_COMPANY_ONLINE_STORE', '2017-01-24 17:00:42'),
	(439, 6, 'ADDRESS_IMPORT_LIMITATION', 'ADDRESS_IMPORT_LIMITATION', '2017-01-24 17:00:42'),
	(440, 6, 'CUR_GOODS_DISPLAY_LIST', 'CUR_GOODS_DISPLAY_LIST', '2017-01-24 17:00:42'),
	(441, 6, 'LIMITATION_GOODS_CATALOG', 'LIMITATION_GOODS_CATALOG', '2017-01-24 17:00:42'),
	(442, 6, 'PRE_GOODS_DISPLAY_LIST', 'PRE_GOODS_DISPLAY_LIST', '2017-01-24 17:00:42'),
	(443, 6, 'CEB2_PAY_BOOK_LIST', 'CEB2_PAY_BOOK_LIST', '2017-01-24 17:00:42'),
	(444, 6, 'GOODS_VALID_DIGIT_EXPORT_HIS', 'GOODS_VALID_DIGIT_EXPORT_HIS', '2017-01-24 17:00:42'),
	(445, 6, 'PRE_VE_HEAD', 'PRE_VE_HEAD', '2017-01-24 17:00:42'),
	(446, 6, 'CEB_ORD_GDS', 'CEB_ORD_GDS', '2017-01-24 17:00:42'),
	(447, 6, 'TAX_HEAD', 'TAX_HEAD', '2017-01-24 17:00:42'),
	(448, 6, 'RETURN_GOODS_HEAD', 'RETURN_GOODS_HEAD', '2017-01-24 17:00:42'),
	(449, 6, 'CEB_PRE_PGR_STORE_GDS', 'CEB_PRE_PGR_STORE_GDS', '2017-01-24 17:00:42'),
	(450, 6, 'PRE_COMPANY_INFO', 'PRE_COMPANY_INFO', '2017-01-24 17:00:42'),
	(451, 6, 'LIMITATION_GOODS_CATALOG_HIS', 'LIMITATION_GOODS_CATALOG_HIS', '2017-01-24 17:00:42'),
	(452, 6, 'PRE_BILL_GOODS_LIST', 'PRE_BILL_GOODS_LIST', '2017-01-24 17:00:42'),
	(453, 6, 'CUR_COMPANY_CERTIFICATE', 'CUR_COMPANY_CERTIFICATE', '2017-01-24 17:00:42'),
	(454, 6, 'CUR_DEC_IMG', 'CUR_DEC_IMG', '2017-01-24 17:00:42'),
	(455, 6, 'CHECK_POSITION_INFO', 'CHECK_POSITION_INFO', '2017-01-24 17:00:42'),
	(456, 6, 'DEC_DRAFT_SEND', 'DEC_DRAFT_SEND', '2017-01-24 17:00:42'),
	(457, 6, 'PERSONAL_IMPORT_LIMITATION', 'PERSONAL_IMPORT_LIMITATION', '2017-01-24 17:00:43'),
	(458, 6, 'PERSONAL_LIMIT_PARAM_HIS', 'PERSONAL_LIMIT_PARAM_HIS', '2017-01-24 17:00:43'),
	(459, 6, 'IMPORT_DISREGULATORY_DOCUMENTS', 'IMPORT_DISREGULATORY_DOCUMENTS', '2017-01-24 17:00:43'),
	(460, 6, 'CLEARED_DAY', 'CLEARED_DAY', '2017-01-24 17:00:43'),
	(461, 6, 'ORDER_HEAD', 'ORDER_HEAD', '2017-01-24 17:00:43'),
	(462, 6, 'CEB_LGS_HEAD', 'CEB_LGS_HEAD', '2017-01-24 17:00:43'),
	(463, 6, 'ORDER_PAYMENT_LOGISTICS', 'ORDER_PAYMENT_LOGISTICS', '2017-01-24 17:00:43'),
	(464, 6, 'PHONENUMBER_LIMIT_PARAM', 'PHONENUMBER_LIMIT_PARAM', '2017-01-24 17:00:43'),
	(465, 6, 'PRE_BILL_CONTA_LIST', 'PRE_BILL_CONTA_LIST', '2017-01-24 17:00:43'),
	(466, 6, 'CUR_GOODS_LIST', 'CUR_GOODS_LIST', '2017-01-24 17:00:43'),
	(467, 6, 'CEB_PAY_HEAD', 'CEB_PAY_HEAD', '2017-01-24 17:00:43'),
	(468, 6, 'CLASSIFY_CLEARANCE_CONFIG', 'CLASSIFY_CLEARANCE_CONFIG', '2017-01-24 17:00:43'),
	(469, 6, 'CEB_CUR_COMPANY_INFO', 'CEB_CUR_COMPANY_INFO', '2017-01-24 17:00:43'),
	(470, 6, 'DXP_SEND_MSG', 'DXP_SEND_MSG', '2017-01-24 17:00:43'),
	(471, 7, 'flow_model', 'flow_model', '2017-01-28 23:19:26'),
	(472, 7, 'model', 'model', '2017-01-28 23:19:26'),
	(473, 7, 'test_sql', 'test_sql', '2017-01-28 23:19:26'),
	(474, 7, 'hms_user', 'hms_user', '2017-01-28 23:19:26'),
	(475, 7, 'model_node', 'model_node', '2017-01-28 23:19:26'),
	(476, 8, 'GJSB_TIME', 'GJSB_TIME', '2017-02-08 17:03:54'),
	(477, 8, 'QYSB_TIME', 'QYSB_TIME', '2017-02-08 17:03:54'),
	(478, 8, 'GJFX_TIME', 'GJFX_TIME', '2017-02-08 17:03:54'),
	(479, 8, 'ALL_NODE_CALC_TIME', 'ALL_NODE_CALC_TIME', '2017-02-08 17:03:54'),
	(480, 8, 'HGSB_TIME', 'HGSB_TIME', '2017-02-08 17:03:54'),
	(481, 8, 'FJFX_TIME', 'FJFX_TIME', '2017-02-08 17:03:54'),
	(482, 8, 'HGFX_TIME', 'HGFX_TIME', '2017-02-08 17:03:54'),
	(483, 8, 'XDZF_TIME', 'XDZF_TIME', '2017-02-08 17:03:54'),
	(484, 8, 'ALL_NODE_TIME', 'ALL_NODE_TIME', '2017-02-08 17:03:54'),
	(485, 8, 'QDHX_TIME', 'QDHX_TIME', '2017-02-08 17:03:54'),
	(486, 8, 'GJFX_TIME_WT', 'GJFX_TIME_WT', '2017-02-09 14:23:23'),
	(487, 8, 'GJFX_TIME_MH', 'GJFX_TIME_MH', '2017-02-09 14:23:23'),
	(488, 8, 'XDZF_TIME_MH', 'XDZF_TIME_MH', '2017-02-09 14:23:23'),
	(489, 8, 'ALL_NODE_TIME_WT', 'ALL_NODE_TIME_WT', '2017-02-09 14:23:23'),
	(490, 8, 'XDZF_TIME_WT', 'XDZF_TIME_WT', '2017-02-09 14:23:23'),
	(491, 8, 'TUOTOU_TIME_WT', 'TUOTOU_TIME_WT', '2017-02-09 14:23:23'),
	(492, 8, 'INVT_CHECKMAIL_WT', 'INVT_CHECKMAIL_WT', '2017-02-09 14:23:23'),
	(493, 8, 'HFCQ_TIME_WT', 'HFCQ_TIME_WT', '2017-02-09 14:23:23'),
	(494, 8, 'HGFX_TIME_MH', 'HGFX_TIME_MH', '2017-02-09 14:23:23'),
	(495, 8, 'ALL_NODE_TIME_MH', 'ALL_NODE_TIME_MH', '2017-02-09 14:23:23'),
	(496, 8, 'ALL_NODE_CALC_TIME_WT', 'ALL_NODE_CALC_TIME_WT', '2017-02-09 14:23:23'),
	(497, 8, 'QDHX_TIME_MH', 'QDHX_TIME_MH', '2017-02-09 14:23:23'),
	(498, 8, 'GJSB_TIME_WT', 'GJSB_TIME_WT', '2017-02-09 14:23:23'),
	(499, 8, 'ALL_NODE_CALC_TIME_MH', 'ALL_NODE_CALC_TIME_MH', '2017-02-09 14:23:23'),
	(500, 8, 'GJSB_TIME_MH', 'GJSB_TIME_MH', '2017-02-09 14:23:23'),
	(501, 8, 'CLOUNM_CHANGES_INFO_AUDIT', 'CLOUNM_CHANGES_INFO_AUDIT', '2017-02-09 14:23:23'),
	(502, 8, 'ORDER_INFO', 'ORDER_INFO', '2017-02-09 14:23:23'),
	(503, 8, 'CHANGES_INFO_AUDIT', 'CHANGES_INFO_AUDIT', '2017-02-09 14:23:23'),
	(504, 8, 'HFSB_TIME_WT', 'HFSB_TIME_WT', '2017-02-09 14:23:23'),
	(505, 8, 'HGFX_TIME_WT', 'HGFX_TIME_WT', '2017-02-09 14:23:23'),
	(506, 8, 'QIYE_INFO', 'QIYE_INFO', '2017-02-09 14:23:23'),
	(507, 8, 'FJFX_TIME_MH', 'FJFX_TIME_MH', '2017-02-09 14:23:23'),
	(508, 8, 'FJFX_TIME_WT', 'FJFX_TIME_WT', '2017-02-09 14:23:23'),
	(509, 8, 'QYSB_TIME_MH', 'QYSB_TIME_MH', '2017-02-09 14:23:23'),
	(510, 8, 'AREA_INFO', 'AREA_INFO', '2017-02-09 14:23:23'),
	(511, 8, 'YDRC_TIME_WT', 'YDRC_TIME_WT', '2017-02-09 14:23:23'),
	(512, 8, 'HGSB_TIME_WT', 'HGSB_TIME_WT', '2017-02-09 14:23:23'),
	(513, 8, 'HGSB_TIME_MH', 'HGSB_TIME_MH', '2017-02-09 14:23:23'),
	(539, 5, 'CEB_PRE_COMPANY_INFO', 'CEB_PRE_COMPANY_INFO', '2017-02-14 22:21:59'),
	(540, 5, 'TRADE', 'TRADE', '2017-02-14 22:21:59'),
	(541, 5, 'CIQ_PACK', 'CIQ_PACK', '2017-02-14 22:21:59'),
	(542, 5, 'CUSTOMS', 'CUSTOMS', '2017-02-14 22:21:59'),
	(543, 5, 'IMP_INVT_HEAD', 'IMP_INVT_HEAD', '2017-02-14 22:21:59'),
	(544, 5, 'COMPANY_REGISTER', 'COMPANY_REGISTER', '2017-02-14 22:21:59'),
	(545, 5, 'USER_ORG', 'USER_ORG', '2017-02-14 22:21:59'),
	(546, 5, 'CEB_PRE_COMPANY_TYPE', 'CEB_PRE_COMPANY_TYPE', '2017-02-14 22:21:59'),
	(547, 5, 'PER_VALI_CUSTOM_MESSAGE', 'PER_VALI_CUSTOM_MESSAGE', '2017-02-14 22:21:59'),
	(548, 5, 'EPT_F_COMPANY_T', 'EPT_F_COMPANY_T', '2017-02-14 22:21:59'),
	(549, 5, 'EPT_F_COUNTRY', 'EPT_F_COUNTRY', '2017-02-14 22:21:59'),
	(550, 5, 'CEB_PRE_INVT_LIST', 'CEB_PRE_INVT_LIST', '2017-02-14 22:21:59'),
	(551, 5, 'EPT_B_COUNTRY_T', 'EPT_B_COUNTRY_T', '2017-02-14 22:21:59'),
	(552, 5, 'COUNTRY', 'COUNTRY', '2017-02-14 22:21:59'),
	(553, 5, 'INVT_REFUND_LIST', 'INVT_REFUND_LIST', '2017-02-14 22:21:59'),
	(554, 5, 'EPT_F_EPORT_T', 'EPT_F_EPORT_T', '2017-02-14 22:21:59'),
	(555, 5, 'USER_AUTHORITY', 'USER_AUTHORITY', '2017-02-14 22:21:59'),
	(556, 5, 'UNIT', 'UNIT', '2017-02-14 22:21:59'),
	(557, 5, 'PORT', 'PORT', '2017-02-14 22:21:59'),
	(558, 5, 'EPT_B_CUSTOM_T', 'EPT_B_CUSTOM_T', '2017-02-14 22:21:59'),
	(559, 5, 'USER_USER', 'USER_USER', '2017-02-14 22:21:59'),
	(560, 5, 'APPLICATION_HEAD', 'APPLICATION_HEAD', '2017-02-14 22:21:59'),
	(561, 5, 'COMPANY_ATTACH', 'COMPANY_ATTACH', '2017-02-14 22:21:59'),
	(562, 5, 'CURR', 'CURR', '2017-02-14 22:21:59'),
	(563, 5, 'CEB_PRE_PGR_STORE_HEAD', 'CEB_PRE_PGR_STORE_HEAD', '2017-02-14 22:21:59'),
	(564, 5, 'EPT_F_SERVICE_ECP_T', 'EPT_F_SERVICE_ECP_T', '2017-02-14 22:21:59'),
	(565, 5, 'USER_REL_USER_ROLE', 'USER_REL_USER_ROLE', '2017-02-14 22:21:59'),
	(566, 5, 'PERSON_INFO_VERIFY_LOG', 'PERSON_INFO_VERIFY_LOG', '2017-02-14 22:21:59'),
	(567, 5, 'EPT_B_COMPLEX_HS_T', 'EPT_B_COMPLEX_HS_T', '2017-02-14 22:21:59'),
	(568, 5, 'SYS_CODE', 'SYS_CODE', '2017-02-14 22:21:59'),
	(569, 5, 'IMP_GOODS', 'IMP_GOODS', '2017-02-14 22:21:59'),
	(570, 5, 'DELIVERY_LIST', 'DELIVERY_LIST', '2017-02-14 22:21:59'),
	(571, 5, 'GOODS_ATTACH', 'GOODS_ATTACH', '2017-02-14 22:21:59'),
	(572, 5, 'CEB_ORD_HEAD', 'CEB_ORD_HEAD', '2017-02-14 22:21:59'),
	(573, 5, 'IMP_LGS_HEAD', 'IMP_LGS_HEAD', '2017-02-14 22:21:59'),
	(574, 5, 'TRANSF', 'TRANSF', '2017-02-14 22:21:59'),
	(575, 5, 'CEB_ORD_GDS', 'CEB_ORD_GDS', '2017-02-14 22:21:59'),
	(576, 5, 'CEB_PRE_PGR_STORE_GDS', 'CEB_PRE_PGR_STORE_GDS', '2017-02-14 22:21:59'),
	(577, 5, 'EPT_F_TRANSPORT_T', 'EPT_F_TRANSPORT_T', '2017-02-14 22:21:59'),
	(578, 5, 'EPT_B_TRANSF_T', 'EPT_B_TRANSF_T', '2017-02-14 22:21:59'),
	(579, 5, 'USER_REL_ROLE_AUTH', 'USER_REL_ROLE_AUTH', '2017-02-14 22:21:59'),
	(580, 5, 'EPT_F_GOODS_ECP_MAP', 'EPT_F_GOODS_ECP_MAP', '2017-02-14 22:21:59'),
	(581, 5, 'EPT_C_COMMO_LIST_IN_T', 'EPT_C_COMMO_LIST_IN_T', '2017-02-14 22:21:59'),
	(582, 5, 'IMP_INVT_LIST', 'IMP_INVT_LIST', '2017-02-14 22:21:59'),
	(583, 5, 'INVT_REFUND_HEAD', 'INVT_REFUND_HEAD', '2017-02-14 22:21:59'),
	(584, 5, 'LAST_SYNC_PAYMENT_TIME', 'LAST_SYNC_PAYMENT_TIME', '2017-02-14 22:21:59'),
	(585, 5, 'EPT_F_COMMODITY_TOP_T', 'EPT_F_COMMODITY_TOP_T', '2017-02-14 22:21:59'),
	(586, 5, 'IMP_ORD_LIST', 'IMP_ORD_LIST', '2017-02-14 22:21:59'),
	(587, 5, 'WRAP', 'WRAP', '2017-02-14 22:21:59'),
	(588, 5, 'INVT_CANCEL', 'INVT_CANCEL', '2017-02-14 22:21:59'),
	(589, 5, 'COMPLEX', 'COMPLEX', '2017-02-14 22:21:59'),
	(590, 5, 'DELIVERY_HEAD', 'DELIVERY_HEAD', '2017-02-14 22:21:59'),
	(591, 5, 'CIQ_CUSTOMS', 'CIQ_CUSTOMS', '2017-02-14 22:21:59'),
	(592, 5, 'APPLICATION_LIST', 'APPLICATION_LIST', '2017-02-14 22:21:59'),
	(593, 5, 'EPT_F_SERVICE_LOGIS_T', 'EPT_F_SERVICE_LOGIS_T', '2017-02-14 22:21:59'),
	(594, 5, 'PERSONAL_INFO', 'PERSONAL_INFO', '2017-02-14 22:21:59'),
	(595, 5, 'CEB_PRE_INVT_HEAD', 'CEB_PRE_INVT_HEAD', '2017-02-14 22:21:59'),
	(596, 5, 'CEB_LGS_HEAD', 'CEB_LGS_HEAD', '2017-02-14 22:21:59'),
	(597, 5, 'EPT_F_COMMODITY_T', 'EPT_F_COMMODITY_T', '2017-02-14 22:21:59'),
	(598, 5, 'OPERATION', 'OPERATION', '2017-02-14 22:21:59'),
	(599, 5, 'EPT_C_COMMODITY_IN_T', 'EPT_C_COMMODITY_IN_T', '2017-02-14 22:21:59'),
	(600, 5, 'IMP_COMPANY', 'IMP_COMPANY', '2017-02-14 22:21:59'),
	(601, 5, 'USER_ROLE', 'USER_ROLE', '2017-02-14 22:21:59'),
	(602, 5, 'EPT_F_COMMODITY_REVENUE_T', 'EPT_F_COMMODITY_REVENUE_T', '2017-02-14 22:21:59'),
	(603, 5, 'EPT_F_COMMODITY_CRB_T', 'EPT_F_COMMODITY_CRB_T', '2017-02-14 22:21:59'),
	(604, 5, 'EXCHRATE', 'EXCHRATE', '2017-02-14 22:21:59'),
	(613, 9, 'ala_testq2', 'ala_testq2', '2017-02-16 21:03:56'),
	(614, 9, 'ala_testq1', 'ala_testq1', '2017-02-16 21:03:56'),
	(615, 9, 'all_node_calc_time_wt', 'all_node_calc_time_wt', '2017-02-16 21:03:56'),
	(616, 9, 'product_info', 'product_info', '2017-02-16 21:03:56'),
	(617, 9, 'area_info', 'area_info', '2017-02-16 21:03:56'),
	(618, 9, 'qiye_info', 'qiye_info', '2017-02-16 21:03:56'),
	(619, 9, 'all_node_calc_time_mh', 'all_node_calc_time_mh', '2017-02-16 21:03:56'),
	(620, 9, 'order_info', 'order_info', '2017-02-16 21:03:56'),
	(621, 9, 'ds_permission', 'ds_permission', '2017-02-16 21:15:39'),
	(622, 9, 'ds_script', 'ds_script', '2017-02-16 21:15:39'),
	(623, 9, 'ds_source_host', 'ds_source_host', '2017-02-16 21:15:39'),
	(624, 9, 'ds_customs', 'ds_customs', '2017-02-16 21:15:39'),
	(625, 9, 'ds_rate', 'ds_rate', '2017-02-16 21:15:39'),
	(626, 9, 'ds_link_name', 'ds_link_name', '2017-02-16 21:15:39'),
	(627, 9, 'ds_result_1r18608', 'ds_result_1r18608', '2017-02-16 21:15:39'),
	(628, 9, 'ds_menu', 'ds_menu', '2017-02-16 21:15:39'),
	(629, 9, 'ds_source_table', 'ds_source_table', '2017-02-16 21:15:39'),
	(630, 9, 'ds_service_type', 'ds_service_type', '2017-02-16 21:15:39'),
	(631, 9, 'ds_result_e_1r18608', 'ds_result_e_1r18608', '2017-02-16 21:15:39'),
	(632, 9, 'ds_exrate_info', 'ds_exrate_info', '2017-02-16 21:15:39'),
	(633, 9, 'ds_user_rule', 'ds_user_rule', '2017-02-16 21:15:40'),
	(634, 9, 'ds_task_source', 'ds_task_source', '2017-02-16 21:15:40'),
	(635, 9, 'ds_script_execute', 'ds_script_execute', '2017-02-16 21:15:40'),
	(636, 9, 'ds_result_10r110e25', 'ds_result_10r110e25', '2017-02-16 21:15:40'),
	(637, 9, 'ds_user', 'ds_user', '2017-02-16 21:15:40'),
	(638, 9, 'ds_task', 'ds_task', '2017-02-16 21:15:40'),
	(639, 9, 'ds_result', 'ds_result', '2017-02-16 21:15:40'),
	(640, 9, 'ds_rule', 'ds_rule', '2017-02-16 21:15:40'),
	(641, 9, 'ds_result_e_10r110e25', 'ds_result_e_10r110e25', '2017-02-16 21:15:40'),
	(642, 9, 'ds_result_e_2r1934d', 'ds_result_e_2r1934d', '2017-02-16 21:15:40'),
	(643, 9, 'ds_goods', 'ds_goods', '2017-02-16 21:15:40'),
	(644, 9, 'ds_result_2r1934d', 'ds_result_2r1934d', '2017-02-16 21:15:40'),
	(645, 9, 'ds_threshold', 'ds_threshold', '2017-02-16 21:15:40'),
	(646, 9, 'ds_exrate', 'ds_exrate', '2017-02-16 21:15:40'),
	(647, 9, 'ds_test', 'ds_test', '2017-02-18 20:26:57'),
	(648, 9, 'qiye_name_count', 'qiye_name_count', '2017-02-18 20:26:57'),
	(649, 9, 'ds_result_13r110cba', 'ds_result_13r110cba', '2017-02-22 09:01:33'),
	(650, 9, 'ds_result_e_13r110cba', 'ds_result_e_13r110cba', '2017-02-22 09:01:33'),
	(651, 8, 'PRODUCT_INFO', 'PRODUCT_INFO', '2017-02-22 09:02:12'),
	(652, 8, 'ALL_NODE_CALC_TIME_MH2', 'ALL_NODE_CALC_TIME_MH2', '2017-02-22 09:02:12'),
	(653, 8, 'TEST', 'TEST', '2017-02-22 09:02:12'),
	(654, 8, 'END_DATA_TABLE', 'END_DATA_TABLE', '2017-02-26 03:17:31'),
	(655, 9, 'ds_result_14r14f9b', 'ds_result_14r14f9b', '2017-02-26 18:08:01'),
	(656, 9, 'ds_result_15r11426e', 'ds_result_15r11426e', '2017-02-26 18:08:01'),
	(657, 9, 'ds_result_19r1f6c1', 'ds_result_19r1f6c1', '2017-02-26 18:08:01'),
	(658, 9, 'ds_result_e_18r1160ea', 'ds_result_e_18r1160ea', '2017-02-26 18:08:01'),
	(659, 9, 'ds_result_e_17r17f35', 'ds_result_e_17r17f35', '2017-02-26 18:08:01'),
	(660, 9, 'ds_result_e_14r14f9b', 'ds_result_e_14r14f9b', '2017-02-26 18:08:01'),
	(661, 9, 'ds_result_e_2r18d61', 'ds_result_e_2r18d61', '2017-02-26 18:08:01'),
	(662, 9, 'ds_result_2r18d61', 'ds_result_2r18d61', '2017-02-26 18:08:01'),
	(663, 9, 'ds_result_1r11129', 'ds_result_1r11129', '2017-02-26 18:08:01'),
	(664, 9, 'ds_result_e_1r11129', 'ds_result_e_1r11129', '2017-02-26 18:08:01'),
	(665, 9, 'ds_result_18r1160ea', 'ds_result_18r1160ea', '2017-02-26 18:08:01'),
	(666, 9, 'ds_result_17r17f35', 'ds_result_17r17f35', '2017-02-26 18:08:01'),
	(667, 9, 'ds_result_e_15r11426e', 'ds_result_e_15r11426e', '2017-02-26 18:08:01'),
	(668, 9, 'ds_result_e_19r1f6c1', 'ds_result_e_19r1f6c1', '2017-02-26 18:08:01'),
	(669, 9, 'alatest', 'alatest', '2017-02-26 18:08:01');
/*!40000 ALTER TABLE `ds_source_table` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_task
DROP TABLE IF EXISTS `ds_task`;
CREATE TABLE IF NOT EXISTS `ds_task` (
  `tid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '任务ID',
  `name` varchar(50) NOT NULL COMMENT '名称',
  `trigger_type` tinyint(4) NOT NULL COMMENT '触发类型，1-time  2-data',
  `trigger_interval` int(11) NOT NULL DEFAULT '0' COMMENT '触发间隔',
  `stop_time` datetime DEFAULT NULL COMMENT '停止日期',
  `start_time` datetime NOT NULL COMMENT '开始日期',
  `options` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '选项',
  `status` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '状态',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`tid`),
  KEY `create_time` (`create_time`),
  KEY `trigger` (`trigger_type`),
  KEY `stop_time` (`stop_time`),
  KEY `name` (`name`),
  KEY `status` (`status`),
  KEY `start_time` (`start_time`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='任务表';

-- Dumping data for table datasquid.ds_task: ~8 rows (approximately)
DELETE FROM `ds_task`;
/*!40000 ALTER TABLE `ds_task` DISABLE KEYS */;
INSERT INTO `ds_task` (`tid`, `name`, `trigger_type`, `trigger_interval`, `stop_time`, `start_time`, `options`, `status`, `create_time`) VALUES
	(1, '测试任务', 2, 5, '2017-03-11 00:00:00', '2017-01-30 00:00:00', 1, 0, '2017-01-30 13:07:18'),
	(2, '物通时效运算', 2, 10, '2020-01-01 00:00:00', '2016-12-01 00:00:00', 1, 0, '2017-02-09 00:00:26'),
	(3, '美华时效运算', 2, 10, '2020-01-01 00:00:00', '2017-02-13 00:00:00', 1, 0, '2017-02-13 16:04:18'),
	(5, '企业信息汇聚', 2, 10, '2020-01-01 00:00:00', '2017-02-17 00:00:00', 1, 1, '2017-02-17 21:23:14'),
	(6, '综合统计任务', 2, 10, '1970-01-01 00:00:00', '2017-02-22 00:00:00', 1, 1, '2017-02-22 10:04:40'),
	(7, '贸易国别统计任务', 2, 10, '1970-01-01 00:00:00', '2017-02-22 00:00:00', 1, 0, '2017-02-22 16:16:21'),
	(8, '新物通时效运算', 2, 10, '2020-12-31 00:00:00', '2017-02-26 00:00:00', 1, 1, '2017-02-26 03:16:57'),
	(9, '新美华时效运算', 2, 10, '2020-12-31 00:00:00', '2017-02-26 00:00:00', 1, 1, '2017-02-26 04:07:56');
/*!40000 ALTER TABLE `ds_task` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_task_source
DROP TABLE IF EXISTS `ds_task_source`;
CREATE TABLE IF NOT EXISTS `ds_task_source` (
  `tsid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '任务源表ID',
  `tid` int(10) unsigned NOT NULL COMMENT '任务ID',
  `stid` int(10) unsigned NOT NULL COMMENT '源表ID',
  `last_position` int(10) unsigned NOT NULL COMMENT '最后位置',
  `sql_condition` varchar(500) NOT NULL DEFAULT '' COMMENT 'SQL表达式',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`tsid`),
  KEY `tid` (`tid`),
  KEY `stid` (`stid`),
  KEY `create_time` (`create_time`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='任务源表';

-- Dumping data for table datasquid.ds_task_source: ~8 rows (approximately)
DELETE FROM `ds_task_source`;
/*!40000 ALTER TABLE `ds_task_source` DISABLE KEYS */;
INSERT INTO `ds_task_source` (`tsid`, `tid`, `stid`, `last_position`, `sql_condition`, `create_time`) VALUES
	(1, 1, 474, 0, 'order by id', '2017-01-30 13:07:43'),
	(7, 2, 271, 0, 'WHERE app_status = \'800\'  ORDER BY app_time', '2017-02-09 00:11:23'),
	(8, 3, 128, 0, 'where  (last_status = \'6\' or last_status = \'13\' ) order by stime asc', '2017-02-13 20:39:56'),
	(12, 5, 618, 0, '', '2017-02-19 11:33:54'),
	(13, 6, 620, 0, '', '2017-02-22 10:05:24'),
	(14, 7, 620, 0, '', '2017-02-22 16:16:27'),
	(15, 8, 654, 0, 'where is_end_status = 1 and sys_type = \'WT\' order by serial_no asc', '2017-02-26 03:17:55'),
	(16, 2, 654, 0, 'where is_end_status = 1 and sys_type = \'WT\' order by serial_no asc', '2017-02-26 03:20:07'),
	(17, 9, 654, 0, 'where is_end_status = 1 and sys_type = \'MH\' order by serial_no asc', '2017-02-26 04:08:11');
/*!40000 ALTER TABLE `ds_task_source` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_test
DROP TABLE IF EXISTS `ds_test`;
CREATE TABLE IF NOT EXISTS `ds_test` (
  `order_no` varchar(50) DEFAULT NULL,
  `type_level_1` varchar(100) DEFAULT NULL,
  `type_level_2` varchar(100) DEFAULT NULL,
  `qty` decimal(20,6) DEFAULT NULL,
  `goods_type` varchar(100) DEFAULT NULL,
  `total_price` decimal(20,6) DEFAULT NULL,
  `calc_total_price` decimal(20,6) DEFAULT NULL,
  `currency` varchar(10) NOT NULL DEFAULT '',
  `customs_code` char(4) DEFAULT NULL,
  `ie_port` varchar(20) DEFAULT NULL,
  `ie_type` char(2) DEFAULT NULL,
  `sys_type` char(4) NOT NULL DEFAULT '',
  `order_time` datetime DEFAULT NULL,
  KEY `type_level_1` (`type_level_1`),
  KEY `type_level_2` (`type_level_2`),
  KEY `sys_type` (`sys_type`),
  KEY `ie_port` (`ie_port`),
  KEY `customs_code` (`customs_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table datasquid.ds_test: ~0 rows (approximately)
DELETE FROM `ds_test`;
/*!40000 ALTER TABLE `ds_test` DISABLE KEYS */;
/*!40000 ALTER TABLE `ds_test` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_threshold
DROP TABLE IF EXISTS `ds_threshold`;
CREATE TABLE IF NOT EXISTS `ds_threshold` (
  `thid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '阈值ID',
  `stid` int(10) unsigned NOT NULL COMMENT '业务类型ID',
  `lnid` int(10) unsigned NOT NULL COMMENT '环节ID',
  `threshold` int(10) NOT NULL COMMENT '阈值',
  `start_validity_time` date NOT NULL COMMENT '有效期开始时间',
  `end_validity_time` date NOT NULL COMMENT '有效期结束时间',
  `isopen` varchar(2) NOT NULL COMMENT '是否启用',
  `createtime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`thid`),
  KEY `isopen` (`isopen`),
  KEY `createtime` (`createtime`),
  KEY `stid` (`stid`),
  KEY `lnid` (`lnid`),
  KEY `start_validity_time` (`start_validity_time`),
  KEY `end_validity_time` (`end_validity_time`)
) ENGINE=InnoDB AUTO_INCREMENT=639411 DEFAULT CHARSET=utf8 COMMENT='阈值表';

-- Dumping data for table datasquid.ds_threshold: ~10 rows (approximately)
DELETE FROM `ds_threshold`;
/*!40000 ALTER TABLE `ds_threshold` DISABLE KEYS */;
INSERT INTO `ds_threshold` (`thid`, `stid`, `lnid`, `threshold`, `start_validity_time`, `end_validity_time`, `isopen`, `createtime`) VALUES
	(63922, 6392, 2, 144000, '2017-02-08', '2017-03-12', 'Y', '2017-02-28 00:16:02'),
	(63923, 6392, 3, 144000, '2017-02-02', '2017-03-05', 'Y', '2017-02-28 00:16:03'),
	(63924, 6392, 4, 144000, '2017-02-09', '2017-03-12', 'Y', '2017-02-28 00:16:03'),
	(63925, 6392, 1, 144000, '2017-02-10', '2017-03-11', 'N', '2017-02-28 10:28:00'),
	(63943, 6394, 3, 144000, '2017-01-01', '2017-12-31', 'Y', '2017-02-28 00:16:04'),
	(63944, 6394, 4, 144000, '2017-01-01', '2017-12-31', 'Y', '2017-02-28 00:16:05'),
	(63945, 6394, 5, 144000, '2017-01-01', '2017-12-31', 'Y', '2017-02-28 00:16:05'),
	(63946, 6394, 6, 144000, '2017-01-01', '2017-12-31', 'Y', '2017-02-28 00:16:05'),
	(63949, 6394, 9, 144000, '2017-01-01', '2017-12-31', 'Y', '2017-02-28 00:16:06'),
	(63961, 6396, 1, 144000, '2017-02-19', '2017-03-12', 'Y', '2017-02-28 00:16:06');
/*!40000 ALTER TABLE `ds_threshold` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_user
DROP TABLE IF EXISTS `ds_user`;
CREATE TABLE IF NOT EXISTS `ds_user` (
  `duid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户表主键ID',
  `account` varchar(20) NOT NULL COMMENT '用户帐号',
  `password` varchar(50) NOT NULL COMMENT '用户密码',
  `username` varchar(20) NOT NULL COMMENT '用户名',
  `company` varchar(20) NOT NULL COMMENT '公司名称',
  `phone` varchar(20) NOT NULL COMMENT '电话',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '最后一次更新时间',
  `session_id` varchar(50) NOT NULL DEFAULT '' COMMENT '会话ID',
  PRIMARY KEY (`duid`),
  UNIQUE KEY `account` (`account`),
  KEY `password` (`password`),
  KEY `username` (`username`),
  KEY `create_time` (`create_time`),
  KEY `session_id` (`session_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COMMENT='用户表';

-- Dumping data for table datasquid.ds_user: ~6 rows (approximately)
DELETE FROM `ds_user`;
/*!40000 ALTER TABLE `ds_user` DISABLE KEYS */;
INSERT INTO `ds_user` (`duid`, `account`, `password`, `username`, `company`, `phone`, `create_time`, `update_time`, `session_id`) VALUES
	(1, 'admin', '7hi6r07gn7pat32livn3boecgf97b4tr', '超级管理员', '科技有限公司', '13444444444', '2016-11-30 15:58:27', '2017-02-19 00:00:00', ' '),
	(5, 'xcp', '-517l9iu4adc4ao5594dh4qljjkoecrom', '逍遥de鹏少', '科技有限公司', '13444444444', '2016-12-08 18:10:44', NULL, ' '),
	(7, 'shixu', '-c59jg0er7he7vkjhvtvf9j4r385dvjrc', '史旭', 'Company', '13333333333', '2017-01-28 20:42:56', NULL, ''),
	(9, '空港管理员', 'ckv0u3emh6bhjb7bdq8e3ccjnpl6oqbm', '空港管理员', '科技公司', '13400000000', '2017-02-12 23:02:07', NULL, ''),
	(10, '陆港管理员', '-5qqo9gdolad2jf5q4ifbuumuoub5fnu', '陆港管理员', '科技公司', '13400000000', '2017-02-12 23:02:28', NULL, '');
/*!40000 ALTER TABLE `ds_user` ENABLE KEYS */;


-- Dumping structure for table datasquid.ds_user_rule
DROP TABLE IF EXISTS `ds_user_rule`;
CREATE TABLE IF NOT EXISTS `ds_user_rule` (
  `urid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户权限组关系表主键ID',
  `duid` int(10) unsigned NOT NULL COMMENT '用户表id',
  `rlid` int(10) unsigned NOT NULL COMMENT '权限组表id',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '最后一次更新时间',
  PRIMARY KEY (`urid`),
  UNIQUE KEY `uid` (`duid`),
  KEY `role_id` (`rlid`),
  KEY `create_time` (`create_time`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='用户-权限组 关系表';

-- Dumping data for table datasquid.ds_user_rule: ~6 rows (approximately)
DELETE FROM `ds_user_rule`;
/*!40000 ALTER TABLE `ds_user_rule` DISABLE KEYS */;
INSERT INTO `ds_user_rule` (`urid`, `duid`, `rlid`, `create_time`, `update_time`) VALUES
	(1, 1, 1, '2016-12-01 12:06:23', NULL),
	(8, 7, 6, '2017-01-28 22:45:02', '2017-02-15 00:00:00'),
	(10, 9, 3, '2017-02-12 23:02:44', NULL),
	(11, 10, 4, '2017-02-12 23:02:50', NULL),
	(12, 5, 6, '2017-02-19 17:29:17', NULL);
/*!40000 ALTER TABLE `ds_user_rule` ENABLE KEYS */;


-- Dumping structure for procedure datasquid.P_DS_CREATE_RESULT_E
DROP PROCEDURE IF EXISTS `P_DS_CREATE_RESULT_E`;
DELIMITER //
CREATE DEFINER=`datasquid`@`%` PROCEDURE `P_DS_CREATE_RESULT_E`(
	IN `tableName` VARCHAR(20),
	IN `columns` TEXT


)
BEGIN

		DECLARE sqlCode TEXT;

		SET @sqlCode = CONCAT('CREATE TABLE `ds_result_e_', tableName, '` ( `rexid` int(10) unsigned NOT NULL AUTO_INCREMENT, `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,  `hash_code` CHAR(32) NOT NULL, ', columns,', PRIMARY KEY (`rexid`), KEY `create_time` (`create_time`), KEY `hash_code`(`hash_code`), UNIQUE INDEX `unihash_code` (`hash_code`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;');

		PREPARE STMT FROM @sqlCode;
		EXECUTE STMT;

	END//
DELIMITER ;


-- Dumping structure for procedure datasquid.P_DS_CREATE_RESULT_HIT
DROP PROCEDURE IF EXISTS `P_DS_CREATE_RESULT_HIT`;
DELIMITER //
CREATE DEFINER=`datasquid`@`%` PROCEDURE `P_DS_CREATE_RESULT_HIT`(
	IN `tableName` VARCHAR(50)



)
BEGIN

		DECLARE sqlCode TEXT;

		SET @sqlCode = CONCAT('CREATE TABLE `ds_result_', tableName, '` ( `rxid` int(10) unsigned NOT NULL AUTO_INCREMENT, `rexid` int(10) unsigned NOT NULL, `hyear` smallint(5) unsigned NOT NULL, `hseason` tinyint(3) unsigned NOT NULL, `hmonth` tinyint(3) unsigned NOT NULL, `hweek` tinyint(3) unsigned NOT NULL, `hday` tinyint(3) unsigned NOT NULL, `hhour` tinyint(3) unsigned NOT NULL, `hminute` tinyint(3) unsigned NOT NULL, `hit` int(10) unsigned NOT NULL, `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `last_update` datetime DEFAULT NULL, `hash_code` CHAR(32) NOT NULL, PRIMARY KEY (`rxid`), KEY `hyear` (`hyear`), KEY `hseason` (`hseason`), KEY `hmonth` (`hmonth`), KEY `hweek` (`hweek`), KEY `hday` (`hday`), KEY `hhour` (`hhour`), KEY `hminute` (`hminute`), KEY `last_update` (`last_update`), KEY `rexid` (`rexid`), KEY `unihash_code`(`hash_code`), UNIQUE INDEX `hash_code` (`hash_code`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;');

		PREPARE STMT FROM @sqlCode;
		EXECUTE STMT;

	END//
DELIMITER ;


-- Dumping structure for procedure datasquid.P_DS_CREATE_TEST
DROP PROCEDURE IF EXISTS `P_DS_CREATE_TEST`;
DELIMITER //
CREATE DEFINER=`datasquid`@`%` PROCEDURE `P_DS_CREATE_TEST`(IN `columns` TEXT)
BEGIN

		DECLARE sqlCode TEXT;

		SET @sqlCode = CONCAT('CREATE TABLE IF NOT EXISTS `ds_test` (', columns, ') ENGINE=InnoDB DEFAULT CHARSET=utf8;');

		PREPARE STMT FROM @sqlCode;
		EXECUTE STMT;

	END//
DELIMITER ;


-- Dumping structure for procedure datasquid.P_DS_delete_TEST
DROP PROCEDURE IF EXISTS `P_DS_delete_TEST`;
DELIMITER //
CREATE DEFINER=`datasquid`@`%` PROCEDURE `P_DS_delete_TEST`()
BEGIN

		DROP TABLE IF EXISTS `ds_test`;

	END//
DELIMITER ;
/*!40014 SET FOREIGN_KEY_CHECKS=1 */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
